
R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin10.8.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> 
> 
> 
> # --------------------------------------
> # aim1-6-entero1600-regs-head-continuous-10d.R
> # ben arnold (benarnold@berkeley.edu)
> #
> # description:
> # estimate the association between water
> # quality indicator concentrations and
> # the risk of GI illness among swimmers
> # for the 13 beaches study
> #
> # Analyses are conducted for EPA 1600
> # Among Swimmers with Head Immmersion
> #
> # continuous exposure
> #
> # 10d follow-up
> #
> # version 1 (16 mar 2015)
> #
> # --------------------------------------
> 
> # --------------------------------------
> # preamble
> # --------------------------------------
> 
> rm(list=ls())
> library(sandwich)
> library(lmtest)
Loading required package: zoo

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

> 
> # source the base functions
> source("~/dropbox/13beaches/src/aim1/aim1-0-base-functions.R")
> 
> # --------------------------------------
> # load the analysis dataset
> # --------------------------------------
> 
> d <- read.csv("~/dropbox/13beaches/data/final/13beaches-analysis.csv")
> 
> # convert ID variables from factors to strings
> d$hhid <- as.character(d$hhid)
> d$indid <- as.character(d$indid)
> 
> # --------------------------------------
> # subset to observations for analysis
> # --------------------------------------
> 
> # drop individuals with baseline GI illness
> table(d$gibase)

         No   Yes 
   39 86019  2025 
> d <- subset(d,gibase!="Yes")
> dim(d)
[1] 86058  1196
> 
> # drop individuals with no water exposure
> table(d$anycontact)

         No   Yes 
  372 26384 59302 
> d <- subset(d,d$anycontact=="Yes")
> 
> # drop individuals with no water quality information
> table(d$nowq)

    0     1 
58686   616 
> d <- subset(d,nowq==0)
> 
> # create an indicator of >35 CFU/100ml
> d$entero35 <- ifelse(d$avgdyentero1600>log10(35),1,0)
> 
> 
> # --------------------------------------
> # subset dataset to variables of interest
> # to speed up computations / processing
> # --------------------------------------
> 
> # included: agecat, female, racewhite, gichron, anim_any, gicontactbase, rawfood
> # excluded: allergies (not relevant), frequency of beach visits (not measured at all beaches), digging in the sand (not measured at all beaches)
> 
> ad <- subset(d,select=c("beach","pointsource","marine","hhid","indid","groundwater","berm","anycontact","bodycontact","headunder","swallwater","gici3","gici10","age","agecat","agestrat","female","race","gichron","anim_any","gicontactbase","rawfood","entero35","avgdyentero1600","qavgdyentero1600","avgdyenteropcr","qavgdyenteropcr"))
> 
> # for exposure variables, replace missing factor level with missing values and recode the factors
> ad$anycontact[ad$anycontact==""] <- NA
> 	ad$anycontact <- factor(ad$anycontact)
> ad$bodycontact[ad$bodycontact==""] <- NA
> 	ad$bodycontact <- factor(ad$bodycontact)
> ad$headunder[ad$headunder==""] <- NA
> 	ad$headunder <- factor(ad$headunder)
> ad$swallwater[ad$swallwater==""] <- NA
> 	ad$swallwater <- factor(ad$swallwater)
> 
> # create a race=white indicator
> ad$racewhite <- factor(ifelse(ad$race=="white","Yes",NA),levels=c("No","Yes","Missing"))
> ad$racewhite[ad$race=="missing"]<-"Missing"
> ad$racewhite[ad$race!="white" & ad$race!="missing"] <- "No"
> 
> # for some covariates, move missing category to the last factor category
> levels(ad$gichron) <- c("Missing","No","Yes")
> 	ad$gichron <- factor(ad$gichron,levels=c("No","Yes","Missing"))
> ad$gicontactbase <- factor(ad$gicontactbase,levels=c("No","Yes","Missing"))
> 
> # reorder groundwater factor for convenience w/ reg estimates
> ad$groundwater <- factor(ad$groundwater,levels=c("Below median flow","Above median flow",""))
> 
> 
> # re-order the age stratification factor so that older ages are reference (for convenience, since younger children have higher CIRs)
> ad$agestrat <- factor(ad$agestrat,levels=c(">10","(4, 10]","(0, 4]",""))
> 
> # create a shorter variable name for Entero 1600 for convenience
> ad$entero1600 <- ad$avgdyentero1600
> ad$qentero1600 <- factor(ad$qavgdyentero1600)
> 
> 
> # --------------------------------------
> # esimate risk of GI illness associated
> # with exposure to EPA 1600 quintiles
> # Head Immersion
> # All ages
> # --------------------------------------
> 
> # subset to non-missing exposure categories
> # to make the robust CI calcs work
> ah <- subset(ad,ad$headunder=="Yes" & is.na(ad$entero1600)==FALSE)
> 
> 
> # tests of interaction by environmental conditions for Avalon and Doheny
> av.h.noint <-glm(gici10~ entero1600+groundwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=ah[ah$beach=="Avalon",])
> av.h <-glm(gici10~ entero1600*groundwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=ah[ah$beach=="Avalon",])
> 	lrtest(av.h.noint,av.h)
Likelihood ratio test

Model 1: gici10 ~ entero1600 + groundwater + agecat + female + racewhite + 
    gichron + anim_any + gicontactbase + rawfood
Model 2: gici10 ~ entero1600 * groundwater + agecat + female + racewhite + 
    gichron + anim_any + gicontactbase + rawfood
  #Df  LogLik Df  Chisq Pr(>Chisq)  
1  20 -763.98                       
2  21 -762.55  1 2.8585    0.09089 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> dh.h.noint <-glm(gici10~entero1600+berm +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=ah[ah$beach=="Doheny",])
> dh.h <-glm(gici10~ entero1600*berm +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=ah[ah$beach=="Doheny",])
> 	lrtest(dh.h.noint,dh.h)
Likelihood ratio test

Model 1: gici10 ~ entero1600 + berm + agecat + female + racewhite + gichron + 
    anim_any + gicontactbase + rawfood
Model 2: gici10 ~ entero1600 * berm + agecat + female + racewhite + gichron + 
    anim_any + gicontactbase + rawfood
  #Df  LogLik Df  Chisq Pr(>Chisq)
1  19 -752.94                     
2  20 -751.74  1 2.4004     0.1213
> 
> 
> # --------------------------------------
> # Freshwater beaches
> 
> # Huntington
> hufit <- mpreg(gici10~entero1600 +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Huntington",vcv=TRUE)
> 
> # Silver
> sifit <- mpreg(gici10~entero1600 +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Silver",vcv=TRUE)
> 
> # Washington Park
> wpfit <- mpreg(gici10~entero1600 +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Washington Park",vcv=TRUE)
> 
> # West
> wefit <- mpreg(gici10~entero1600 +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="West",vcv=TRUE)
> 
> # --------------------------------------
> # Marine beaches
> 
> # Avalon
> avfit <- mpreg(gici10~entero1600*groundwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Avalon",vcv=TRUE)
> 
> # Boqueron
> bofit <- mpreg(gici10~entero1600 +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Boqueron",vcv=TRUE)
> 
> # Doheny
> dhfit <- mpreg(gici10~entero1600*berm +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Doheny",vcv=TRUE)
> 
> # Edgewater
> edfit <- mpreg(gici10~entero1600 +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Edgewater",vcv=TRUE)
> 
> # Fairhope
> fafit <- mpreg(gici10~entero1600 +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Fairhope",vcv=TRUE)
> 
> # Goddard
> gdfit <- mpreg(gici10~entero1600 +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Goddard",vcv=TRUE)
> 
> # Malibu
> mafit <- mpreg(gici10~entero1600 +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Malibu",vcv=TRUE)
> 
> # Mission Bay
> mbfit <- mpreg(gici10~entero1600 +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Mission Bay",vcv=TRUE)
Warning message:
glm.fit: fitted rates numerically 0 occurred 
> 
> # Surfside
> sufit <- mpreg(gici10~entero1600 +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Surfside",vcv=TRUE)
> 
> 
> # --------------------------------------
> # Pooled estimates
> 
> # all beaches
> all.fit <- glm(gici10~entero1600 +marine+pointsource+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ah)
> 	all.VC <- cl(ah,fm=all.fit,cluster=ah$hhid)
> 	all.head <- coeftest(all.fit, all.VC) 
> 
> # Interaction model with fresh v. marine beaches
> mf.fit <- glm(gici10~entero1600*marine +pointsource+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ah)
> 	# commented out robust SE calcs b/c not used (no interaction)
> 	# mf.VC <- cl(ah,fm=mf.fit,cluster=ah$hhid)
> 	# mf.head <- coeftest(mf.fit, mf.VC) 
> 	lrtest(all.fit,mf.fit)
Likelihood ratio test

Model 1: gici10 ~ entero1600 + marine + pointsource + agecat + female + 
    racewhite + gichron + anim_any + gicontactbase + rawfood + 
    beach
Model 2: gici10 ~ entero1600 * marine + pointsource + agecat + female + 
    racewhite + gichron + anim_any + gicontactbase + rawfood + 
    beach
  #Df  LogLik Df  Chisq Pr(>Chisq)
1  33 -8297.8                     
2  34 -8297.2  1 1.2229     0.2688
> 
> # Interaction model with point v. non-point source beaches
> ps.fit <- glm(gici10~entero1600*pointsource +marine+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ah)
> 	# commented out robust SE calcs b/c not used (no interaction)
> 	ps.VC <- cl(ah,fm=ps.fit,cluster=ah$hhid)
> 	ps.head <- coeftest(ps.fit, ps.VC) 
> 	lrtest(all.fit,ps.fit)
Likelihood ratio test

Model 1: gici10 ~ entero1600 + marine + pointsource + agecat + female + 
    racewhite + gichron + anim_any + gicontactbase + rawfood + 
    beach
Model 2: gici10 ~ entero1600 * pointsource + marine + agecat + female + 
    racewhite + gichron + anim_any + gicontactbase + rawfood + 
    beach
  #Df  LogLik Df  Chisq Pr(>Chisq)
1  33 -8297.8                     
2  34 -8297.7  1 0.3544     0.5516
> 
> # --------------------------------------
> # Age-stratified estimates and LR tests of
> # interaction
> 
> #subset dataset to those without missing ages to facilitate programming below
> table(ah$agestrat)

    >10 (4, 10]  (0, 4]         
  25786    7755    2814     583 
> aha <- subset(ah,agestrat!="")
> 
> # reduced models for LR tests of indicator x age interactions
> noage.fit <- glm(gici10~entero1600 +agestrat+marine+pointsource+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=aha)
> 
> # Pooled estimate (Age 0-4, 5-10, >10), Head Immersion
> agestrat.fit <- glm(gici10~ entero1600*agestrat +marine+pointsource+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=aha)
> 	agestrat.VC <- cl(aha,fm=agestrat.fit,cluster=aha$hhid)
> 	agestrat.head <- coeftest(agestrat.fit, agestrat.VC) 
> 	lrtest(noage.fit,agestrat.fit)
Likelihood ratio test

Model 1: gici10 ~ entero1600 + agestrat + marine + pointsource + female + 
    racewhite + gichron + anim_any + gicontactbase + rawfood + 
    beach
Model 2: gici10 ~ entero1600 * agestrat + marine + pointsource + female + 
    racewhite + gichron + anim_any + gicontactbase + rawfood + 
    beach
  #Df  LogLik Df  Chisq Pr(>Chisq)
1  26 -8183.9                     
2  28 -8183.4  2 0.9639     0.6176
> 
> # 3-way interaction model of entero x age x pointsource
> ageps.fit <- glm(gici10~ (entero1600*agestrat*pointsource) +marine+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=aha)
> 	ageps.VC <- cl(aha,fm=ageps.fit,cluster=aha$hhid)
> 	ageps.head <- coeftest(ageps.fit,ageps.VC)
> 	lrtest(noage.fit,ageps.fit)
Likelihood ratio test

Model 1: gici10 ~ entero1600 + agestrat + marine + pointsource + female + 
    racewhite + gichron + anim_any + gicontactbase + rawfood + 
    beach
Model 2: gici10 ~ (entero1600 * agestrat * pointsource) + marine + female + 
    racewhite + gichron + anim_any + gicontactbase + rawfood + 
    beach
  #Df  LogLik Df  Chisq Pr(>Chisq)
1  26 -8183.9                     
2  33 -8179.8  7 8.1026     0.3236
> 	lrtest(agestrat.fit,ageps.fit)
Likelihood ratio test

Model 1: gici10 ~ entero1600 * agestrat + marine + pointsource + female + 
    racewhite + gichron + anim_any + gicontactbase + rawfood + 
    beach
Model 2: gici10 ~ (entero1600 * agestrat * pointsource) + marine + female + 
    racewhite + gichron + anim_any + gicontactbase + rawfood + 
    beach
  #Df  LogLik Df  Chisq Pr(>Chisq)
1  28 -8183.4                     
2  33 -8179.8  5 7.1387     0.2105
> 	
> 
> # --------------------------------------
> # Estimate adjusted CIRs
> # From the overall pooled model and
> # From the Entero X Age interaction model
> # --------------------------------------
> 
> # function to get Estimates and CIs from a linear combination of regression coefficients
> lccalc <- function(lc,x,vcv) {
+ 	# lc : linear combination of coefficients
+ 	# x : log-linear model object returned from coeftest (class=coeftest)
+ 	# vcv : variance-covariance matrix of coefficients for robust SEs
+ 	est <- exp(t(lc)%*%x[,1])
+ 	se  <- sqrt( t(lc)%*%vcv%*%lc )
+ 	lb <- exp(log(est)-1.96*se)
+ 	ub <- exp(log(est)+1.96*se)
+ 	res <- c(est,lb,ub)
+ 	return(res)
+ }
> 
> 
> # --------------------------------------
> # Overall adjusted CIR
> lc <- c(0,1,rep(0,nrow(all.head)-2))
> cir.all <- lccalc(lc,all.head,all.VC)
> 
> 
> # --------------------------------------
> # specify the linear combinations of 
> # regression coefficients for each estimate
> 
>  
> lc <- rep(0,nrow(agestrat.head))
> vs <- rownames(agestrat.head)
> 
> # Ages >10, Q1 - Q4
> lc10 <- lc
> lc10[vs=="entero1600"] <- 1
> cir.age11plus <- lccalc(lc10,agestrat.head,agestrat.VC)
> cir.age11plus
[1] 1.0537295 0.9284097 1.1959653
> 
> # Ages 5 - 10, Q1 - Q4
> lc5 <- lc
> lc5[vs=="entero1600"|vs=="entero1600:agestrat(4, 10]"] <- 1
> cir.age5to10 <- lccalc(lc5,agestrat.head,agestrat.VC)
> cir.age5to10
[1] 1.1021736 0.9210889 1.3188593
> 
> # Ages 0 - 4,  Q1 - Q4 
> lc0 <- lc
> lc0[vs=="entero1600"|vs=="entero1600:agestrat(0, 4]"] <- 1
> cir.age0to4 <- lccalc(lc0,agestrat.head,agestrat.VC)
> cir.age0to4
[1] 0.9654892 0.7712899 1.2085851
> 
> # colnames(cir.all) <- colnames(cir.age11plus) <- colnames(cir.age5to10) <- colnames(cir.age0to4) <- paste("Entero1600-Q",2:4,sep="")
> 
> # rownames(cir.all) <- rownames(cir.age11plus) <- rownames(cir.age5to10) <- rownames(cir.age0to4) <- c("CIR","CIRlb","CIRub")
> 
> 
> # --------------------------------------
> # save the objects
> # --------------------------------------
> save.image("~/dropbox/13beaches/aim1-results/rawoutput/aim1-entero1600-regs-head-continuous-10d.Rdata")
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
180.152  11.638 210.836 
