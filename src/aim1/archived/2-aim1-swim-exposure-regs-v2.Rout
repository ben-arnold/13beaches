
R version 3.0.3 (2014-03-06) -- "Warm Puppy"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin10.8.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> 
> 
> 
> # --------------------------------------
> # aim1-2-swim-exposure-regs.R
> # ben arnold (benarnold@berkeley.edu)
> #
> # description:
> # estimate the association between 
> # water exposure and the risk of diarrhea
> # for the 13 beaches study
> #
> # version 2 (18 mar 2015)
> # run analyses using diarrhea (primary outcome)
> #
> # version 1 (11 feb 2015)
> # (previously named aim1-2-swim-exposure-regs-allages.R)
> #
> # --------------------------------------
> 
> # --------------------------------------
> # preamble
> # --------------------------------------
> 
> rm(list=ls())
> library(sandwich)
> library(lmtest)
Loading required package: zoo

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

> 
> 
> # source the base functions
> source("~/dropbox/13beaches/src/aim1/aim1-0-base-functions.R")
> 
> 
> # --------------------------------------
> # load the analysis dataset
> # --------------------------------------
> 
> d <- read.csv("~/dropbox/13beaches/data/final/13beaches-analysis.csv")
> 
> # convert ID variables from factors to strings
> d$hhid <- as.character(d$hhid)
> d$indid <- as.character(d$indid)
> 
> # --------------------------------------
> # subset to observations for analysis
> # --------------------------------------
> 
> 
> # drop individuals with baseline GI illness
> table(d$gibase)

         No   Yes 
   39 86019  2025 
> d <- subset(d,gibase!="Yes")
> dim(d)
[1] 86058  1196
> 
> 
> # --------------------------------------
> # subset dataset to variables of interest
> # to speed up computations / processing
> # --------------------------------------
> 
> # included: agecat, female, racewhite, gichron, anim_any, gicontactbase, rawfood
> # excluded: allergies (not relevant), frequency of beach visits (not measured at all beaches), digging in the sand (not measured at all beaches)
> 
> ad <- subset(d,select=c("beach","pointsource","marine","hhid","indid","groundwater","berm","anycontact","bodycontact","headunder","swallwater","diarrheaci3","diarrheaci10","age","agecat","agestrat","female","race","gichron","anim_any","gicontactbase","rawfood"))
> 
> # for exposure variables, replace missing factor level with missing values and recode the factors
> ad$anycontact[ad$anycontact==""] <- NA
> 	ad$anycontact <- factor(ad$anycontact)
> ad$bodycontact[ad$bodycontact==""] <- NA
> 	ad$bodycontact <- factor(ad$bodycontact)
> ad$headunder[ad$headunder==""] <- NA
> 	ad$headunder <- factor(ad$headunder)
> ad$swallwater[ad$swallwater==""] <- NA
> 	ad$swallwater <- factor(ad$swallwater)
> 
> # create a race=white indicator
> ad$racewhite <- factor(ifelse(ad$race=="white","Yes",NA),levels=c("No","Yes","Missing"))
> ad$racewhite[ad$race=="missing"]<-"Missing"
> ad$racewhite[ad$race!="white" & ad$race!="missing"] <- "No"
> 
> # for some covariates, move missing category to the last factor category
> levels(ad$gichron) <- c("Missing","No","Yes")
> 	ad$gichron <- factor(ad$gichron,levels=c("No","Yes","Missing"))
> ad$gicontactbase <- factor(ad$gicontactbase,levels=c("No","Yes","Missing"))
> 
> 
> # reorder groundwater factor for convenience w/ reg estimates
> ad$groundwater <- factor(ad$groundwater,levels=c("Above median flow","Below median flow",""))
> 
> # create a factor variable for fixed effects that includes separate indicators for avalon/doheny
> # effect modification conditions (Not used, since no evidence for effect modification)
> ad$beachfi <- factor(ad$beach,levels=c(levels(ad$beach),"Avalon, High groundwater","Avalon, Low groundwater","Doheny, Berm open","Doheny, Berm closed"))
> ad$beachfi[ad$beach=="Avalon" & ad$groundwater=="Below median flow"] <- "Avalon, High groundwater"
> ad$beachfi[ad$beach=="Avalon" & ad$groundwater=="Above median flow"] <- "Avalon, Low groundwater"
> ad$beachfi[ad$beach=="Doheny" & ad$berm=="Open"]   <- "Doheny, Berm open"
> ad$beachfi[ad$beach=="Doheny" & ad$berm=="Closed"] <- "Doheny, Berm closed"
> ad$beachfi <- relevel(ad$beachfi,"Boqueron")
> 
> 
> # --------------------------------------
> # esimate risk of GI illness in 3 days
> # associated with ocean exposure
> # adjusted estimates only
> # --------------------------------------
> 
> # adjustment covariates:
> # +marine+pointsource+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood
> 
> # --------------------------------------
> # Within each swim exposure category,
> # test for interation by
> # environmental conditions at 
> # Avalon (groundwater) and Doheny (berm)
> # to see if they can be collapsed into
> # a single estimate or whether we need
> # to consider conditional estimates for
> # these two beaches
> # --------------------------------------
> 
> 
> # --------------------------------------
> # All Ages
> # 3 day follow-up
> # Body Immersion
> # --------------------------------------
> 
> # subset to non-missing exposure categories
> # to make the robust CI calcs work
> ab <- subset(ad,is.na(ad$anycontact)==FALSE)
> ab <- subset(ab,is.na(ab$bodycontact)==FALSE)
> 
> # further subset to non-missing ages for the stratified estimates
> aba <- subset(ab,ab$agestrat!="")
> 
> # tests of interaction by environmental conditions for Avalon and Doheny
> # (no evidence for interaction)
> av.b.noint <-glm(diarrheaci3~anycontact+bodycontact +groundwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=ab[ab$beach=="Avalon",])
> av.b <-glm(diarrheaci3~(anycontact+bodycontact)*groundwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=ab[ab$beach=="Avalon",])
> 	lrtest(av.b.noint,av.b)
Likelihood ratio test

Model 1: diarrheaci3 ~ anycontact + bodycontact + groundwater + agecat + 
    female + racewhite + gichron + anim_any + gicontactbase + 
    rawfood
Model 2: diarrheaci3 ~ (anycontact + bodycontact) * groundwater + agecat + 
    female + racewhite + gichron + anim_any + gicontactbase + 
    rawfood
  #Df  LogLik Df  Chisq Pr(>Chisq)
1  21 -685.08                     
2  23 -684.84  2 0.4711     0.7901
> 
> dh.b.noint <-glm(diarrheaci3~anycontact+bodycontact +berm +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=ab[ab$beach=="Doheny",])
> dh.b <-glm(diarrheaci3~(anycontact+bodycontact)*berm +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=ab[ab$beach=="Doheny",])
> 	lrtest(dh.b.noint,dh.b)
Likelihood ratio test

Model 1: diarrheaci3 ~ anycontact + bodycontact + berm + agecat + female + 
    racewhite + gichron + anim_any + gicontactbase + rawfood
Model 2: diarrheaci3 ~ (anycontact + bodycontact) * berm + agecat + female + 
    racewhite + gichron + anim_any + gicontactbase + rawfood
  #Df  LogLik Df  Chisq Pr(>Chisq)
1  21 -832.79                     
2  23 -832.17  2 1.2428     0.5372
> 
> # --------------------------------------
> # Freshwater beaches
> 
> # Huntington
> hu.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Huntington",vcv=TRUE)
> 
> # Silver
> si.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Silver",vcv=TRUE)
> 
> # Washington Park
> wp.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Washington Park",vcv=TRUE)
Warning message:
glm.fit: fitted rates numerically 0 occurred 
> 
> # West
> we.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="West",vcv=TRUE)
> 
> # --------------------------------------
> # Marine beaches
> 
> # Avalon
> av.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Avalon",vcv=TRUE)
> 
> # Boqueron
> bo.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Boqueron",vcv=TRUE)
> 
> # Doheny
> dh.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Doheny",vcv=TRUE)
> 
> # Edgewater
> ed.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Edgewater",vcv=TRUE)
> 
> # Fairhope
> fa.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Fairhope",vcv=TRUE)
> 
> # Goddard
> gd.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Goddard",vcv=TRUE)
Warning message:
glm.fit: fitted rates numerically 0 occurred 
> 
> # Malibu
> ma.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Malibu",vcv=TRUE)
> 
> # Mission Bay
> mb.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Mission Bay",vcv=TRUE)
Warning message:
glm.fit: fitted rates numerically 0 occurred 
> 
> # Surfside
> su.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Surfside",vcv=TRUE)
> 
> # --------------------------------------
> # Pooled estimates
> 
> ### Pooled estimate (all beaches), Body Immersion
> all.3body.fit <- glm(diarrheaci3~anycontact+bodycontact +marine+pointsource+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ab)
> 	all.3body.VC <- cl(ab,fm=all.3body.fit,cluster=ab$hhid)
> 	all.3body <- coeftest(all.3body.fit, all.3body.VC) 
> 
> ### Pooled estimate (point vs. non-point source conditions), Body Immersion
> ps.3body.fit <- glm(diarrheaci3~(anycontact+bodycontact)*pointsource +marine+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ab)
> 	ps.3body.VC <- cl(ab,fm=ps.3body.fit,cluster=ab$hhid)
> 	ps.3body <- coeftest(ps.3body.fit, ps.3body.VC) 
> 	lrtest(all.3body.fit,ps.3body.fit)
Likelihood ratio test

Model 1: diarrheaci3 ~ anycontact + bodycontact + marine + pointsource + 
    agecat + female + racewhite + gichron + anim_any + gicontactbase + 
    rawfood + beach
Model 2: diarrheaci3 ~ (anycontact + bodycontact) * pointsource + marine + 
    agecat + female + racewhite + gichron + anim_any + gicontactbase + 
    rawfood + beach
  #Df  LogLik Df Chisq Pr(>Chisq)
1  34 -7880.1                    
2  36 -7879.2  2 1.771     0.4125
> 
> ### Pooled estimate (fresh vs. marine), Body Immersion
> fm.3body.fit <- glm(diarrheaci3~(anycontact+bodycontact)*marine +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ab)
> 	fm.3body.VC <- cl(ab,fm=fm.3body.fit,cluster=ab$hhid)
> 	fm.3body <- coeftest(fm.3body.fit, fm.3body.VC)
> 	lrtest(all.3body.fit,fm.3body.fit)
Likelihood ratio test

Model 1: diarrheaci3 ~ anycontact + bodycontact + marine + pointsource + 
    agecat + female + racewhite + gichron + anim_any + gicontactbase + 
    rawfood + beach
Model 2: diarrheaci3 ~ (anycontact + bodycontact) * marine + agecat + 
    female + racewhite + gichron + anim_any + gicontactbase + 
    rawfood + beach
  #Df  LogLik Df  Chisq Pr(>Chisq)   
1  34 -7880.1                        
2  35 -7875.8  1 8.6007    0.00336 **
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> 
> # --------------------------------------
> # Age-stratified estimates and LR tests of
> # interaction
> 
> ### reduced models for LR tests of exposure x age interactions
> noagestrat.3body.fit <- glm(diarrheaci3~anycontact+bodycontact +agestrat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=aba)
> 
> 
> ### Pooled estimate (Age 0-4, 5-10, >10), Body Immersion
> agestrat.3body.fit <- glm(diarrheaci3~(anycontact+bodycontact)*agestrat +marine+pointsource+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=aba)
> 	agestrat.3body.VC <- cl(aba,fm=agestrat.3body.fit,cluster=aba$hhid)
> 	agestrat.3body <- coeftest(agestrat.3body.fit, agestrat.3body.VC) 
> 	lrtest(noagestrat.3body.fit,agestrat.3body.fit)
Likelihood ratio test

Model 1: diarrheaci3 ~ anycontact + bodycontact + agestrat + female + 
    racewhite + gichron + anim_any + gicontactbase + rawfood + 
    beach
Model 2: diarrheaci3 ~ (anycontact + bodycontact) * agestrat + marine + 
    pointsource + female + racewhite + gichron + anim_any + gicontactbase + 
    rawfood + beach
  #Df  LogLik Df  Chisq Pr(>Chisq)
1  26 -7800.3                     
2  31 -7799.3  5 2.0154      0.847
> 
> 
> 
> # --------------------------------------
> # All Ages
> # 3 day follow-up
> # Head Immersion
> # --------------------------------------
> 
> # subset to non-missing exposure categories
> # to make the robust CI calcs work
> ah <- subset(ad,is.na(ad$anycontact)==FALSE)
> ah <- subset(ah,is.na(ah$headunder)==FALSE)
> 
> # further subset to non-missing ages for the stratified estimates
> aha <- subset(ah,ah$agestrat!="")
> 
> # tests of interaction by environmental conditions for Avalon and Doheny
> # (no evidence for interaction)
> av.h.noint <-glm(diarrheaci3~anycontact+bodycontact +groundwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=ah[ah$beach=="Avalon",])
> av.h <-glm(diarrheaci3~(anycontact+bodycontact)*groundwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=ah[ah$beach=="Avalon",])
> 	lrtest(av.h.noint,av.h)
Likelihood ratio test

Model 1: diarrheaci3 ~ anycontact + bodycontact + groundwater + agecat + 
    female + racewhite + gichron + anim_any + gicontactbase + 
    rawfood
Model 2: diarrheaci3 ~ (anycontact + bodycontact) * groundwater + agecat + 
    female + racewhite + gichron + anim_any + gicontactbase + 
    rawfood
  #Df  LogLik Df  Chisq Pr(>Chisq)
1  21 -685.08                     
2  23 -684.84  2 0.4711     0.7901
> 
> dh.h.noint <-glm(diarrheaci3~anycontact+bodycontact +berm +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=ah[ah$beach=="Doheny",])
> dh.h <-glm(diarrheaci3~(anycontact+bodycontact)*berm +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=ah[ah$beach=="Doheny",])
> 	lrtest(dh.h.noint,dh.h)
Likelihood ratio test

Model 1: diarrheaci3 ~ anycontact + bodycontact + berm + agecat + female + 
    racewhite + gichron + anim_any + gicontactbase + rawfood
Model 2: diarrheaci3 ~ (anycontact + bodycontact) * berm + agecat + female + 
    racewhite + gichron + anim_any + gicontactbase + rawfood
  #Df  LogLik Df  Chisq Pr(>Chisq)
1  21 -832.79                     
2  23 -832.17  2 1.2428     0.5372
> 
> 
> # Freshwater beaches
> 
> # Huntington
> hu.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Huntington",vcv=TRUE)
> 
> # Silver
> si.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Silver",vcv=TRUE)
> 
> # Washington Park
> wp.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Washington Park",vcv=TRUE)
Warning message:
glm.fit: fitted rates numerically 0 occurred 
> 
> # West
> we.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="West",vcv=TRUE)
> 
> # Marine beaches
> 
> # Avalon
> av.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Avalon",vcv=TRUE)
> 
> # Boqueron
> bo.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Boqueron",vcv=TRUE)
> 
> # Doheny
> dh.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Doheny",vcv=TRUE)
> 
> # Edgewater
> ed.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Edgewater",vcv=TRUE)
> 
> # Fairhope
> fa.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Fairhope",vcv=TRUE)
> 
> # Goddard
> gd.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Goddard",vcv=TRUE)
Warning message:
glm.fit: fitted rates numerically 0 occurred 
> 
> # Malibu
> ma.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Malibu",vcv=TRUE)
> 
> # Mission Bay
> mb.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Mission Bay",vcv=TRUE)
Warning message:
glm.fit: fitted rates numerically 0 occurred 
> 
> # Surfside
> su.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Surfside",vcv=TRUE)
> 
> 
> 
> # --------------------------------------
> # Pooled estimates
> 
> ### Pooled estimate (all beaches), Head Immersion
> all.3head.fit <- glm(diarrheaci3~anycontact+headunder +marine+pointsource+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ah)
> 	all.3head.VC <- cl(ah,fm=all.3head.fit,cluster=ah$hhid)
> 	all.3head <- coeftest(all.3head.fit, all.3head.VC) 
> 
> ### Pooled estimate (point vs. non-point source conditions), Head Immersion
> ps.3head.fit <- glm(diarrheaci3~(anycontact+ headunder)*pointsource +marine+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ah)
> 	ps.3head.VC <- cl(ah,fm=ps.3head.fit,cluster=ah$hhid)
> 	ps.3head <- coeftest(ps.3head.fit, ps.3head.VC) 
> 	lrtest(all.3head.fit,ps.3head.fit)
Likelihood ratio test

Model 1: diarrheaci3 ~ anycontact + headunder + marine + pointsource + 
    agecat + female + racewhite + gichron + anim_any + gicontactbase + 
    rawfood + beach
Model 2: diarrheaci3 ~ (anycontact + headunder) * pointsource + marine + 
    agecat + female + racewhite + gichron + anim_any + gicontactbase + 
    rawfood + beach
  #Df  LogLik Df  Chisq Pr(>Chisq)
1  34 -7876.1                     
2  36 -7876.1  2 0.1377     0.9335
> 
> ### Pooled estimate (fresh vs. marine), Head Immersion
> fm.3head.fit <- glm(diarrheaci3~(anycontact+ headunder)*marine +pointsource+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ah)
> 	fm.3head.VC <- cl(ah,fm=fm.3head.fit,cluster=ah$hhid)
> 	fm.3head <- coeftest(fm.3head.fit, fm.3head.VC)
> 	lrtest(all.3head.fit,fm.3head.fit)
Likelihood ratio test

Model 1: diarrheaci3 ~ anycontact + headunder + marine + pointsource + 
    agecat + female + racewhite + gichron + anim_any + gicontactbase + 
    rawfood + beach
Model 2: diarrheaci3 ~ (anycontact + headunder) * marine + pointsource + 
    agecat + female + racewhite + gichron + anim_any + gicontactbase + 
    rawfood + beach
  #Df  LogLik Df  Chisq Pr(>Chisq)  
1  34 -7876.1                       
2  36 -7873.6  2 5.0384    0.08052 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> 
> # --------------------------------------
> # Age-stratified estimates and LR tests of
> # interaction
> 
> ### reduced model for LR tests of exposure x age interactions
> noagestrat.3head.fit <- glm(diarrheaci3~anycontact+headunder +agestrat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=aha)
> 
> ### Pooled estimate (Age 0-4, 5-10, >10), Head Immersion
> agestrat.3head.fit <- glm(diarrheaci3~(anycontact+headunder)*agestrat +marine+pointsource+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=aha)
> 	agestrat.3head.VC <- cl(aha,fm=agestrat.3head.fit,cluster=aha$hhid)
> 	agestrat.3head <- coeftest(agestrat.3head.fit, agestrat.3head.VC) 
> 	lrtest(noagestrat.3head.fit,agestrat.3head.fit)
Likelihood ratio test

Model 1: diarrheaci3 ~ anycontact + headunder + agestrat + female + racewhite + 
    gichron + anim_any + gicontactbase + rawfood + beach
Model 2: diarrheaci3 ~ (anycontact + headunder) * agestrat + marine + 
    pointsource + female + racewhite + gichron + anim_any + gicontactbase + 
    rawfood + beach
  #Df  LogLik Df  Chisq Pr(>Chisq)
1  26 -7796.0                     
2  31 -7793.2  5 5.6559     0.3412
> 
> 
> 
> # --------------------------------------
> # All Ages
> # 3 day follow-up
> # Swallowed Water
> # --------------------------------------
> 
> # subset to non-missing exposure categories
> # to make the robust CI calcs work
> as <- subset(ad,is.na(ad$anycontact)==FALSE)
> as <- subset(as,is.na(as$swallwater)==FALSE)
> 
> # further subset to non-missing ages for the stratified estimates
> asa <- subset(as,as$agestrat!="")
> 
> # tests of interaction by environmental conditions for Avalon and Doheny
> # (no evidence for interaction)
> av.s.noint <-glm(diarrheaci3~anycontact+bodycontact +groundwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=as[as$beach=="Avalon",])
> av.s <-glm(diarrheaci3~(anycontact+bodycontact)*groundwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=as[as$beach=="Avalon",])
> 	lrtest(av.s.noint,av.s)
Likelihood ratio test

Model 1: diarrheaci3 ~ anycontact + bodycontact + groundwater + agecat + 
    female + racewhite + gichron + anim_any + gicontactbase + 
    rawfood
Model 2: diarrheaci3 ~ (anycontact + bodycontact) * groundwater + agecat + 
    female + racewhite + gichron + anim_any + gicontactbase + 
    rawfood
  #Df  LogLik Df  Chisq Pr(>Chisq)
1  21 -685.08                     
2  23 -684.84  2 0.4711     0.7901
> 
> dh.s.noint <-glm(diarrheaci3~anycontact+bodycontact +berm +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=as[as$beach=="Doheny",])
> dh.s <-glm(diarrheaci3~(anycontact+bodycontact)*berm +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=as[as$beach=="Doheny",])
> 	lrtest(dh.s.noint,dh.s)
Likelihood ratio test

Model 1: diarrheaci3 ~ anycontact + bodycontact + berm + agecat + female + 
    racewhite + gichron + anim_any + gicontactbase + rawfood
Model 2: diarrheaci3 ~ (anycontact + bodycontact) * berm + agecat + female + 
    racewhite + gichron + anim_any + gicontactbase + rawfood
  #Df  LogLik Df  Chisq Pr(>Chisq)
1  21 -832.79                     
2  23 -832.17  2 1.2428     0.5372
> 
> # --------------------------------------
> # Freshwater beaches
> 
> # Huntington
> hu.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Huntington",vcv=TRUE)
> 
> # Silver
> si.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Silver",vcv=TRUE)
> 
> # Washington Park
> wp.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Washington Park",vcv=TRUE)
Warning message:
glm.fit: fitted rates numerically 0 occurred 
> 
> # West
> we.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="West",vcv=TRUE)
> 
> # --------------------------------------
> # Marine beaches
> 
> # Avalon
> av.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Avalon",vcv=TRUE)
> 
> # Boqueron
> bo.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Boqueron",vcv=TRUE)
> 
> # Doheny
> dh.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Doheny",vcv=TRUE)
> 
> # Edgewater
> ed.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Edgewater",vcv=TRUE)
> 
> # Fairhope
> fa.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Fairhope",vcv=TRUE)
> 
> # Goddard
> gd.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Goddard",vcv=TRUE)
Warning message:
glm.fit: fitted rates numerically 0 occurred 
> 
> # Malibu
> ma.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Malibu",vcv=TRUE)
> 
> # Mission Bay
> mb.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Mission Bay",vcv=TRUE)
Warning message:
glm.fit: fitted rates numerically 0 occurred 
> 
> # Surfside
> su.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Surfside",vcv=TRUE)
> 
> 
> 
> # --------------------------------------
> # Pooled estimates
> 
> ### Pooled estimate (all beaches), Swallowed Water
> all.3swal.fit <- glm(diarrheaci3~anycontact+swallwater +marine+pointsource+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=as)
> 	all.3swal.VC <- cl(as,fm=all.3swal.fit,cluster=as$hhid)
> 	all.3swal <- coeftest(all.3swal.fit, all.3swal.VC) 
> 
> ### Pooled estimate (point vs. non-point source conditions), Swallowed Water
> ps.3swal.fit <- glm(diarrheaci3~(anycontact+ swallwater)*pointsource +marine+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=as)
> 	ps.3swal.VC <- cl(as,fm=ps.3swal.fit,cluster=as$hhid)
> 	ps.3swal <- coeftest(ps.3swal.fit, ps.3swal.VC) 
> 	lrtest(all.3swal.fit,ps.3swal.fit)
Likelihood ratio test

Model 1: diarrheaci3 ~ anycontact + swallwater + marine + pointsource + 
    agecat + female + racewhite + gichron + anim_any + gicontactbase + 
    rawfood + beach
Model 2: diarrheaci3 ~ (anycontact + swallwater) * pointsource + marine + 
    agecat + female + racewhite + gichron + anim_any + gicontactbase + 
    rawfood + beach
  #Df  LogLik Df  Chisq Pr(>Chisq)
1  34 -7761.8                     
2  36 -7760.9  2 1.7833       0.41
> 
> ### Pooled estimate (fresh vs. marine), Swallowed Water
> fm.3swal.fit <- glm(diarrheaci3~(anycontact+ swallwater)*marine +pointsource+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=as)
> 	fm.3swal.VC <- cl(as,fm=fm.3swal.fit,cluster=as$hhid)
> 	fm.3swal <- coeftest(fm.3swal.fit, fm.3swal.VC)
> 	lrtest(all.3swal.fit,fm.3swal.fit)
Likelihood ratio test

Model 1: diarrheaci3 ~ anycontact + swallwater + marine + pointsource + 
    agecat + female + racewhite + gichron + anim_any + gicontactbase + 
    rawfood + beach
Model 2: diarrheaci3 ~ (anycontact + swallwater) * marine + pointsource + 
    agecat + female + racewhite + gichron + anim_any + gicontactbase + 
    rawfood + beach
  #Df  LogLik Df  Chisq Pr(>Chisq)  
1  34 -7761.8                       
2  36 -7759.1  2 5.3388    0.06929 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> 
> # --------------------------------------
> # Age-stratified estimates and LR tests of
> # interaction
> 
> ### reduced model for LR tests of exposure x age interactions
> noagestrat.3swal.fit <- glm(diarrheaci3~anycontact+swallwater +agestrat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=asa)
> 
> ### Pooled estimate (Age 0-4, 5-10, >10), Swallowed Water
> agestrat.3swal.fit <- glm(diarrheaci3~(anycontact+swallwater)*agestrat +marine+pointsource+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=asa)
> 	agestrat.3swal.VC <- cl(asa,fm=agestrat.3swal.fit,cluster=asa$hhid)
> 	agestrat.3swal <- coeftest(agestrat.3swal.fit, agestrat.3swal.VC) 
> 	lrtest(noagestrat.3swal.fit,agestrat.3swal.fit)
Likelihood ratio test

Model 1: diarrheaci3 ~ anycontact + swallwater + agestrat + female + racewhite + 
    gichron + anim_any + gicontactbase + rawfood + beach
Model 2: diarrheaci3 ~ (anycontact + swallwater) * agestrat + marine + 
    pointsource + female + racewhite + gichron + anim_any + gicontactbase + 
    rawfood + beach
  #Df  LogLik Df  Chisq Pr(>Chisq)
1  26 -7684.3                     
2  31 -7683.3  5 2.0519     0.8419
> 
> 
> 
> # --------------------------------------
> # Calculate CIRs and 95% CIs
> # from the regression model output
> # note: calls cirtab, swestci and iswestci from
> # the Aim 1 base functions. These calculate
> # CIRs and their CIs using linear combinations
> # of the regression coefficients + VC matrix
> #
> # Also run tests of interaction for 
> # models with interaction terms using the
> # switest function from the base functions
> #   Point vs. Non-Point sources
> #   Fresh vs. Marine water
> # --------------------------------------
> 
> hu.cir <- cirtab(hu.3body,hu.3head,hu.3swal)
> si.cir <- cirtab(si.3body,si.3head,si.3swal)
> wp.cir <- cirtab(wp.3body,wp.3head,wp.3swal)
> we.cir <- cirtab(we.3body,we.3head,we.3swal)
> av.cir <- cirtab(av.3body,av.3head,av.3swal)
> bo.cir <- cirtab(bo.3body,bo.3head,bo.3swal)
> dh.cir <- cirtab(dh.3body,dh.3head,dh.3swal)
> ed.cir <- cirtab(ed.3body,ed.3head,ed.3swal)
> fa.cir <- cirtab(fa.3body,fa.3head,fa.3swal)
> gd.cir <- cirtab(gd.3body,gd.3head,gd.3swal)
> ma.cir <- cirtab(ma.3body,ma.3head,ma.3swal)
> mb.cir <- cirtab(mb.3body,mb.3head,mb.3swal)
> su.cir <- cirtab(su.3body,su.3head,su.3swal)
> 
> all.cir <- cirtab(
+ 			b=list(fit=all.3body,vcovCL=all.3body.VC),
+ 			h=list(fit=all.3head,vcovCL=all.3head.VC),
+ 			s=list(fit=all.3swal,vcovCL=all.3swal.VC)
+ 			)
> 
> ps.cir <- cirtab(
+ 			b=list(fit=ps.3body,vcovCL=ps.3body.VC),
+ 			h=list(fit=ps.3head,vcovCL=ps.3head.VC),
+ 			s=list(fit=ps.3swal,vcovCL=ps.3swal.VC), I=TRUE
+ 			)
> 			
> fm.cir <- cirtab(
+ 			b=list(fit=fm.3body,vcovCL=fm.3body.VC),
+ 			h=list(fit=fm.3head,vcovCL=fm.3head.VC),
+ 			s=list(fit=fm.3swal,vcovCL=fm.3swal.VC), I=TRUE
+ 			)
> 
> 
> # --------------------------------------
> # calculate CIRs for the 3-age group
> # model (the cirtab fn is designed around
> # a binary interaction term, but there
> # are 3 age categories)
> # --------------------------------------
> agestrat.cir <- rbind(
+ 	unlist(i3swestci(agestrat.3body,agestrat.3body.VC)),
+ 	unlist(i3swestci(agestrat.3head,agestrat.3head.VC)),
+ 	unlist(i3swestci(agestrat.3swal,agestrat.3swal.VC))
+ 	)
> rownames(agestrat.cir) <- c("Body Immersion","Head Immersion","Swallowed Water")
> colnames(agestrat.cir) <- paste(c("est.","lb.","ub."),rep(c("Age0to4","Age5to10","Age11plus"),c(3,3,3)),sep="")
> 
> 
> 
> 
> 
> # --------------------------------------
> # save the objects
> # --------------------------------------
> save.image("~/dropbox/13beaches/aim1-results/rawoutput/aim1-swim-exposure-regs.Rdata")
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
659.363  59.647 758.273 
