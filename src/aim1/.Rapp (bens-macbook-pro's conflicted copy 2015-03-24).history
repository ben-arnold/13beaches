op <- par(mar=c(4,7,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[6:7]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.1#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*1.5  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[3],cex=0.8)#
	mtext(expression(c(paste(<=35," CFU/100ml"),">35 CFU/100ml"),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	# mtext("Range (CFU/100ml)",side=3,line=3,at=labx,adj=1,col=cols[3],cex=0.8)#
	# mtext(rngQs,side=3,line=3,at=allxs,col=cols,cex=0.8)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		apply(circi,1,function(x) paste("(",sprintf("%1.2f",x["CIRlb"]),", ",sprintf("%1.2f",x["CIRub"]),")",sep="") )#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[,1]),"ref",cirform(cir.age0to4[,1]),"ref",cirform(cir.age5to10[,1]),"ref",cirform(cir.age11plus[,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[,2:3]),"",circiform(cir.age0to4[,2:3]),"",circiform(cir.age5to10[,2:3]),"",circiform(cir.age11plus[,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(expression(c(paste(<=35," CFU/100ml"),paste(">35 CFU/100ml")),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)
op <- par(mar=c(4,7,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[6:7]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.1#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[3],cex=0.8)#
	mtext(expression(c(paste(<=35," CFU/100ml"),">35 CFU/100ml"),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	# mtext("Range (CFU/100ml)",side=3,line=3,at=labx,adj=1,col=cols[3],cex=0.8)#
	# mtext(rngQs,side=3,line=3,at=allxs,col=cols,cex=0.8)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		apply(circi,1,function(x) paste("(",sprintf("%1.2f",x["CIRlb"]),", ",sprintf("%1.2f",x["CIRub"]),")",sep="") )#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[,1]),"ref",cirform(cir.age0to4[,1]),"ref",cirform(cir.age5to10[,1]),"ref",cirform(cir.age11plus[,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[,2:3]),"",circiform(cir.age0to4[,2:3]),"",circiform(cir.age5to10[,2:3]),"",circiform(cir.age11plus[,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(expression(c(paste(<=35," CFU/100ml"),paste(">35 CFU/100ml")),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)
op <- par(mar=c(4,7,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[6:7]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[3],cex=0.8)#
	mtext(expression(c(paste(<=35," CFU/100ml"),">35 CFU/100ml"),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	# mtext("Range (CFU/100ml)",side=3,line=3,at=labx,adj=1,col=cols[3],cex=0.8)#
	# mtext(rngQs,side=3,line=3,at=allxs,col=cols,cex=0.8)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		apply(circi,1,function(x) paste("(",sprintf("%1.2f",x["CIRlb"]),", ",sprintf("%1.2f",x["CIRub"]),")",sep="") )#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[,1]),"ref",cirform(cir.age0to4[,1]),"ref",cirform(cir.age5to10[,1]),"ref",cirform(cir.age11plus[,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[,2:3]),"",circiform(cir.age0to4[,2:3]),"",circiform(cir.age5to10[,2:3]),"",circiform(cir.age11plus[,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(expression(c(paste(<=35," CFU/100ml"),paste(">35 CFU/100ml")),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)
cir.all[,2:3]
cir.all
N.all
op <- par(mar=c(4,7,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[6:7]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[3],cex=0.8)#
	mtext(expression(c(paste(<=35," CFU/100ml"),">35 CFU/100ml"),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	# mtext("Range (CFU/100ml)",side=3,line=3,at=labx,adj=1,col=cols[3],cex=0.8)#
	# mtext(rngQs,side=3,line=3,at=allxs,col=cols,cex=0.8)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		apply(circi,1,function(x) paste("(",sprintf("%1.2f",x["CIRlb"]),", ",sprintf("%1.2f",x["CIRub"]),")",sep="") )#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(expression(c(paste(<=35," CFU/100ml"),paste(">35 CFU/100ml")),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)
cir.all
op <- par(mar=c(4,7,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[6:7]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[3],cex=0.8)#
	mtext(expression(c(paste(<=35," CFU/100ml"),">35 CFU/100ml"),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	# mtext("Range (CFU/100ml)",side=3,line=3,at=labx,adj=1,col=cols[3],cex=0.8)#
	# mtext(rngQs,side=3,line=3,at=allxs,col=cols,cex=0.8)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",x["CIRlb"]),", ",sprintf("%1.2f",x["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(expression(c(paste(<=35," CFU/100ml"),paste(">35 CFU/100ml")),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)
op <- par(mar=c(4,7,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[6:7]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[3],cex=0.8)#
	mtext(expression(c(paste(<=35," CFU/100ml"),">35 CFU/100ml"),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	# mtext("Range (CFU/100ml)",side=3,line=3,at=labx,adj=1,col=cols[3],cex=0.8)#
	# mtext(rngQs,side=3,line=3,at=allxs,col=cols,cex=0.8)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(expression(c(paste(<=35," CFU/100ml"),paste(">35 CFU/100ml")),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)
?plotmath
op <- par(mar=c(4,7,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[6:7]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(c("\u2264 35 CFU/100ml",">35 CFU/100ml"),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	# mtext("Range (CFU/100ml)",side=3,line=3,at=labx,adj=1,col=cols[3],cex=0.8)#
	# mtext(rngQs,side=3,line=3,at=allxs,col=cols,cex=0.8)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(c("\u2264 35 CFU/100ml",">35 CFU/100ml"),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)
op <- par(mar=c(4,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[6:7]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(c("\u2264 35",">35"),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col="gray30",cex=0.9)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(c("\u2264 35",">35"),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col="gray30",cex=0.9)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)
op <- par(mar=c(4,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[6:7]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(c("\u2264 35",">35"),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col="gray30",cex=0.8)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(c("\u2264 35",">35"),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col="gray30",cex=0.8)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)
op <- par(mar=c(4,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[6:7]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(c("\u2264 35",">35"),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col="gray30",cex=0.8)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(c("\u2264 35",">35"),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=1,line=1,at=allxs,col="gray30",cex=0.8)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)
op <- par(mar=c(4,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[6:7]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(c("\u2264 35",">35"),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col="gray30",cex=0.8)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(c("\u2264 35",">35"),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col="gray30",cex=0.8)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)
op <- par(mar=c(4,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[6:7]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.75,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(c("\u2264 35",">35"),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.8)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(c("\u2264 35",">35"),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.8)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)
op <- par(mar=c(4,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[6:7]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(c("\u2264 35",">35"),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.8)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(c("\u2264 35",">35"),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.8)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)
display.brewer.all()
op <- par(mar=c(4,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[7:8]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(c("\u2264 35",">35"),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.8)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(c("\u2264 35",">35"),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.8)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)
op <- par(mar=c(4,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[7:8]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(c("\u2264 35",">35"),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(c("\u2264 35",">35"),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage.pdf",width=16,height=5)#
op <- par(mar=c(4,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[7:8]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(c("\u2264 35",">35"),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(c("\u2264 35",">35"),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)#
dev.off()
warnings()
?bquote
?plotmath
op <- par(mar=c(4,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[7:8]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(c("\u2264 35","> 35"),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	#mtext(c("\u2264 35","> 35"),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext(expression(paste(c(%<=%," 35","> 35")) ),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)
op <- par(mar=c(4,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[7:8]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(c("\u2264 35","> 35"),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	#mtext(c("\u2264 35","> 35"),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext(expression(paste(c(<=," 35","> 35")) ),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)
op <- par(mar=c(4,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[7:8]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(c("\u2264 35","> 35"),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	#mtext(c("\u2264 35","> 35"),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext(expression(paste(<=," 35","> 35")),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage.pdf",width=16,height=5)#
op <- par(mar=c(4,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[7:8]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(expression(paste(<=," 35","> 35")),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	#mtext(c("\u2264 35","> 35"),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext(expression(paste(<=," 35","> 35")),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)#
dev.off()
op <- par(mar=c(4,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[7:8]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(expression(paste(<=," 35","> 35")),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	#mtext(c("\u2264 35","> 35"),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext(expression(paste(<=," 35","> 35")),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)
# pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage.pdf",width=16,height=5)#
op <- par(mar=c(4,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[7:8]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(expression(paste(bquote(%<=%)," 35","> 35")),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	#mtext(c("\u2264 35","> 35"),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext(expression(paste(<=," 35","> 35")),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)#
# dev.off()
op <- par(mar=c(4,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[7:8]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(expression(paste("",<=," 35","> 35")),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	#mtext(c("\u2264 35","> 35"),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext(expression(paste("",<=," 35","> 35")),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)#
# dev.off()
# pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage.pdf",width=16,height=5)#
op <- par(mar=c(4,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[7:8]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(expression(paste("",<=," 35","> 35")),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	#mtext(c("\u2264 35","> 35"),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext(expression(paste(""<=," 35","> 35")),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)#
# dev.off()
# pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage.pdf",width=16,height=5)#
op <- par(mar=c(4,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[7:8]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(expression(paste("",<=," 35","> 35")),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	#mtext(c("\u2264 35","> 35"),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext(expression(""<= 35,> 35),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)#
# dev.off()
# pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage.pdf",width=16,height=5)#
op <- par(mar=c(4,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[7:8]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(expression(paste("",<=," 35","> 35")),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	#mtext(c("\u2264 35","> 35"),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext(expression(""<= 35,""> 35),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)#
# dev.off()
# pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage.pdf",width=16,height=5)#
op <- par(mar=c(4,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[7:8]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	#mtext(c("\u2264 35","> 35"),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext(expression(""<= 35,""> 35),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)#
# dev.off()
# pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage.pdf",width=16,height=5)#
op <- par(mar=c(4,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[7:8]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	#mtext(c("\u2264 35","> 35"),side=1,line=0.5,at=allxs,col=cols,cex=0.9,font=2)#
	mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)#
# dev.off()
# pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage.pdf",width=16,height=5)#
op <- par(mar=c(5,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[7:8]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)#
# dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage.pdf",width=16,height=5)#
op <- par(mar=c(5,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[7:8]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.03,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.03,adj=1,cex=0.75    )#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage.pdf",width=16,height=5)#
op <- par(mar=c(5,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[7:8]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.25,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.25,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.25,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.25,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.05,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.05,adj=1,cex=0.75    )#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage.pdf",width=16,height=5)#
op <- par(mar=c(5,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"BuGn")[7:8]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.05,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.05,adj=1,cex=0.75    )#
par(op)#
dev.off()
display.brewer.all()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage.pdf",width=16,height=5)#
op <- par(mar=c(5,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"PuBuGn")[7:8]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.05,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.05,adj=1,cex=0.75    )#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage.pdf",width=16,height=5)#
op <- par(mar=c(5,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"PuBuGn")[7:8]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage.pdf",width=16,height=5)#
op <- par(mar=c(5,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"PuBuGn")[c(7,7)]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage.pdf",width=16,height=5)#
op <- par(mar=c(5,8,8,0)+0.1,xpd=TRUE)#
cols <- brewer.pal(9,"PuBuGn")[c(8,8)]#
ytics <- seq(0,60,by=10)#
# set up an empty plot#
MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
par(op)#
dev.off()
ci.ps
dim(ah)
# --------------------------------------#
# preamble#
# --------------------------------------#
rm(list=ls())#
library(sandwich)#
library(lmtest)#
#
# source the base functions#
source("~/dropbox/13beaches/src/aim1/0-aim1-base-functions.R")#
#
# --------------------------------------#
# load the and pre-preprocess the #
# analysis dataset#
# (refer to the base functions script#
# for details on the pre-processing)#
# --------------------------------------#
#
ad <- preprocess.13beaches("~/dropbox/13beaches/data/final/13beaches-analysis.csv")#
# --------------------------------------#
# esimate risk of Diarrhea associated#
# with exposure to EPA 1600 above/below 35 CFU/100ml#
# Body Immersion#
# All ages#
# --------------------------------------#
#
# subset to non-missing exposure categories#
# to make the robust CI calcs work#
table(ad$bodycontact)#
ah <- subset(ad,ad$bodycontact=="Yes")#
	dim(ah)#
ah <- subset(ah,is.na(ah$entero35)==FALSE)#
	dim(ah)
# Non-point source#
nps.cifit <- glm(diarrheaci3~entero35,family=poisson(link="log"),data=ah[ah$pointsource=="No",])#
	npsci.VC <- cl(ah[ah$pointsource=="No",],fm=nps.cifit,cluster=ah$hhid[ah$pointsource=="No"])#
	npsci <- coeftest(nps.cifit, npsci.VC)#
	npsci#
#
# Point source	#
ps.cifit <- glm(diarrheaci3~entero35,family=poisson(link="log"),data=ah[ah$pointsource=="Yes",])#
	psci.VC <- cl(ah[ah$pointsource=="Yes",],fm=ps.cifit,cluster=ah$hhid[ah$pointsource=="Yes"])#
	psci <- coeftest(ps.cifit, psci.VC)#
	psci
# Non-point source - Ages 0 - 4#
nps0to4.cifit <- glm(diarrheaci3~entero35,family=poisson(link="log"),data=ah[ah$pointsource=="No" & ah$agestrat=="(0, 4]",])#
	nps0to4ci.VC <- cl(ah[ah$pointsource=="No" & ah$agestrat=="(0, 4]",],fm=nps0to4.cifit,cluster=ah$hhid[ah$pointsource=="No" & ah$agestrat=="(0, 4]"])#
	nps0to4ci <- coeftest(nps0to4.cifit, nps0to4ci.VC)#
	nps0to4ci#
#
# Non-point source - Ages 5 - 10#
nps5to10.cifit <- glm(diarrheaci3~entero35,family=poisson(link="log"),data=ah[ah$pointsource=="No" & ah$agestrat=="(4, 10]",])#
	nps5to10ci.VC <- cl(ah[ah$pointsource=="No" & ah$agestrat=="(4, 10]",],fm=nps5to10.cifit,cluster=ah$hhid[ah$pointsource=="No" & ah$agestrat=="(4, 10]"])#
	nps5to10ci <- coeftest(nps5to10.cifit, nps5to10ci.VC)#
	nps5to10ci#
#
# Non-point source - Ages >10#
nps11plus.cifit <- glm(diarrheaci3~entero35,family=poisson(link="log"),data=ah[ah$pointsource=="No" & ah$agestrat==">10",])#
	nps11plusci.VC <- cl(ah[ah$pointsource=="No" & ah$agestrat==">10",],fm=nps11plus.cifit,cluster=ah$hhid[ah$pointsource=="No" & ah$agestrat==">10"])#
	nps11plusci <- coeftest(nps11plus.cifit, nps11plusci.VC)#
	nps11plusci
# Point source - Ages 0 - 4#
ps0to4.cifit <- glm(diarrheaci3~entero35,family=poisson(link="log"),data=ah[ah$pointsource=="Yes" & ah$agestrat=="(0, 4]",])#
	ps0to4ci.VC <- cl(ah[ah$pointsource=="Yes" & ah$agestrat=="(0, 4]",],fm=ps0to4.cifit,cluster=ah$hhid[ah$pointsource=="Yes" & ah$agestrat=="(0, 4]"])#
	ps0to4ci <- coeftest(ps0to4.cifit, ps0to4ci.VC)#
	ps0to4ci#
#
# Point source - Ages 5 - 10#
ps5to10.cifit <- glm(diarrheaci3~entero35,family=poisson(link="log"),data=ah[ah$pointsource=="Yes" & ah$agestrat=="(4, 10]",])#
	ps5to10ci.VC <- cl(ah[ah$pointsource=="Yes" & ah$agestrat=="(4, 10]",],fm=ps5to10.cifit,cluster=ah$hhid[ah$pointsource=="Yes" & ah$agestrat=="(4, 10]"])#
	ps5to10ci <- coeftest(ps5to10.cifit, ps5to10ci.VC)#
	ps5to10ci#
#
# Point source - Ages >10#
ps11plus.cifit <- glm(diarrheaci3~entero35,family=poisson(link="log"),data=ah[ah$pointsource=="Yes" & ah$agestrat==">10",])#
	ps11plusci.VC <- cl(ah[ah$pointsource=="Yes" & ah$agestrat==">10",],fm=ps11plus.cifit,cluster=ah$hhid[ah$pointsource=="Yes" & ah$agestrat==">10"])#
	ps11plusci <- coeftest(ps11plus.cifit, ps11plusci.VC)#
	ps11plusci
CIplot35cfu <- function(pdata,cols) {#
	# pdata is a list of 12 data plotting objects in this order:#
		# ci.all    : Matrix of cumulative incidence estimates w/ 95% CIs -- All ages#
		# ci.0to4   : Matrix of cumulative incidence estimates w/ 95% CIs -- Age 0 to 4#
		# ci.5to10  : Matrix of cumulative incidence estimates w/ 95% CIs -- Age 5 to 10#
		# ci.11plus : Matrix of cumulative incidence estimates w/ 95% CIs -- Age 11 plus#
	ci.all    <- pdata[[1]]#
	ci.0to4   <- pdata[[2]]#
	ci.5to10  <- pdata[[3]]#
	ci.11plus <- pdata[[4]]#
		# cir.all       : Vector of CIR estimate w/ 95% CIs -- All ages#
		# cir.age0to4   : Vector of CIR estimate w/ 95% CIs -- Age 0 to 4#
		# cir.age5to10  : Vector of CIR estimate w/ 95% CIs -- Age 5 to 10#
		# cir.age11plus : Vector of CIR estimate w/ 95% CIs -- Age 11 plus#
	cir.all       <- pdata[[5]]#
	cir.age0to4   <- pdata[[6]]#
	cir.age5to10  <- pdata[[7]]#
	cir.age11plus <- pdata[[8]]#
		# N.all       : Matrix of N incident cases and N exposed -- All ages#
		# N.age0to4   : Matrix of N incident cases and N exposed -- Age 0 to 4#
		# N.age5to10  : Matrix of N incident cases and N exposed -- Age 5 to 10#
		# N.age11plus : Matrix of N incident cases and N exposed -- Age 11 plus#
	N.all       <- pdata[[9]]#
	N.age0to4   <- pdata[[10]]#
	N.age5to10  <- pdata[[11]]#
	N.age11plus <- pdata[[12]]#
	op <- par(mar=c(5,8,8,0)+0.1,xpd=TRUE)#
	cols <- brewer.pal(9,"PuBuGn")[c(8,8)]#
	ytics <- seq(0,60,by=10)#
	# set up an empty plot#
	MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
		ylim=range(ytics),ylab="",yaxt="n",#
		las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
	par(op)#
}  # end of CIplot35cfu function
all.pdata <- list(#
	ci.all, ci.0to4, ci.5to10, ci.11plus,#
	cir.all, cir.age0to4, cir.age5to10, cir.age11plus,#
	N.all, N.age0to4, N.age5to10, N.age11plus#
)
# --------------------------------------#
# preamble#
# --------------------------------------#
#
rm(list=ls())#
library(RColorBrewer)
# --------------------------------------#
# Load the water quality dataset to#
# get the mid-points of the Entero#
# concentrations by each quartile#
# --------------------------------------#
wq <- read.csv("~/dropbox/13beaches/data/final/13beaches-wq.csv")#
#
minQs <- tapply(wq$avgdyentero1600,wq$qavgdyentero1600,function(x) min(x,na.rm=T))#
maxQs <- tapply(wq$avgdyentero1600,wq$qavgdyentero1600,function(x) max(x,na.rm=T))#
labQs <- paste(sprintf("%1.0f",10^minQs)," to ",sprintf("%1.0f",10^maxQs),sep="")#
labQs <- paste("Q",1:4,"\n(",labQs,")",sep="")#
#
rngQs <- paste(sprintf("%1.0f",round(10^minQs)),"-",sprintf("%1.0f",floor(10^maxQs)),sep="")#
rngQs[4] <-paste(">",sprintf("%1.0f",floor(10^maxQs))[3],sep="")#
#
midQs <- minQs + (maxQs-minQs)/2
load("~/dropbox/13beaches/aim1-results/rawoutput/aim1-entero1600-35cfu-regs-body.Rdata")#
### Basic Figure Shell for the Entero 35 CFU plots#
### called repeatedly for different stratifications (point source, non-point source, overall)#
### the function is pretty idiosyncratic -- just trying to avoid repeating all 50+ lines of code three times#
#
CIplot35cfu <- function(pdata,cols) {#
	# pdata is a list of 12 data plotting objects in this order:#
		# ci.all    : Matrix of cumulative incidence estimates w/ 95% CIs -- All ages#
		# ci.0to4   : Matrix of cumulative incidence estimates w/ 95% CIs -- Age 0 to 4#
		# ci.5to10  : Matrix of cumulative incidence estimates w/ 95% CIs -- Age 5 to 10#
		# ci.11plus : Matrix of cumulative incidence estimates w/ 95% CIs -- Age 11 plus#
	ci.all    <- pdata[[1]]#
	ci.0to4   <- pdata[[2]]#
	ci.5to10  <- pdata[[3]]#
	ci.11plus <- pdata[[4]]#
		# cir.all       : Vector of CIR estimate w/ 95% CIs -- All ages#
		# cir.age0to4   : Vector of CIR estimate w/ 95% CIs -- Age 0 to 4#
		# cir.age5to10  : Vector of CIR estimate w/ 95% CIs -- Age 5 to 10#
		# cir.age11plus : Vector of CIR estimate w/ 95% CIs -- Age 11 plus#
	cir.all       <- pdata[[5]]#
	cir.age0to4   <- pdata[[6]]#
	cir.age5to10  <- pdata[[7]]#
	cir.age11plus <- pdata[[8]]#
		# N.all       : Matrix of N incident cases and N exposed -- All ages#
		# N.age0to4   : Matrix of N incident cases and N exposed -- Age 0 to 4#
		# N.age5to10  : Matrix of N incident cases and N exposed -- Age 5 to 10#
		# N.age11plus : Matrix of N incident cases and N exposed -- Age 11 plus#
	N.all       <- pdata[[9]]#
	N.age0to4   <- pdata[[10]]#
	N.age5to10  <- pdata[[11]]#
	N.age11plus <- pdata[[12]]#
	op <- par(mar=c(5,8,8,0)+0.1,xpd=TRUE)#
	cols <- brewer.pal(9,"PuBuGn")[c(8,8)]#
	ytics <- seq(0,60,by=10)#
	# set up an empty plot#
	MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
		ylim=range(ytics),ylab="",yaxt="n",#
		las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.age0to4[3,1]),"ref",cirform(cir.age5to10[3,1]),"ref",cirform(cir.age11plus[3,1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.age0to4[3,2:3]),"",circiform(cir.age5to10[3,2:3]),"",circiform(cir.age11plus[3,2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
	par(op)#
}  # end of CIplot35cfu function#
# Overall Results#
#
all.pdata <- list(#
	ci.all, ci.0to4, ci.5to10, ci.11plus,#
	cir.all, cir.age0to4, cir.age5to10, cir.age11plus,#
	N.all, N.age0to4, N.age5to10, N.age11plus#
)
length(all.pdata)
all.pdata[[1]]
names(all.pdata)
all.pdata
all.pdata <- list(#
	ci.all, ci.0to4, ci.5to10, ci.11plus,#
	cir.all["Overall",], cir.age0to4["Overall",], cir.age5to10["Overall",], cir.age11plus["Overall",],#
	N.all, N.age0to4, N.age5to10, N.age11plus#
)
all.pdata
ls()
cir.ps
ls()
cir.all
ps.pdata <- list(#
	ci.ps, ci.ps0to4, ci.ps5to10, ci.ps11plus,#
	cir.all["Point source",], cir.age0to4["Point source",], cir.age5to10["Point source",], cir.age11plus["Point source",],#
	N.ps, N.ps0to4, N.ps5to10, N.ps11plus#
)#
nps.pdata <- list(#
	ci.nps, ci.nps0to4, ci.nps5to10, ci.nps11plus,#
	cir.all["Non-point source",], cir.age0to4["Non-point source",], cir.age5to10["Non-point source",], cir.age11plus["Non-point source",],#
	N.nps, N.nps0to4, N.nps5to10, N.nps11plus#
)
ps.pdata
nps.pdata
cols <- brewer.pal(9,"PuBuGn")[c(8,8)]#
CIplot35cfu(all.pdata,cols=cols)
CIplot35cfu <- function(pdata,cols) {#
	# pdata is a list of 12 data plotting objects in this order:#
		# ci.all    : Matrix of cumulative incidence estimates w/ 95% CIs -- All ages#
		# ci.0to4   : Matrix of cumulative incidence estimates w/ 95% CIs -- Age 0 to 4#
		# ci.5to10  : Matrix of cumulative incidence estimates w/ 95% CIs -- Age 5 to 10#
		# ci.11plus : Matrix of cumulative incidence estimates w/ 95% CIs -- Age 11 plus#
	ci.all    <- pdata[[1]]#
	ci.0to4   <- pdata[[2]]#
	ci.5to10  <- pdata[[3]]#
	ci.11plus <- pdata[[4]]#
		# cir.all       : Vector of CIR estimate w/ 95% CIs -- All ages#
		# cir.age0to4   : Vector of CIR estimate w/ 95% CIs -- Age 0 to 4#
		# cir.age5to10  : Vector of CIR estimate w/ 95% CIs -- Age 5 to 10#
		# cir.age11plus : Vector of CIR estimate w/ 95% CIs -- Age 11 plus#
	cir.all       <- pdata[[5]]#
	cir.age0to4   <- pdata[[6]]#
	cir.age5to10  <- pdata[[7]]#
	cir.age11plus <- pdata[[8]]#
		# N.all       : Matrix of N incident cases and N exposed -- All ages#
		# N.age0to4   : Matrix of N incident cases and N exposed -- Age 0 to 4#
		# N.age5to10  : Matrix of N incident cases and N exposed -- Age 5 to 10#
		# N.age11plus : Matrix of N incident cases and N exposed -- Age 11 plus#
	N.all       <- pdata[[9]]#
	N.age0to4   <- pdata[[10]]#
	N.age5to10  <- pdata[[11]]#
	N.age11plus <- pdata[[12]]#
	op <- par(mar=c(5,8,8,0)+0.1,xpd=TRUE)#
	ytics <- seq(0,60,by=10)#
	# set up an empty plot#
	MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
		ylim=range(ytics),ylab="",yaxt="n",#
		las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[1]),"ref",cirform(cir.age0to4[1]),"ref",cirform(cir.age5to10[1]),"ref",cirform(cir.age11plus[1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[2:3]),"",circiform(cir.age0to4[2:3]),"",circiform(cir.age5to10[2:3]),"",circiform(cir.age11plus[2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
	par(op)#
}  # end of CIplot35cfu function
CIplot35cfu(all.pdata,cols=cols)
display.brewer.all()
cols <- brewer.pal(9,"PuBu")[c(8,8)]#
CIplot35cfu(ps.pdata,cols=cols)
ps.pdata
### Basic Figure Shell for the Entero 35 CFU plots#
### called repeatedly for different stratifications (point source, non-point source, overall)#
### the function is pretty idiosyncratic -- just trying to avoid repeating all 50+ lines of code three times#
#
CIplot35cfu <- function(pdata,cols) {#
	# pdata is a list of 12 data plotting objects in this order:#
		# ci.all    : Matrix of cumulative incidence estimates w/ 95% CIs -- All ages#
		# ci.0to4   : Matrix of cumulative incidence estimates w/ 95% CIs -- Age 0 to 4#
		# ci.5to10  : Matrix of cumulative incidence estimates w/ 95% CIs -- Age 5 to 10#
		# ci.11plus : Matrix of cumulative incidence estimates w/ 95% CIs -- Age 11 plus#
	ci.all    <- pdata[[1]]#
	ci.0to4   <- pdata[[2]]#
	ci.5to10  <- pdata[[3]]#
	ci.11plus <- pdata[[4]]#
		# cir.all       : Vector of CIR estimate w/ 95% CIs -- All ages#
		# cir.age0to4   : Vector of CIR estimate w/ 95% CIs -- Age 0 to 4#
		# cir.age5to10  : Vector of CIR estimate w/ 95% CIs -- Age 5 to 10#
		# cir.age11plus : Vector of CIR estimate w/ 95% CIs -- Age 11 plus#
	cir.all       <- pdata[[5]]#
	cir.age0to4   <- pdata[[6]]#
	cir.age5to10  <- pdata[[7]]#
	cir.age11plus <- pdata[[8]]#
		# N.all       : Matrix of N incident cases and N exposed -- All ages#
		# N.age0to4   : Matrix of N incident cases and N exposed -- Age 0 to 4#
		# N.age5to10  : Matrix of N incident cases and N exposed -- Age 5 to 10#
		# N.age11plus : Matrix of N incident cases and N exposed -- Age 11 plus#
	N.all       <- pdata[[9]]#
	N.age0to4   <- pdata[[10]]#
	N.age5to10  <- pdata[[11]]#
	N.age11plus <- pdata[[12]]#
	op <- par(mar=c(5,8,8,0)+0.1,xpd=TRUE)#
	ytics <- seq(0,70,by=10)#
	# set up an empty plot#
	MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
		ylim=range(ytics),ylab="",yaxt="n",#
		las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[1]),"ref",cirform(cir.age0to4[1]),"ref",cirform(cir.age5to10[1]),"ref",cirform(cir.age11plus[1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[2:3]),"",circiform(cir.age0to4[2:3]),"",circiform(cir.age5to10[2:3]),"",circiform(cir.age11plus[2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
	par(op)#
}  # end of CIplot35cfu function#
# Overall Results#
all.pdata <- list(#
	ci.all, ci.0to4, ci.5to10, ci.11plus,#
	cir.all["Overall",], cir.age0to4["Overall",], cir.age5to10["Overall",], cir.age11plus["Overall",],#
	N.all, N.age0to4, N.age5to10, N.age11plus#
)#
# Point source results#
ps.pdata <- list(#
	ci.ps, ci.ps0to4, ci.ps5to10, ci.ps11plus,#
	cir.all["Point source",], cir.age0to4["Point source",], cir.age5to10["Point source",], cir.age11plus["Point source",],#
	N.ps, N.ps0to4, N.ps5to10, N.ps11plus#
)#
# Non-point source results#
nps.pdata <- list(#
	ci.nps, ci.nps0to4, ci.nps5to10, ci.nps11plus,#
	cir.all["Non-point source",], cir.age0to4["Non-point source",], cir.age5to10["Non-point source",], cir.age11plus["Non-point source",],#
	N.nps, N.nps0to4, N.nps5to10, N.nps11plus#
)
## Point source 35 CFU Plot#
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage-pointsource.pdf",width=16,height=5)#
cols <- brewer.pal(9,"PuBu")[c(8,8)]#
CIplot35cfu(ps.pdata,cols=cols)#
dev.off()
display.brewer.all()
## Non-Point source 35 CFU Plot#
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage-pointsource.pdf",width=16,height=5)#
cols <- brewer.pal(9,"Greens")[c(8,8)]#
CIplot35cfu(nps.pdata,cols=cols)#
dev.off()
## Point source 35 CFU Plot#
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage-pointsource.pdf",width=16,height=5)#
cols <- brewer.pal(9,"PuBu")[c(8,8)]#
CIplot35cfu(ps.pdata,cols=cols)#
dev.off()#
## Non-Point source 35 CFU Plot#
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage-nonpointsource.pdf",width=16,height=5)#
cols <- brewer.pal(9,"Greens")[c(8,8)]#
CIplot35cfu(nps.pdata,cols=cols)#
dev.off()
## Overall Plot#
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage.pdf",width=16,height=5)#
cols <- brewer.pal(9,"PuBuGn")[c(8,8)]#
CIplot35cfu(all.pdata,cols=cols)#
dev.off()
# Combined#
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage-conditions.pdf",width=16,height=15)#
#
lo <- layout(mat=matrix(1:3,nrow=3,ncol=1))#
#
cols <- brewer.pal(9,"PuBuGn")[c(8,8)]#
CIplot35cfu(all.pdata,cols=cols)#
#
cols <- brewer.pal(9,"PuBu")[c(8,8)]#
CIplot35cfu(ps.pdata,cols=cols)#
#
cols <- brewer.pal(9,"Greens")[c(8,8)]#
CIplot35cfu(nps.pdata,cols=cols)#
#
dev.off()
# Combined#
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage-conditions.pdf",width=16,height=12)#
#
lo <- layout(mat=matrix(1:3,nrow=3,ncol=1))#
#
cols <- brewer.pal(9,"PuBuGn")[c(8,8)]#
CIplot35cfu(all.pdata,cols=cols)#
#
cols <- brewer.pal(9,"PuBu")[c(8,8)]#
CIplot35cfu(ps.pdata,cols=cols)#
#
cols <- brewer.pal(9,"Greens")[c(8,8)]#
CIplot35cfu(nps.pdata,cols=cols)#
#
dev.off()
# Combined#
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage-conditions.pdf",width=16,height=10)#
#
lo <- layout(mat=matrix(1:3,nrow=3,ncol=1))#
#
cols <- brewer.pal(9,"PuBuGn")[c(8,8)]#
CIplot35cfu(all.pdata,cols=cols)#
#
cols <- brewer.pal(9,"PuBu")[c(8,8)]#
CIplot35cfu(ps.pdata,cols=cols)#
#
cols <- brewer.pal(9,"Greens")[c(8,8)]#
CIplot35cfu(nps.pdata,cols=cols)#
#
dev.off()
## Overall Plot#
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage.pdf",width=16,height=5)#
cols <- brewer.pal(9,"PuBuGn")[c(8,8)]#
CIplot35cfu(all.pdata,cols=cols)#
dev.off()#
#
## Point source 35 CFU Plot#
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage-pointsource.pdf",width=16,height=5)#
cols <- brewer.pal(9,"PuBu")[c(8,8)]#
CIplot35cfu(ps.pdata,cols=cols)#
dev.off()#
## Non-Point source 35 CFU Plot#
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage-nonpointsource.pdf",width=16,height=5)#
cols <- brewer.pal(9,"Greens")[c(8,8)]#
CIplot35cfu(nps.pdata,cols=cols)#
dev.off()
cir.all
N.ps
op <- par(mar=c(5,8,8,0)+0.1,xpd=TRUE)#
ytics <- seq(0,70,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols)#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols)#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
# print header labels#
mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,]),"ref",cirform(cir.all[2,]),"ref",cirform(cir.all[1,])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)
op <- par(mar=c(5,8,8,0)+0.1,xpd=TRUE)#
ytics <- seq(0,70,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols)#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols)#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,]),"ref",cirform(cir.all[2,]),"ref",cirform(cir.all[1,])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)
op <- par(mar=c(5,8,8,0)+0.1,xpd=TRUE)#
ytics <- seq(0,70,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols)#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols)#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-Quartile-CI-bypointsource.pdf",width=16,height=5)#
op <- par(mar=c(5,8,8,0)+0.1,xpd=TRUE)#
ytics <- seq(0,70,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols)#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols)#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=16,height=5)#
op <- par(mar=c(5,8,8,0)+0.1,xpd=TRUE)#
ytics <- seq(0,70,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols)#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols)#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=16,height=5)#
op <- par(mar=c(5,8,8,0)+0.1,xpd=TRUE)#
ytics <- seq(0,40,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols)#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols)#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
MidPts
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=16,height=5)#
op <- par(mar=c(5,8,8,0)+0.1,xpd=TRUE)#
ytics <- seq(0,40,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0.1,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols)#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols)#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=16,height=4)#
op <- par(mar=c(5,9,8,0)+0.1,xpd=TRUE)#
ytics <- seq(0,40,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0.1,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols)#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols)#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=12,height=4)#
op <- par(mar=c(5,9,8,0)+0.1,xpd=TRUE)#
ytics <- seq(0,40,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0.1,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols)#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols)#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=14,height=4)#
op <- par(mar=c(5,9,8,0)+0.1,xpd=TRUE)#
ytics <- seq(0,40,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0.1,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols)#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols)#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=12,height=5)#
op <- par(mar=c(5,9,8,0)+0.1,xpd=TRUE)#
ytics <- seq(0,40,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0.1,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols)#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols)#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=11,height=5)#
op <- par(mar=c(5,9,8,0)+0.1,xpd=TRUE)#
ytics <- seq(0,40,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0.1,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols)#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols)#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
display.brewer.all()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=11,height=5)#
op <- par(mar=c(5,9,8,0)+0.1,xpd=TRUE)#
col1 <- brewer.pal(9,"Reds")[c(7,7)]#
col2 <- brewer.pal(9,"YlOrRd")[c(6,6)]#
col3 <- brewer.pal(9,"RdPu")[c(7,7)]#
cols <- c(col1,col2,col3)#
ytics <- seq(0,40,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0.1,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols)#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols)#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=11,height=5)#
op <- par(mar=c(5,9,8,0)+0.1,xpd=TRUE)#
col1 <- brewer.pal(9,"Reds")[c(7,7)]#
col2 <- brewer.pal(9,"YlOrRd")[c(6,6)]#
col3 <- brewer.pal(9,"RdPu")[c(7,7)]#
cols <- c(col1,col2,col3)#
ytics <- seq(0,40,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0.1,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols[1:2])#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols[3:4])#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols[5:6])#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=11,height=5)#
op <- par(mar=c(5,9,8,0)+0.1,xpd=TRUE)#
col1 <- brewer.pal(9,"Reds")[c(7,7)]#
col2 <- brewer.pal(9,"YlOrRd")[c(6,6)]#
col3 <- brewer.pal(9,"RdPu")[c(7,7)]#
cols <- c(col1,col2,col3)#
ytics <- seq(0,40,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0.1,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols[1:2])#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols[1:2],font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols[3:4])#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols[3:4],font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols[5:6])#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols[5:6],font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=11,height=5)#
op <- par(mar=c(5,9,8,0)+0.1,xpd=TRUE)#
col1 <- brewer.pal(9,"Reds")[c(7,7)]#
col2 <- brewer.pal(9,"YlOrRd")[c(6,6)]#
col3 <- brewer.pal(9,"RdPu")[c(7,7)]#
cols <- c(col1,col2,col3)#
ytics <- seq(0,40,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0.1,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols[1:2])#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[1:2])#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols[1:2],font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols[3:4])#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[3:4])#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols[3:4],font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols[5:6])#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[5:6])#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols[5:6],font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=11,height=5)#
op <- par(mar=c(5,9,8,0)+0.1,xpd=TRUE)#
col1 <- brewer.pal(9,"Reds")[c(7,7)]#
col2 <- brewer.pal(9,"YlOrRd")[c(6,6)]#
col3 <- brewer.pal(9,"RdPu")[c(7,7)]#
cols <- c(col1,col2,col3)#
elabcol <- brewer.pal(9,"YlGnBu")[5:8]#
ytics <- seq(0,40,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0.1,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols[1:2])#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[1:2])#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols[1:2],font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols[3:4])#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[3:4])#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols[3:4],font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols[5:6])#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[5:6])#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols[5:6],font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=elabcol,cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=elabcol,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=elabcol,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=elabcol,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=elabcol,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=11,height=5)#
op <- par(mar=c(5,9,8,0)+0.1,xpd=TRUE)#
col1 <- brewer.pal(9,"Reds")[c(7,7)]#
col2 <- brewer.pal(9,"YlOrRd")[c(6,6)]#
col3 <- brewer.pal(9,"RdPu")[c(7,7)]#
cols <- c(col1,col2,col3)#
elabcol <- brewer.pal(9,"PuBuGn")[8]#
ytics <- seq(0,40,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0.1,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols[1:2])#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[1:2])#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols[1:2],font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols[3:4])#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[3:4])#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols[3:4],font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols[5:6])#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[5:6])#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols[5:6],font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=elabcol,cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=elabcol,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=elabcol,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=elabcol,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=elabcol,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=11,height=5)#
op <- par(mar=c(5,9,8,0)+0.1,xpd=TRUE)#
col1 <- brewer.pal(9,"Reds")[c(7,7)]#
col2 <- brewer.pal(9,"YlOrRd")[c(6,6)]#
col3 <- brewer.pal(9,"RdPu")[c(7,7)]#
cols <- c(col1,col2,col3)#
elabcol <- brewer.pal(9,"YlGnBu")[7]#
ytics <- seq(0,40,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0.1,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols[1:2])#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[1:2])#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols[1:2],font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols[3:4])#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[3:4])#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols[3:4],font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols[5:6])#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[5:6])#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols[5:6],font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=elabcol,cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=elabcol,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=elabcol,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=elabcol,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=elabcol,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=11,height=5)#
op <- par(mar=c(5,9,8,0)+0.1,xpd=TRUE)#
col1 <- brewer.pal(9,"Reds")[c(7,7)]#
col2 <- brewer.pal(9,"YlOrRd")[c(6,6)]#
col3 <- brewer.pal(9,"RdPu")[c(7,7)]#
cols <- c(col1,col2,col3)#
elabcol <- brewer.pal(9,"YlGnBu")[6]#
ytics <- seq(0,40,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0.1,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols[1:2])#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[1:2])#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols[1:2],font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols[3:4])#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[3:4])#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols[3:4],font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols[5:6])#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[5:6])#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols[5:6],font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=elabcol,cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=elabcol,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=elabcol,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=elabcol,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=elabcol,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=11,height=5)#
op <- par(mar=c(5,9,8,0)+0.1,xpd=TRUE)#
col1 <- brewer.pal(9,"PuBuGn")[c(8,8)]#
col2 <- brewer.pal(9,"PuBuGn")[c(8,8)]#
col3 <- brewer.pal(9,"PuBuGn")[c(8,8)]#
cols <- c(col1,col2,col3)#
elabcol <- brewer.pal(9,"YlGnBu")[6]#
ytics <- seq(0,40,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0.1,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols[1:2])#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[1:2])#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols[1:2],font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols[3:4])#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[3:4])#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols[3:4],font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols[5:6])#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[5:6])#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols[5:6],font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=elabcol,cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=elabcol,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=elabcol,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=elabcol,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=elabcol,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=11,height=5)#
op <- par(mar=c(5,9,8,0)+0.1,xpd=TRUE)#
col1 <- brewer.pal(9,"PuBuGn")[c(8,8)]#
col2 <- brewer.pal(9,"PuBuGn")[c(8,8)]#
col3 <- brewer.pal(9,"PuBuGn")[c(8,8)]#
cols <- c(col1,col2,col3)#
elabcol <- brewer.pal(9,"YlGnBu")[6]#
ytics <- seq(0,40,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0.1,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+15,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols[1:2])#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[1:2])#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols[1:2],font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols[3:4])#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[3:4])#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols[3:4],font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols[5:6])#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[5:6])#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols[5:6],font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=elabcol,cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=elabcol,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=elabcol,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=elabcol,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=elabcol,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=11,height=5)#
op <- par(mar=c(5,9,8,0)+0.1,xpd=TRUE)#
col1 <- brewer.pal(9,"PuBuGn")[c(8,8)]#
col2 <- brewer.pal(9,"PuBuGn")[c(8,8)]#
col3 <- brewer.pal(9,"PuBuGn")[c(8,8)]#
cols <- c(col1,col2,col3)#
elabcol <- brewer.pal(9,"YlGnBu")[6]#
ytics <- seq(0,40,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0.1,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+18,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols[1:2])#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[1:2])#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols[1:2],font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols[3:4])#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[3:4])#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols[3:4],font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols[5:6])#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[5:6])#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols[5:6],font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=elabcol,cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=elabcol,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=elabcol,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=elabcol,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=elabcol,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
# --------------------------------------#
# preamble#
# --------------------------------------#
#
rm(list=ls())#
library(RColorBrewer)#
# --------------------------------------#
# Load the water quality dataset to#
# get the mid-points of the Entero#
# concentrations by each quartile#
# --------------------------------------#
wq <- read.csv("~/dropbox/13beaches/data/final/13beaches-wq.csv")#
#
minQs <- tapply(wq$avgdyentero1600,wq$qavgdyentero1600,function(x) min(x,na.rm=T))#
maxQs <- tapply(wq$avgdyentero1600,wq$qavgdyentero1600,function(x) max(x,na.rm=T))#
labQs <- paste(sprintf("%1.0f",10^minQs)," to ",sprintf("%1.0f",10^maxQs),sep="")#
labQs <- paste("Q",1:4,"\n(",labQs,")",sep="")#
#
rngQs <- paste(sprintf("%1.0f",round(10^minQs)),"-",sprintf("%1.0f",floor(10^maxQs)),sep="")#
rngQs[4] <-paste(">",sprintf("%1.0f",floor(10^maxQs))[3],sep="")#
#
midQs <- minQs + (maxQs-minQs)/2
load("~/dropbox/13beaches/aim1-results/rawoutput/aim1-entero1600-35cfu-regs-body.Rdata")#
#
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=11,height=5)#
op <- par(mar=c(5,9,8,0)+0.1,xpd=TRUE)#
col1 <- brewer.pal(9,"YlGnBu")[c(6,7)]#
col2 <- brewer.pal(9,"YlGnBu")[c(6,7)]#
col3 <- brewer.pal(9,"YlGnBu")[c(6,7)]#
cols <- c(col1,col2,col3)#
elabcol <- brewer.pal(9,"YlGnBu")[6]#
ytics <- seq(0,40,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0.1,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+18,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols[1:2])#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[1:2])#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols[1:2],font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols[3:4])#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[3:4])#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols[3:4],font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols[5:6])#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[5:6])#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols[5:6],font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=elabcol,cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=elabcol,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=elabcol,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=elabcol,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=elabcol,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=11,height=5)#
op <- par(mar=c(5,9,8,0)+0.1,xpd=TRUE)#
col1 <- brewer.pal(9,"YlGnBu")[c(6,7)]#
col2 <- brewer.pal(9,"YlGnBu")[c(6,7)]#
col3 <- brewer.pal(9,"YlGnBu")[c(6,7)]#
cols <- c(col1,col2,col3)#
elabcol <- brewer.pal(9,"YlGnBu")[6]#
ytics <- seq(0,40,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0.1,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+18,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols[1:2])#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[1:2])#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols[1:2],font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols[3:4])#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[3:4])#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols[3:4],font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols[5:6])#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[5:6])#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols[5:6],font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=11,height=5)#
op <- par(mar=c(5,9,8,0)+0.1,xpd=TRUE)#
col1 <- brewer.pal(9,"YlGnBu")[c(5,8)]#
col2 <- brewer.pal(9,"YlGnBu")[c(5,8)]#
col3 <- brewer.pal(9,"YlGnBu")[c(5,8)]#
cols <- c(col1,col2,col3)#
ytics <- seq(0,40,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0.1,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+18,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols[1:2])#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[1:2])#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols[1:2],font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols[3:4])#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[3:4])#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols[3:4],font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols[5:6])#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[5:6])#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols[5:6],font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-bypointsource.pdf",width=11,height=5)#
op <- par(mar=c(5,9,8,0)+0.1,xpd=TRUE)#
col1 <- brewer.pal(9,"YlGnBu")[c(6,8)]#
col2 <- brewer.pal(9,"YlGnBu")[c(6,8)]#
col3 <- brewer.pal(9,"YlGnBu")[c(6,8)]#
cols <- c(col1,col2,col3)#
ytics <- seq(0,40,by=10)#
# set up an empty plot#
MidPts <- barplot(1:3,names.arg=NA,border=NA,col=NA,#
	ylim=range(ytics),ylab="",yaxt="n",#
	las=1,bty="n"#
)#
segments(x0=0.1,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+18,lwd=2,col="gray80")#
axis(2,at=ytics,las=1)#
mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
#
# calculate X coordinates relative to the mid points for each group#
xspan <- 0.2#
xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
#
xall    <- xplus+MidPts[1]#
xps   <- xplus+MidPts[2]#
xnps  <- xplus+MidPts[3]#
allxs   <- c(xall,xps,xnps)  # for table and category labels in header/footer#
labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
# plot all conditions estimates#
segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols[1:2])#
points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[1:2])#
text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols[1:2],font=2)#
#
# plot point source estimates#
segments(x0=xps,y0=ci.ps[,"CIlb"]*1000,y1=ci.ps[,"CIub"]*1000,lwd=2,col=cols[3:4])#
points(xps,ci.ps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[3:4])#
text(x=xps,y=ci.ps[,"CI"]*1000,sprintf("%1.0f",ci.ps[,"CI"]*1000),pos=4,cex=0.7,col=cols[3:4],font=2)#
#
# plot non-point source estimates#
segments(x0=xnps,y0=ci.nps[,"CIlb"]*1000,y1=ci.nps[,"CIub"]*1000,lwd=2,col=cols[5:6])#
points(xnps,ci.nps[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols[5:6])#
text(x=xnps,y=ci.nps[,"CI"]*1000,sprintf("%1.0f",ci.nps[,"CI"]*1000),pos=4,cex=0.7,col=cols[5:6],font=2)#
# print header labels#
mtext(c("All\nConditions","Identified\nPoint Source","No\nPoint Source"),at=MidPts,side=3,line=5.5  )#
#
mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
# Print adjusted CIRs and 95% CIs (formatted)#
cirform <- function(cirs) {#
	paste(sprintf("%1.2f",cirs),sep="")#
}#
circiform <- function(circi) {#
	paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
}#
mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("ref",cirform(cir.all[3,1]),"ref",cirform(cir.all[2,1]),"ref",cirform(cir.all[1,1])),side=3,line=2,at=allxs,cex=0.75)#
#
mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
mtext(c("",circiform(cir.all[3,2:3]),"",circiform(cir.all[2,2:3]),"",circiform(cir.all[1,2:3])),side=3,line=1,at=allxs,cex=0.7)#
# print footer labels#
mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
#
# print table with Ns#
mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
ns <- c(N.all[,1],N.ps[,1],N.nps[,1])#
mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
Ns <- c(N.all[,2],N.ps[,2],N.nps[,2])#
mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
#
par(op)#
dev.off()
### Basic Figure Shell for the Entero 35 CFU plots#
### called repeatedly for different stratifications (point source, non-point source, overall)#
### the function is pretty idiosyncratic -- just trying to avoid repeating all 50+ lines of code three times#
#
CIplot35cfu <- function(pdata,cols) {#
	# pdata is a list of 12 data plotting objects in this order:#
		# ci.all    : Matrix of cumulative incidence estimates w/ 95% CIs -- All ages#
		# ci.0to4   : Matrix of cumulative incidence estimates w/ 95% CIs -- Age 0 to 4#
		# ci.5to10  : Matrix of cumulative incidence estimates w/ 95% CIs -- Age 5 to 10#
		# ci.11plus : Matrix of cumulative incidence estimates w/ 95% CIs -- Age 11 plus#
	ci.all    <- pdata[[1]]#
	ci.0to4   <- pdata[[2]]#
	ci.5to10  <- pdata[[3]]#
	ci.11plus <- pdata[[4]]#
		# cir.all       : Vector of CIR estimate w/ 95% CIs -- All ages#
		# cir.age0to4   : Vector of CIR estimate w/ 95% CIs -- Age 0 to 4#
		# cir.age5to10  : Vector of CIR estimate w/ 95% CIs -- Age 5 to 10#
		# cir.age11plus : Vector of CIR estimate w/ 95% CIs -- Age 11 plus#
	cir.all       <- pdata[[5]]#
	cir.age0to4   <- pdata[[6]]#
	cir.age5to10  <- pdata[[7]]#
	cir.age11plus <- pdata[[8]]#
		# N.all       : Matrix of N incident cases and N exposed -- All ages#
		# N.age0to4   : Matrix of N incident cases and N exposed -- Age 0 to 4#
		# N.age5to10  : Matrix of N incident cases and N exposed -- Age 5 to 10#
		# N.age11plus : Matrix of N incident cases and N exposed -- Age 11 plus#
	N.all       <- pdata[[9]]#
	N.age0to4   <- pdata[[10]]#
	N.age5to10  <- pdata[[11]]#
	N.age11plus <- pdata[[12]]#
	op <- par(mar=c(5,8,8,0)+0.1,xpd=TRUE)#
	ytics <- seq(0,70,by=10)#
	# set up an empty plot#
	MidPts <- barplot(1:4,names.arg=NA,border=NA,col=NA,#
		ylim=range(ytics),ylab="",yaxt="n",#
		las=1,bty="n"#
	)#
	segments(x0=0,x1=max(MidPts+0.5),y0=ytics,lty=2,lwd=1,col="gray80")#
	segments(x0=mean(MidPts[1:2]),y0=min(ytics)-8,y1=max(ytics)+23,lwd=2,col="gray80")#
	axis(2,at=ytics,las=1)#
	mtext("Diarrhea\nIncidence\nper 1000",side=2,line=3,las=1)#
	# calculate X coordinates relative to the mid points for each group#
	xspan <- 0.2#
	xplus <- c(-xspan, xspan)  # evenly distribute 2 datapoints around each midpoint#
	xall    <- xplus+MidPts[1]#
	x0to4   <- xplus+MidPts[2]#
	x5to10  <- xplus+MidPts[3]#
	x11plus <- xplus+MidPts[4]#
	allxs   <- c(xall,x0to4,x5to10,x11plus)  # for table and category labels in header/footer#
	labx <- MidPts[1]-xspan*3  # for left-hand labels in the header/footer#
#
	# plot all age estimates#
	segments(x0=xall,y0=ci.all[,"CIlb"]*1000,y1=ci.all[,"CIub"]*1000,lwd=2,col=cols)#
	points(xall,ci.all[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=xall,y=ci.all[,"CI"]*1000,sprintf("%1.0f",ci.all[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 0 to 4 estimates#
	segments(x0=x0to4,y0=ci.0to4[,"CIlb"]*1000,y1=ci.0to4[,"CIub"]*1000,lwd=2,col=cols)#
	points(x0to4,ci.0to4[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x0to4,y=ci.0to4[,"CI"]*1000,sprintf("%1.0f",ci.0to4[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age 5 to 10 estimates#
	segments(x0=x5to10,y0=ci.5to10[,"CIlb"]*1000,y1=ci.5to10[,"CIub"]*1000,lwd=2,col=cols)#
	points(x5to10,ci.5to10[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x5to10,y=ci.5to10[,"CI"]*1000,sprintf("%1.0f",ci.5to10[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# plot age > 10 estimates#
	segments(x0=x11plus,y0=ci.11plus[,"CIlb"]*1000,y1=ci.11plus[,"CIub"]*1000,lwd=2,col=cols)#
	points(x11plus,ci.11plus[,"CI"]*1000,pch=16,cex=1.5,lwd=2,col=cols)#
	text(x=x11plus,y=ci.11plus[,"CI"]*1000,sprintf("%1.0f",ci.11plus[,"CI"]*1000),pos=4,cex=0.7,col=cols,font=2)#
	# print header labels#
	mtext(c("All\nAges","Ages\n0 to 4","Ages\n5 to 10","Ages\n>10"),at=MidPts,side=3,line=5.5  )#
	mtext(expression(paste(italic("Enterococcus")," 1600 Category")),side=3,line=4,at=labx,adj=1,col=cols[2],cex=0.8)#
	mtext(expression(""<= 35,""> 35),side=3,line=4,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=3,line=3,at=allxs,col=cols,cex=0.75)#
	# Print adjusted CIRs and 95% CIs (formatted)#
	cirform <- function(cirs) {#
		paste(sprintf("%1.2f",cirs),sep="")#
	}#
	circiform <- function(circi) {#
		paste("(",sprintf("%1.2f",circi["CIRlb"]),", ",sprintf("%1.2f",circi["CIRub"]),")",sep="")#
	}#
	mtext("Adjusted CIR",side=3,line=2,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("ref",cirform(cir.all[1]),"ref",cirform(cir.age0to4[1]),"ref",cirform(cir.age5to10[1]),"ref",cirform(cir.age11plus[1])),side=3,line=2,at=allxs,cex=0.75)#
	mtext("(95% CI)",side=3,line=1,at=labx,adj=1,cex=0.8,col="gray30")#
	mtext(c("",circiform(cir.all[2:3]),"",circiform(cir.age0to4[2:3]),"",circiform(cir.age5to10[2:3]),"",circiform(cir.age11plus[2:3])),side=3,line=1,at=allxs,cex=0.7)#
	# print footer labels#
	mtext(expression(""<= 35,""> 35),side=1,line=0.25,at=allxs,col=cols,cex=1,font=2)#
	mtext("CFU/100ml",side=1,line=1.25,at=allxs,col=cols,cex=0.75)#
	# print table with Ns#
	mtext("Incident Diarrhea Cases",side=1,line=2.25,at=labx,adj=1,cex=0.8,col="gray30")#
	ns <- c(N.all[,1],N.age0to4[,1],N.age5to10[,1],N.age11plus[,1])#
	mtext(  format(ns,big.mark=","),side=1,line=2.25,at=allxs+0.06,adj=1,cex=0.75    )#
	mtext("Population At Risk",side=1,line=3.25,at=labx,adj=1,cex=0.8,col="gray30")#
	Ns <- c(N.all[,2],N.age0to4[,2],N.age5to10[,2],N.age11plus[,2])#
	mtext(  format(Ns,big.mark=","),side=1,line=3.25,at=allxs+0.06,adj=1,cex=0.75    )#
	par(op)#
}  # end of CIplot35cfu function#
# Overall Results#
all.pdata <- list(#
	ci.all, ci.0to4, ci.5to10, ci.11plus,#
	cir.all["Overall",], cir.age0to4["Overall",], cir.age5to10["Overall",], cir.age11plus["Overall",],#
	N.all, N.age0to4, N.age5to10, N.age11plus#
)#
# Point source results#
ps.pdata <- list(#
	ci.ps, ci.ps0to4, ci.ps5to10, ci.ps11plus,#
	cir.all["Point source",], cir.age0to4["Point source",], cir.age5to10["Point source",], cir.age11plus["Point source",],#
	N.ps, N.ps0to4, N.ps5to10, N.ps11plus#
)#
# Non-point source results#
nps.pdata <- list(#
	ci.nps, ci.nps0to4, ci.nps5to10, ci.nps11plus,#
	cir.all["Non-point source",], cir.age0to4["Non-point source",], cir.age5to10["Non-point source",], cir.age11plus["Non-point source",],#
	N.nps, N.nps0to4, N.nps5to10, N.nps11plus#
)#
## Overall Plot#
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage.pdf",width=16,height=5)#
cols <- brewer.pal(9,"YlGnBu")[c(6,8)]#
CIplot35cfu(all.pdata,cols=cols)#
dev.off()#
#
## Point source 35 CFU Plot#
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage-pointsource.pdf",width=16,height=5)#
cols <- brewer.pal(9,"PuBu")[c(8,8)]#
CIplot35cfu(ps.pdata,cols=cols)#
dev.off()#
#
## Non-Point source 35 CFU Plot#
pdf("~/dropbox/13beaches/aim1-results/figs/aim1-entero1600-35cfu-CI-byage-nonpointsource.pdf",width=16,height=5)#
cols <- brewer.pal(9,"Greens")[c(8,8)]#
CIplot35cfu(nps.pdata,cols=cols)#
dev.off()
rm(list=ls())#
library(sandwich)#
library(lmtest)#
# source the base functions#
source("~/dropbox/13beaches/src/aim1/0-aim1-base-functions.R")#
# --------------------------------------#
# load the analysis dataset#
# --------------------------------------#
#
d <- read.csv("~/dropbox/13beaches/data/final/13beaches-analysis.csv")#
#
# convert ID variables from factors to strings#
d$hhid <- as.character(d$hhid)#
d$indid <- as.character(d$indid)#
#
# --------------------------------------#
# subset to observations for analysis#
# --------------------------------------#
# drop individuals with baseline GI illness#
table(d$gibase)#
d <- subset(d,gibase!="Yes")#
dim(d)#
# --------------------------------------#
# subset dataset to variables of interest#
# to speed up computations / processing#
# --------------------------------------#
#
# included: agecat, female, racewhite, gichron, anim_any, gicontactbase, rawfood#
# excluded: allergies (not relevant), frequency of beach visits (not measured at all beaches), digging in the sand (not measured at all beaches)#
#
ad <- subset(d,select=c("beach","pointsource","marine","hhid","indid","groundwater","berm","anycontact","bodycontact","headunder","swallwater","diarrheaci3","diarrheaci10","age","agecat","agestrat","female","race","gichron","anim_any","gicontactbase","rawfood"))#
#
# for exposure variables, replace missing factor level with missing values and recode the factors#
ad$anycontact[ad$anycontact==""] <- NA#
	ad$anycontact <- factor(ad$anycontact)#
ad$bodycontact[ad$bodycontact==""] <- NA#
	ad$bodycontact <- factor(ad$bodycontact)#
ad$headunder[ad$headunder==""] <- NA#
	ad$headunder <- factor(ad$headunder)#
ad$swallwater[ad$swallwater==""] <- NA#
	ad$swallwater <- factor(ad$swallwater)#
#
# create a race=white indicator#
ad$racewhite <- factor(ifelse(ad$race=="white","Yes",NA),levels=c("No","Yes","Missing"))#
ad$racewhite[ad$race=="missing"]<-"Missing"#
ad$racewhite[ad$race!="white" & ad$race!="missing"] <- "No"#
#
# for some covariates, move missing category to the last factor category#
levels(ad$gichron) <- c("Missing","No","Yes")#
	ad$gichron <- factor(ad$gichron,levels=c("No","Yes","Missing"))#
ad$gicontactbase <- factor(ad$gicontactbase,levels=c("No","Yes","Missing"))#
# reorder groundwater factor for convenience w/ reg estimates#
ad$groundwater <- factor(ad$groundwater,levels=c("Above median flow","Below median flow",""))#
# --------------------------------------#
# esimate risk of GI illness in 3 days#
# associated with ocean exposure#
# adjusted estimates only#
# --------------------------------------#
#
# adjustment covariates:#
# +marine+pointsource+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood#
#
# --------------------------------------#
# Within each swim exposure category,#
# test for interation by#
# environmental conditions at #
# Avalon (groundwater) and Doheny (berm)#
# to see if they can be collapsed into#
# a single estimate or whether we need#
# to consider conditional estimates for#
# these two beaches#
# --------------------------------------
dim(ad)
# subset to non-missing exposure categories#
# to make the robust CI calcs work#
dim(ad)#
ab <- subset(ad,is.na(ad$anycontact)==FALSE)#
dim(ab)#
ab <- subset(ab,is.na(ab$bodycontact)==FALSE)#
dim(ab)
table(ab$agestrat)
# re-order the age stratification factor so that older ages are reference (for convenience, since younger children have higher CIRs)#
ad$agestrat <- factor(ad$agestrat,levels=c(">10","(4, 10]","(0, 4]",""),labels=c(">10","(4, 10]","(0, 4]","Missing"))
# subset to non-missing exposure categories#
# to make the robust CI calcs work#
dim(ad)#
ab <- subset(ad,is.na(ad$anycontact)==FALSE)#
dim(ab)#
ab <- subset(ab,is.na(ab$bodycontact)==FALSE)#
dim(ab)#
# tests of interaction by environmental conditions for Avalon and Doheny#
# (no evidence for interaction)#
av.b.noint <-glm(diarrheaci3~anycontact+bodycontact +groundwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=ab[ab$beach=="Avalon",])#
av.b <-glm(diarrheaci3~(anycontact+bodycontact)*groundwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=ab[ab$beach=="Avalon",])#
	lrtest(av.b.noint,av.b)#
#
dh.b.noint <-glm(diarrheaci3~anycontact+bodycontact +berm +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=ab[ab$beach=="Doheny",])#
dh.b <-glm(diarrheaci3~(anycontact+bodycontact)*berm +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=ab[ab$beach=="Doheny",])#
	lrtest(dh.b.noint,dh.b)#
#
# --------------------------------------#
# Freshwater beaches#
#
# Huntington#
hu.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Huntington",vcv=TRUE)#
#
# Silver#
si.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Silver",vcv=TRUE)#
#
# Washington Park#
wp.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Washington Park",vcv=TRUE)#
#
# West#
we.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="West",vcv=TRUE)#
#
# --------------------------------------#
# Marine beaches#
#
# Avalon#
av.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Avalon",vcv=TRUE)#
#
# Boqueron#
bo.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Boqueron",vcv=TRUE)#
#
# Doheny#
dh.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Doheny",vcv=TRUE)#
#
# Edgewater#
ed.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Edgewater",vcv=TRUE)#
#
# Fairhope#
fa.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Fairhope",vcv=TRUE)#
#
# Goddard#
gd.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Goddard",vcv=TRUE)#
#
# Malibu#
ma.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Malibu",vcv=TRUE)#
#
# Mission Bay#
mb.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Mission Bay",vcv=TRUE)#
#
# Surfside#
su.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab,beach="Surfside",vcv=TRUE)#
#
# --------------------------------------#
# Pooled estimates#
#
### Pooled estimate (all beaches), Body Immersion#
all.3body.fit <- glm(diarrheaci3~anycontact+bodycontact +marine+pointsource+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ab)#
	all.3body.VC <- cl(ab,fm=all.3body.fit,cluster=ab$hhid)#
	all.3body <- coeftest(all.3body.fit, all.3body.VC) #
#
### Pooled estimate (point vs. non-point source conditions), Body Immersion#
ps.3body.fit <- glm(diarrheaci3~(anycontact+bodycontact)*pointsource +marine+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ab)#
	ps.3body.VC <- cl(ab,fm=ps.3body.fit,cluster=ab$hhid)#
	ps.3body <- coeftest(ps.3body.fit, ps.3body.VC) #
	lrtest(all.3body.fit,ps.3body.fit)#
#
### Pooled estimate (fresh vs. marine), Body Immersion#
fm.3body.fit <- glm(diarrheaci3~(anycontact+bodycontact)*marine +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ab)#
	fm.3body.VC <- cl(ab,fm=fm.3body.fit,cluster=ab$hhid)#
	fm.3body <- coeftest(fm.3body.fit, fm.3body.VC)#
	lrtest(all.3body.fit,fm.3body.fit)#
# --------------------------------------#
# Age-stratified estimates and LR tests of#
# interaction#
#
### reduced models for LR tests of exposure x age interactions#
noagestrat.3body.fit <- glm(diarrheaci3~anycontact+bodycontact +agestrat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ab)#
### Pooled estimate (Age 0-4, 5-10, >10), Body Immersion#
agestrat.3body.fit <- glm(diarrheaci3~(anycontact+bodycontact)*agestrat +marine+pointsource+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ab)#
	agestrat.3body.VC <- cl(ab,fm=agestrat.3body.fit,cluster=ab$hhid)#
	agestrat.3body <- coeftest(agestrat.3body.fit, agestrat.3body.VC) #
	lrtest(noagestrat.3body.fit,agestrat.3body.fit)#
# --------------------------------------#
# All Ages#
# 3 day follow-up#
# Head Immersion#
# --------------------------------------#
#
# subset to non-missing exposure categories#
# to make the robust CI calcs work#
ah <- subset(ad,is.na(ad$anycontact)==FALSE)#
ah <- subset(ah,is.na(ah$headunder)==FALSE)#
# tests of interaction by environmental conditions for Avalon and Doheny#
# (no evidence for interaction)#
av.h.noint <-glm(diarrheaci3~anycontact+bodycontact +groundwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=ah[ah$beach=="Avalon",])#
av.h <-glm(diarrheaci3~(anycontact+bodycontact)*groundwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=ah[ah$beach=="Avalon",])#
	lrtest(av.h.noint,av.h)#
#
dh.h.noint <-glm(diarrheaci3~anycontact+bodycontact +berm +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=ah[ah$beach=="Doheny",])#
dh.h <-glm(diarrheaci3~(anycontact+bodycontact)*berm +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=ah[ah$beach=="Doheny",])#
	lrtest(dh.h.noint,dh.h)#
# Freshwater beaches#
#
# Huntington#
hu.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Huntington",vcv=TRUE)#
#
# Silver#
si.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Silver",vcv=TRUE)#
#
# Washington Park#
wp.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Washington Park",vcv=TRUE)#
#
# West#
we.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="West",vcv=TRUE)#
#
# Marine beaches#
#
# Avalon#
av.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Avalon",vcv=TRUE)#
#
# Boqueron#
bo.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Boqueron",vcv=TRUE)#
#
# Doheny#
dh.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Doheny",vcv=TRUE)#
#
# Edgewater#
ed.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Edgewater",vcv=TRUE)#
#
# Fairhope#
fa.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Fairhope",vcv=TRUE)#
#
# Goddard#
gd.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Goddard",vcv=TRUE)#
#
# Malibu#
ma.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Malibu",vcv=TRUE)#
#
# Mission Bay#
mb.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Mission Bay",vcv=TRUE)#
#
# Surfside#
su.3head <- mpreg(diarrheaci3~anycontact+headunder +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ah,beach="Surfside",vcv=TRUE)#
# --------------------------------------#
# Pooled estimates#
#
### Pooled estimate (all beaches), Head Immersion#
all.3head.fit <- glm(diarrheaci3~anycontact+headunder +marine+pointsource+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ah)#
	all.3head.VC <- cl(ah,fm=all.3head.fit,cluster=ah$hhid)#
	all.3head <- coeftest(all.3head.fit, all.3head.VC) #
#
### Pooled estimate (point vs. non-point source conditions), Head Immersion#
ps.3head.fit <- glm(diarrheaci3~(anycontact+ headunder)*pointsource +marine+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ah)#
	ps.3head.VC <- cl(ah,fm=ps.3head.fit,cluster=ah$hhid)#
	ps.3head <- coeftest(ps.3head.fit, ps.3head.VC) #
	lrtest(all.3head.fit,ps.3head.fit)#
#
### Pooled estimate (fresh vs. marine), Head Immersion#
fm.3head.fit <- glm(diarrheaci3~(anycontact+ headunder)*marine +pointsource+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ah)#
	fm.3head.VC <- cl(ah,fm=fm.3head.fit,cluster=ah$hhid)#
	fm.3head <- coeftest(fm.3head.fit, fm.3head.VC)#
	lrtest(all.3head.fit,fm.3head.fit)#
# --------------------------------------#
# Age-stratified estimates and LR tests of#
# interaction#
#
### reduced model for LR tests of exposure x age interactions#
noagestrat.3head.fit <- glm(diarrheaci3~anycontact+headunder +agestrat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ah)#
#
### Pooled estimate (Age 0-4, 5-10, >10), Head Immersion#
agestrat.3head.fit <- glm(diarrheaci3~(anycontact+headunder)*agestrat +marine+pointsource+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ah)#
	agestrat.3head.VC <- cl(ah,fm=agestrat.3head.fit,cluster=ah$hhid)#
	agestrat.3head <- coeftest(agestrat.3head.fit, agestrat.3head.VC) #
	lrtest(noagestrat.3head.fit,agestrat.3head.fit)#
# --------------------------------------#
# All Ages#
# 3 day follow-up#
# Swallowed Water#
# --------------------------------------#
#
# subset to non-missing exposure categories#
# to make the robust CI calcs work#
as <- subset(ad,is.na(ad$anycontact)==FALSE)#
as <- subset(as,is.na(as$swallwater)==FALSE)#
# tests of interaction by environmental conditions for Avalon and Doheny#
# (no evidence for interaction)#
av.s.noint <-glm(diarrheaci3~anycontact+bodycontact +groundwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=as[as$beach=="Avalon",])#
av.s <-glm(diarrheaci3~(anycontact+bodycontact)*groundwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=as[as$beach=="Avalon",])#
	lrtest(av.s.noint,av.s)#
#
dh.s.noint <-glm(diarrheaci3~anycontact+bodycontact +berm +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=as[as$beach=="Doheny",])#
dh.s <-glm(diarrheaci3~(anycontact+bodycontact)*berm +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,family=poisson(link="log"),data=as[as$beach=="Doheny",])#
	lrtest(dh.s.noint,dh.s)#
#
# --------------------------------------#
# Freshwater beaches#
#
# Huntington#
hu.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Huntington",vcv=TRUE)#
#
# Silver#
si.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Silver",vcv=TRUE)#
#
# Washington Park#
wp.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Washington Park",vcv=TRUE)#
#
# West#
we.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="West",vcv=TRUE)#
#
# --------------------------------------#
# Marine beaches#
#
# Avalon#
av.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Avalon",vcv=TRUE)#
#
# Boqueron#
bo.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Boqueron",vcv=TRUE)#
#
# Doheny#
dh.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Doheny",vcv=TRUE)#
#
# Edgewater#
ed.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Edgewater",vcv=TRUE)#
#
# Fairhope#
fa.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Fairhope",vcv=TRUE)#
#
# Goddard#
gd.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Goddard",vcv=TRUE)#
#
# Malibu#
ma.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Malibu",vcv=TRUE)#
#
# Mission Bay#
mb.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Mission Bay",vcv=TRUE)#
#
# Surfside#
su.3swal <- mpreg(diarrheaci3~anycontact+swallwater +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=as,beach="Surfside",vcv=TRUE)#
# --------------------------------------#
# Pooled estimates#
#
### Pooled estimate (all beaches), Swallowed Water#
all.3swal.fit <- glm(diarrheaci3~anycontact+swallwater +marine+pointsource+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=as)#
	all.3swal.VC <- cl(as,fm=all.3swal.fit,cluster=as$hhid)#
	all.3swal <- coeftest(all.3swal.fit, all.3swal.VC) #
#
### Pooled estimate (point vs. non-point source conditions), Swallowed Water#
ps.3swal.fit <- glm(diarrheaci3~(anycontact+ swallwater)*pointsource +marine+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=as)#
	ps.3swal.VC <- cl(as,fm=ps.3swal.fit,cluster=as$hhid)#
	ps.3swal <- coeftest(ps.3swal.fit, ps.3swal.VC) #
	lrtest(all.3swal.fit,ps.3swal.fit)#
#
### Pooled estimate (fresh vs. marine), Swallowed Water#
fm.3swal.fit <- glm(diarrheaci3~(anycontact+ swallwater)*marine +pointsource+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=as)#
	fm.3swal.VC <- cl(as,fm=fm.3swal.fit,cluster=as$hhid)#
	fm.3swal <- coeftest(fm.3swal.fit, fm.3swal.VC)#
	lrtest(all.3swal.fit,fm.3swal.fit)#
# --------------------------------------#
# Age-stratified estimates and LR tests of#
# interaction#
#
### reduced model for LR tests of exposure x age interactions#
noagestrat.3swal.fit <- glm(diarrheaci3~anycontact+swallwater +agestrat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=as)#
#
### Pooled estimate (Age 0-4, 5-10, >10), Swallowed Water#
agestrat.3swal.fit <- glm(diarrheaci3~(anycontact+swallwater)*agestrat +marine+pointsource+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=as)#
	agestrat.3swal.VC <- cl(as,fm=agestrat.3swal.fit,cluster=as$hhid)#
	agestrat.3swal <- coeftest(agestrat.3swal.fit, agestrat.3swal.VC) #
	lrtest(noagestrat.3swal.fit,agestrat.3swal.fit)#
# --------------------------------------#
# Calculate CIRs and 95% CIs#
# from the regression model output#
# note: calls cirtab, swestci and iswestci from#
# the Aim 1 base functions. These calculate#
# CIRs and their CIs using linear combinations#
# of the regression coefficients + VC matrix#
##
# Also run tests of interaction for #
# models with interaction terms using the#
# switest function from the base functions#
#   Point vs. Non-Point sources#
#   Fresh vs. Marine water#
# --------------------------------------#
#
hu.cir <- cirtab(hu.3body,hu.3head,hu.3swal)#
si.cir <- cirtab(si.3body,si.3head,si.3swal)#
wp.cir <- cirtab(wp.3body,wp.3head,wp.3swal)#
we.cir <- cirtab(we.3body,we.3head,we.3swal)#
av.cir <- cirtab(av.3body,av.3head,av.3swal)#
bo.cir <- cirtab(bo.3body,bo.3head,bo.3swal)#
dh.cir <- cirtab(dh.3body,dh.3head,dh.3swal)#
ed.cir <- cirtab(ed.3body,ed.3head,ed.3swal)#
fa.cir <- cirtab(fa.3body,fa.3head,fa.3swal)#
gd.cir <- cirtab(gd.3body,gd.3head,gd.3swal)#
ma.cir <- cirtab(ma.3body,ma.3head,ma.3swal)#
mb.cir <- cirtab(mb.3body,mb.3head,mb.3swal)#
su.cir <- cirtab(su.3body,su.3head,su.3swal)#
#
all.cir <- cirtab(#
			b=list(fit=all.3body,vcovCL=all.3body.VC),#
			h=list(fit=all.3head,vcovCL=all.3head.VC),#
			s=list(fit=all.3swal,vcovCL=all.3swal.VC)#
			)#
#
ps.cir <- cirtab(#
			b=list(fit=ps.3body,vcovCL=ps.3body.VC),#
			h=list(fit=ps.3head,vcovCL=ps.3head.VC),#
			s=list(fit=ps.3swal,vcovCL=ps.3swal.VC), I=TRUE#
			)#
fm.cir <- cirtab(#
			b=list(fit=fm.3body,vcovCL=fm.3body.VC),#
			h=list(fit=fm.3head,vcovCL=fm.3head.VC),#
			s=list(fit=fm.3swal,vcovCL=fm.3swal.VC), I=TRUE#
			)#
# --------------------------------------#
# calculate CIRs for the 3-age group#
# model (the cirtab fn is designed around#
# a binary interaction term, but there#
# are 3 age categories)#
# --------------------------------------#
agestrat.cir <- rbind(#
	unlist(i3swestci(agestrat.3body,agestrat.3body.VC)),#
	unlist(i3swestci(agestrat.3head,agestrat.3head.VC)),#
	unlist(i3swestci(agestrat.3swal,agestrat.3swal.VC))#
	)#
rownames(agestrat.cir) <- c("Body Immersion","Head Immersion","Swallowed Water")#
colnames(agestrat.cir) <- paste(c("est.","lb.","ub."),rep(c("Age0to4","Age5to10","Age11plus"),c(3,3,3)),sep="")
# --------------------------------------#
# Freshwater beaches#
#
# Huntington#
hu.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Huntington",],vcv=TRUE)#
#
# Silver#
si.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Silver",],vcv=TRUE)#
#
# Washington Park#
wp.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Washington Park",],vcv=TRUE)#
#
# West#
we.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="West",],vcv=TRUE)#
#
# --------------------------------------#
# Marine beaches#
#
# Avalon#
av.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Avalon",],vcv=TRUE)#
#
# Boqueron#
bo.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Boqueron",],vcv=TRUE)#
#
# Doheny#
dh.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Doheny",],vcv=TRUE)#
#
# Edgewater#
ed.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Edgewater",],vcv=TRUE)#
#
# Fairhope#
fa.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Fairhope",],vcv=TRUE)#
#
# Goddard#
gd.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Goddard",],vcv=TRUE)#
#
# Malibu#
ma.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Malibu",],vcv=TRUE)#
#
# Mission Bay#
mb.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Mission Bay",],vcv=TRUE)#
#
# Surfside#
su.3body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Surfside",],vcv=TRUE)
### Pooled estimate (all beaches), Body Immersion#
all.3body.fit <- glm(diarrheaci3~anycontact+bodycontact +marine+pointsource+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ab)#
	all.3body.VC <- cl(ab,fm=all.3body.fit,cluster=ab$hhid)#
	all.3body <- coeftest(all.3body.fit, all.3body.VC) #
#
### Pooled estimate (point vs. non-point source conditions), Body Immersion#
ps.3body.fit <- glm(diarrheaci3~(anycontact+bodycontact)*pointsource +marine+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ab)#
	ps.3body.VC <- cl(ab,fm=ps.3body.fit,cluster=ab$hhid)#
	ps.3body <- coeftest(ps.3body.fit, ps.3body.VC) #
	lrtest(all.3body.fit,ps.3body.fit)#
#
### Pooled estimate (fresh vs. marine), Body Immersion#
fm.3body.fit <- glm(diarrheaci3~(anycontact+bodycontact)*marine +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ab)#
	fm.3body.VC <- cl(ab,fm=fm.3body.fit,cluster=ab$hhid)#
	fm.3body <- coeftest(fm.3body.fit, fm.3body.VC)#
	lrtest(all.3body.fit,fm.3body.fit)
# --------------------------------------#
# Age-stratified estimates and LR tests of#
# interaction#
#
### reduced model for LR tests of exposure x age interactions#
noagestrat.swall.fit <- glm(diarrheaci3~anycontact+swallwater +agestrat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=as)#
#
### Pooled estimate (Age 0-4, 5-10, >10), Swallowed Water#
agestrat.swall.fit <- glm(diarrheaci3~(anycontact+swallwater)*agestrat +marine+pointsource+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=as)#
	agestrat.swall.VC <- cl(as,fm=agestrat.swall.fit,cluster=as$hhid)#
	agestrat.swall <- coeftest(agestrat.swall.fit, agestrat.swall.VC) #
	lrtest(noagestrat.swall.fit,agestrat.swall.fit)
# --------------------------------------#
# Pooled estimates#
#
### Pooled estimate (all beaches), Body Immersion#
all.body.fit <- glm(diarrheaci3~anycontact+bodycontact +marine+pointsource+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ab)#
	all.body.VC <- cl(ab,fm=all.body.fit,cluster=ab$hhid)#
	all.body <- coeftest(all.body.fit, all.body.VC) #
#
### Pooled estimate (point vs. non-point source conditions), Body Immersion#
ps.body.fit <- glm(diarrheaci3~(anycontact+bodycontact)*pointsource +marine+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ab)#
	ps.body.VC <- cl(ab,fm=ps.body.fit,cluster=ab$hhid)#
	ps.body <- coeftest(ps.body.fit, ps.body.VC) #
	lrtest(all.body.fit,ps.body.fit)#
#
### Pooled estimate (fresh vs. marine), Body Immersion#
fm.body.fit <- glm(diarrheaci3~(anycontact+bodycontact)*marine +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ab)#
	fm.body.VC <- cl(ab,fm=fm.body.fit,cluster=ab$hhid)#
	fm.body <- coeftest(fm.body.fit, fm.body.VC)#
	lrtest(all.body.fit,fm.body.fit)
# Huntington#
hu.body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Huntington",],vcv=TRUE)#
#
# Silver#
si.body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Silver",],vcv=TRUE)#
#
# Washington Park#
wp.body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Washington Park",],vcv=TRUE)#
#
# West#
we.body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="West",],vcv=TRUE)#
#
# --------------------------------------#
# Marine beaches#
#
# Avalon#
av.body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Avalon",],vcv=TRUE)#
#
# Boqueron#
bo.body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Boqueron",],vcv=TRUE)#
#
# Doheny#
dh.body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Doheny",],vcv=TRUE)#
#
# Edgewater#
ed.body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Edgewater",],vcv=TRUE)#
#
# Fairhope#
fa.body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Fairhope",],vcv=TRUE)#
#
# Goddard#
gd.body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Goddard",],vcv=TRUE)#
#
# Malibu#
ma.body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Malibu",],vcv=TRUE)#
#
# Mission Bay#
mb.body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Mission Bay",],vcv=TRUE)#
#
# Surfside#
su.body <- mpreg(diarrheaci3~anycontact+bodycontact +agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood,dat=ab[ab$beach=="Surfside",],vcv=TRUE)
unlist(i3swestci(agestrat.body,agestrat.body.VC))
### Pooled estimate (Age 0-4, 5-10, >10), Body Immersion#
agestrat.body.fit <- glm(diarrheaci3~(anycontact+bodycontact)*agestrat +marine+pointsource+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ab)#
	agestrat.body.VC <- cl(ab,fm=agestrat.body.fit,cluster=ab$hhid)#
	agestrat.body <- coeftest(agestrat.body.fit, agestrat.body.VC) #
	agestrat.body#
	lrtest(noagestrat.body.fit,agestrat.body.fit)
### reduced models for LR tests of exposure x age interactions#
noagestrat.body.fit <- glm(diarrheaci3~anycontact+bodycontact +agestrat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,family=poisson(link="log"),data=ab)
lrtest(noagestrat.body.fit,agestrat.body.fit)
unlist(i3swestci(agestrat.body,agestrat.body.VC))
table(ab$marine)
marine.body <- mpreg(diarrheaci3~anycontact+bodycontact +marine+pointsource+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,dat=ab[ab$marine=="Yes",])
# marine beaches#
marine.body <- mpreg(diarrheaci3~anycontact+bodycontact +pointsource+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,dat=ab[ab$marine=="Yes",])
# freshwater beaches - Age >10#
fresh11plus.body <- mpreg(diarrheaci3~anycontact+bodycontact +pointsource+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,dat=ab[ab$marine=="No" & ab$agestrat==">10",])
# all conditions - Age >10#
age11plus.body <- mpreg(diarrheaci3~anycontact+bodycontact +marine+pointsource+female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,dat=ab[ab$agestrat==">10",])
# freshwater beaches - Age >10#
fresh11plus.body <- mpreg(diarrheaci3~anycontact+bodycontact +female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,dat=ab[ab$marine=="No" & ab$agestrat==">10",])
CIRswimex <- function(x,vcv) {#
	# x : log-linear model object returned from coeftest (class=coeftest)#
	# vcv : variance-covariance matrix of coefficients for robust SEs#
	lc <- c(0,1,1,rep(0,nrow(x)-3))	#
	estci <- function(lc,x,vcv) {#
	est <- exp(t(lc) %*% x[, 1])#
	se <- sqrt(t(lc) %*% vcv %*% lc)#
	lb <- exp(log(est) - 1.96 * se)#
	ub <- exp(log(est) + 1.96 * se)#
	cir <- c(est, lb, ub)#
	return(cir)#
}
}
CIRswimex <- function(x,vcv) {#
	# x : log-linear model object returned from coeftest (class=coeftest)#
	# vcv : variance-covariance matrix of coefficients for robust SEs#
	lc <- c(0,1,1,rep(0,nrow(x)-3))	#
	est <- exp(t(lc) %*% x[, 1])#
	se <- sqrt(t(lc) %*% vcv %*% lc)#
	lb <- exp(log(est) - 1.96 * se)#
	ub <- exp(log(est) + 1.96 * se)#
	cir <- c(est, lb, ub)#
	return(cir)#
}
names(fresh11plus.body)
fresh11plus.body
# freshwater beaches - Age >10#
fresh11plus.body <- mpreg(diarrheaci3~anycontact+bodycontact +female+racewhite+gichron+anim_any+gicontactbase+rawfood+beach,dat=ab[ab$marine=="No" & ab$agestrat==">10",],vcv=T)
names(fresh11plus.body)
CIRswimex(fresh11plus.body$fit,fresh11plus.body$vcv)
fresh11plus.body$vcv
CIRswimex(fresh11plus.body$fit,fresh11plus.body$vcovCL)
dim(ad)
table(ad$anycontact)
calcNs <- function(x) {#
  n <- sum(x)#
  N <- length(x)#
  cbind(n,N)#
}
calcNs(ad$diarrheaci3[ad$anycontact=="No"])
calcNs <- function(x) {#
  n <- sum(x,na.rm=T)#
  N <- length(x)#
  cbind(n,N)#
}#
#
calcNs(ad$diarrheaci3[ad$anycontact=="No"])
table(ad$diarrheaci3)
summary(ad$diarrheaci3)
sum(table(ad$diarrheaci3))
dim(ad)
sum(ad$diarrheaci3[ad$anycontact=="No"])
table(ad$diarrheaci3,ad$anycontact)
table(is.na(ad$diarrheaci3))
table(is.na(ad$anycontact))
dim(ad)
dim(d)
# --------------------------------------#
# preamble#
# --------------------------------------#
rm(list=ls())#
library(sandwich)#
library(lmtest)#
# source the base functions#
source("~/dropbox/13beaches/src/aim1/0-aim1-base-functions.R")#
# --------------------------------------#
# load the analysis dataset#
# --------------------------------------#
#
d <- read.csv("~/dropbox/13beaches/data/final/13beaches-analysis.csv")#
#
# convert ID variables from factors to strings#
d$hhid <- as.character(d$hhid)#
d$indid <- as.character(d$indid)#
#
# --------------------------------------#
# subset to observations for analysis#
# --------------------------------------#
# drop individuals with baseline GI illness#
table(d$gibase)#
d <- subset(d,gibase!="Yes")#
dim(d)#
# --------------------------------------#
# subset dataset to variables of interest#
# to speed up computations / processing#
# --------------------------------------#
#
# included: agecat, female, racewhite, gichron, anim_any, gicontactbase, rawfood#
# excluded: allergies (not relevant), frequency of beach visits (not measured at all beaches), digging in the sand (not measured at all beaches)#
#
ad <- subset(d,select=c("beach","pointsource","marine","hhid","indid","groundwater","berm","anycontact","bodycontact","headunder","swallwater","diarrheaci3","diarrheaci10","age","agecat","agestrat","female","race","gichron","anim_any","gicontactbase","rawfood"))#
#
# for exposure variables, replace missing factor level with missing values and recode the factors#
ad$anycontact[ad$anycontact==""] <- NA#
	ad$anycontact <- factor(ad$anycontact)#
ad$bodycontact[ad$bodycontact==""] <- NA#
	ad$bodycontact <- factor(ad$bodycontact)#
ad$headunder[ad$headunder==""] <- NA#
	ad$headunder <- factor(ad$headunder)#
ad$swallwater[ad$swallwater==""] <- NA#
	ad$swallwater <- factor(ad$swallwater)#
#
# create a race=white indicator#
ad$racewhite <- factor(ifelse(ad$race=="white","Yes",NA),levels=c("No","Yes","Missing"))#
ad$racewhite[ad$race=="missing"]<-"Missing"#
ad$racewhite[ad$race!="white" & ad$race!="missing"] <- "No"#
#
# for some covariates, move missing category to the last factor category#
levels(ad$gichron) <- c("Missing","No","Yes")#
	ad$gichron <- factor(ad$gichron,levels=c("No","Yes","Missing"))#
ad$gicontactbase <- factor(ad$gicontactbase,levels=c("No","Yes","Missing"))#
# reorder groundwater factor for convenience w/ reg estimates#
ad$groundwater <- factor(ad$groundwater,levels=c("Above median flow","Below median flow",""))#
#
# reorder agecat factor so they are in correct order#
ad$agecat <- factor(ad$agecat,levels=c("0-4","5-14","15-24","25-34","35-44","45-54","55-64","65-74","75+","Missing"))#
#
# re-order the age stratification factor so that older ages are reference (for convenience, since younger children have higher CIRs)#
ad$agestrat <- factor(ad$agestrat,levels=c(">10","(4, 10]","(0, 4]",""),labels=c(">10","(4, 10]","(0, 4]","Missing"))
table(ad$anycontact)
table(is.na(ad$anycontact))
# --------------------------------------#
# preamble#
# --------------------------------------#
rm(list=ls())#
library(sandwich)#
library(lmtest)#
# source the base functions#
source("~/dropbox/13beaches/src/aim1/0-aim1-base-functions.R")#
# --------------------------------------#
# load the and pre-preprocess the #
# analysis dataset#
# (refer to the base functions script#
# for details on the pre-processing)#
# --------------------------------------#
#
ad <- preprocess.13beaches("~/dropbox/13beaches/data/final/13beaches-analysis.csv")#
# --------------------------------------#
# esimate risk of Diarrhea in 3 days#
# associated with ocean exposure#
# for different levels of ocean exposure#
# --------------------------------------#
#
# adjustment covariates:#
# +marine+pointsource+agecat+female+racewhite+gichron+anim_any+gicontactbase+rawfood#
# --------------------------------------#
# BODY IMMERSION#
# --------------------------------------#
#
# subset to non-missing exposure categories#
# to make the robust CI calcs work#
dim(ad)#
table(ad$anycontact)#
ab <- subset(ad,is.na(ad$anycontact)==FALSE)#
dim(ab)#
table(ab$bodycontact)#
ab <- subset(ab,is.na(ab$bodycontact)==FALSE)#
dim(ab)
calcNs <- function(x) {#
  n <- sum(x)#
  N <- length(x)#
  cbind(n,N)#
}#
#
calcNs(ad$diarrheaci3[ad$anycontact=="No"])
table(ab$bodycontact)
table(ad$anycontact)
table(ab$anycontact)
table(ah$anycontact)
# subset to non-missing exposure categories#
# to make the robust CI calcs work#
dim(ad)#
table(ad$anycontact)#
ah <- subset(ad,is.na(ad$anycontact)==FALSE)#
dim(ah)#
table(ah$headunder)#
ah <- subset(ah,is.na(ah$headunder)==FALSE)#
dim(ah)
# subset to non-missing exposure categories#
# to make the robust CI calcs work#
dim(ad)#
table(ad$anycontact)#
as <- subset(ad,is.na(ad$anycontact)==FALSE)#
table(as$swallwater)#
as <- subset(as,is.na(as$swallwater)==FALSE)#
dim(as)
dim(ad)
dim(ab)
dim(ah)
dim(as)
all.noswim.cifit <- glm(diarrheaci3~1,family=poisson(link="log"),data=ad[ad$anycontact=="No",])
all.noswim.cifit <- glm(diarrheaci3~1,family=poisson(link="log"),data=ad[ad$anycontact=="No",])#
	allci.noswim.VC <- cl(ad,fm=all.cifit,cluster=ad$hhid)#
	allci.noswim <- coeftest(all.cifit, allci.VC)#
	allci.noswim
allci.noswim.VC <- cl(ad,fm=all.cifit,cluster=ad$hhid)#
	allci.noswim <- coeftest(all.noswim.cifit, allci.noswim.VC)#
	allci.noswim
all.noswim.cifit <- glm(diarrheaci3~1,family=poisson(link="log"),data=ad[ad$anycontact=="No",])#
	allci.noswim.VC <- cl(ad,fm=all.noswim.cifit,cluster=ad$hhid)#
	allci.noswim <- coeftest(all.noswim.cifit, allci.noswim.VC)#
	allci.noswim
all.noswim.cifit <- glm(diarrheaci3~1,family=poisson(link="log"),data=ad[ad$anycontact=="No",])#
	allci.noswim.VC <- cl(ad[ad$anycontact=="No",],fm=all.noswim.cifit,cluster=ad$hhid[ad$anycontact=="No",])#
	allci.noswim <- coeftest(all.noswim.cifit, allci.noswim.VC)#
	allci.noswim
allci.noswim.VC <- cl(ad[ad$anycontact=="No",],fm=all.noswim.cifit,cluster=ad$hhid[ad$anycontact=="No"])
allci.noswim <- coeftest(all.noswim.cifit, allci.noswim.VC)#
	allci.noswim
exp(allci.noswim[,1])
adnoswim <- subset(ad,anycontact=="No")
dim(adnoswim)
age0to4.noswim.cifit <- glm(diarrheaci3~1,family=poisson(link="log"),data=subset(adnoswim,agestrat=="(0, 4]"))
all.noswim.cifit <- mpreg(diarrheaci3~1,dat=adnoswim,vcv=T)
age0to4.noswim.cifit <- mpreg(diarrheaci3~1,dat=subset(adnoswim,agestrat=="(0, 4]"),vcv=T)
allci.noswim       <- mpreg(diarrheaci3~1,dat=adnoswim)
allci.noswim       <- getCI(mpreg(diarrheaci3~1,dat=adnoswim))
# function to get estimates of cumulative incidence and CIs from model objects#
getCI <- function(fit) {#
	# fit : an object returned from coeftest w/ single parameters corresponding to log(cumulative incidence)#
	est <- exp(fit[1,1])#
	se <- fit[2,2]#
	lb <- exp(log(est)-1.96*se)#
	ub <- exp(log(est)+1.96*se)#
	res <- c(est,lb,ub)#
	return(res)#
}
allci.noswim       <- getCI(mpreg(diarrheaci3~1,dat=adnoswim))
# function to get estimates of cumulative incidence and CIs from model objects#
getCI <- function(fit) {#
	# fit : an object returned from coeftest w/ single parameters corresponding to log(cumulative incidence)#
	est <- exp(fit[1,1])#
	se <- fit[1,2]#
	lb <- exp(log(est)-1.96*se)#
	ub <- exp(log(est)+1.96*se)#
	res <- c(est,lb,ub)#
	return(res)#
}
allci.noswim       <- getCI(mpreg(diarrheaci3~1,dat=adnoswim))
allci.noswim
data=adnoswim
calcNs <- function(x) {#
  		n <- sum(x)#
  		N <- length(x)#
  		cbind(n,N)#
		}#
#
	N.all       <- calcNs(data$diarrheaci3)#
	N.age0to4   <- calcNs(data$diarrheaci3[data$agestrat=="(0, 4]"])#
	N.age5to10  <- calcNs(data$diarrheaci3[data$agestrat=="(4, 10]"])#
	N.age11plus <- calcNs(data$diarrheaci3[data$agestrat==">10"])#
	N.marine       <- calcNs(data$diarrheaci3[data$marine=="Yes"])#
	N.marine0to4   <- calcNs(data$diarrheaci3[data$marine=="Yes" & data$agestrat=="(0, 4]"])#
	N.marine5to10  <- calcNs(data$diarrheaci3[data$marine=="Yes" & data$agestrat=="(4, 10]"])#
	N.marine11plus <- calcNs(data$diarrheaci3[data$marine=="Yes" & data$agestrat==">10"])#
	N.fresh       <- calcNs(data$diarrheaci3[data$marine=="No"])#
	N.fresh0to4   <- calcNs(data$diarrheaci3[data$marine=="No" & data$agestrat=="(0, 4]"])#
	N.fresh5to10  <- calcNs(data$diarrheaci3[data$marine=="No" & data$agestrat=="(4, 10]"])#
	N.fresh11plus <- calcNs(data$diarrheaci3[data$marine=="No" & data$agestrat==">10"])
N.all
Noverall <- rbind(N.all,N.age0to4,N.age5to10,Nage11plus)
Noverall <- rbind(N.all,N.age0to4,N.age5to10,N.age11plus)
Noverall
calcN.swimex <- function(data) {#
	calcNs <- function(x) {#
  		n <- sum(x)#
  		N <- length(x)#
  		cbind(n,N)#
		}#
#
	N.all       <- calcNs(data$diarrheaci3)#
	N.age0to4   <- calcNs(data$diarrheaci3[data$agestrat=="(0, 4]"])#
	N.age5to10  <- calcNs(data$diarrheaci3[data$agestrat=="(4, 10]"])#
	N.age11plus <- calcNs(data$diarrheaci3[data$agestrat==">10"])#
	Noverall <- rbind(N.all,N.age0to4,N.age5to10,N.age11plus)#
	N.marine       <- calcNs(data$diarrheaci3[data$marine=="Yes"])#
	N.marine0to4   <- calcNs(data$diarrheaci3[data$marine=="Yes" & data$agestrat=="(0, 4]"])#
	N.marine5to10  <- calcNs(data$diarrheaci3[data$marine=="Yes" & data$agestrat=="(4, 10]"])#
	N.marine11plus <- calcNs(data$diarrheaci3[data$marine=="Yes" & data$agestrat==">10"])#
	Nmarine <- rbind(N.marine,N.marine0to4,N.marine5to10,N.marine11plus)#
	N.fresh       <- calcNs(data$diarrheaci3[data$marine=="No"])#
	N.fresh0to4   <- calcNs(data$diarrheaci3[data$marine=="No" & data$agestrat=="(0, 4]"])#
	N.fresh5to10  <- calcNs(data$diarrheaci3[data$marine=="No" & data$agestrat=="(4, 10]"])#
	N.fresh11plus <- calcNs(data$diarrheaci3[data$marine=="No" & data$agestrat==">10"])#
	Nfresh <- rbind(N.fresh,N.fresh0to4,N.fresh5to10,N.fresh11plus)#
	rownames(Noverall) <- rownames(Nmarine) <- rownames(Nfresh) <- c("All Ages","Age 0 to 4","Age 5 to 10","Age >10")#
#
	list(Noverall=Noverall,Nmarine=Nmarine,Nfresh=Nfresh)#
}
N.noswim <- calcN.swimex(adnoswim)
N.noswim
allci       <- mpreg(diarrheaci3~1,dat=data)#
	age0to4ci   <- mpreg(diarrheaci3~1,dat=subset(data,agestrat=="(0, 4]"))#
	age5to10ci  <- mpreg(diarrheaci3~1,dat=subset(data,agestrat=="(4, 10]"))#
	age11plusci <- mpreg(diarrheaci3~1,dat=subset(data,agestrat==">10"))#
	marineci       <- mpreg(diarrheaci3~1,dat=subset(data,marine=="Yes"))#
	marine0to4ci   <- mpreg(diarrheaci3~1,dat=subset(data,marine=="Yes" & agestrat=="(0, 4]"))#
	marine5to10ci  <- mpreg(diarrheaci3~1,dat=subset(data,marine=="Yes" & agestrat=="(4, 10]"))#
	marine11plusci <- mpreg(diarrheaci3~1,dat=subset(data,marine=="Yes" & agestrat==">10"))#
	freshci       <- mpreg(diarrheaci3~1,dat=subset(data,marine=="No"))#
	fresh0to4ci   <- mpreg(diarrheaci3~1,dat=subset(data,marine=="No" & agestrat=="(0, 4]"))#
	fresh5to10ci  <- mpreg(diarrheaci3~1,dat=subset(data,marine=="No" & agestrat=="(4, 10]"))#
	fresh11plusci <- mpreg(diarrheaci3~1,dat=subset(data,marine=="No" & agestrat==">10"))#
	# function to get estimates of cumulative incidence and CIs from model objects#
	# could do all of the processing more efficiently below with sapply, #
	# but keeping the objects separate for now for convenience.#
	getCI <- function(fit) {#
		# fit : an object returned from coeftest w/ single parameters corresponding to log(cumulative incidence)#
		est <- exp(fit[1,1])#
		se <- fit[1,2]#
		lb <- exp(log(est)-1.96*se)#
		ub <- exp(log(est)+1.96*se)#
		res <- c(est,lb,ub)#
		return(res)#
	}#
	ci.all       <- getCI(allci)#
	ci.age0to4   <- getCI(age0to4ci) #
	ci.age5to10  <- getCI(age5to10ci)#
	ci.age11plus <- getCI(age11plusci)
ci.all
ci.overall <- list(allci,age0to4ci,age5to10ci,age11plusci)#
	CIoverall <- sapply(ci.overall,getCI)
CIoverall
CIoverall <- t(sapply(ci.overall,getCI))
CIoverall
ci.age5to10  <- getCI(age5to10ci)
getCI(age5to10ci)
ci.overall <- list(allci,age0to4ci,age5to10ci,age11plusci)#
	CIoverall <- t(sapply(ci.overall,getCI))#
	ci.marine <- list(marineci,marine0to4ci,marine5to10ci,marine11plusci)#
	CImarine <- t(sapply(ci.marine,getCI))#
	ci.fresh <- list(freshci,fresh0to4ci,fresh5to10ci,fresh11plusci)#
	CIfresh <- t(sapply(ci.fresh,getCI))
CIfresh
rownames(CIoverall) <- rownames(CImarine) <- rownames(CIfresh) <- c("All Ages","Age 0 to 4","Age 5 to 10","Age >10")#
	colnames(CIoverall) <- rownames(CImarine) <- rownames(CIfresh) <- c("CI","CIlb","CIub")
colnames(CIoverall) <- colnames(CImarine) <- colnames(CIfresh) <- c("CI","CIlb","CIub")
ciFresh
CIfresh
CIoverall
CImarine
CI.swimex <- function(data) {#
	allci       <- mpreg(diarrheaci3~1,dat=data)#
	age0to4ci   <- mpreg(diarrheaci3~1,dat=subset(data,agestrat=="(0, 4]"))#
	age5to10ci  <- mpreg(diarrheaci3~1,dat=subset(data,agestrat=="(4, 10]"))#
	age11plusci <- mpreg(diarrheaci3~1,dat=subset(data,agestrat==">10"))#
	marineci       <- mpreg(diarrheaci3~1,dat=subset(data,marine=="Yes"))#
	marine0to4ci   <- mpreg(diarrheaci3~1,dat=subset(data,marine=="Yes" & agestrat=="(0, 4]"))#
	marine5to10ci  <- mpreg(diarrheaci3~1,dat=subset(data,marine=="Yes" & agestrat=="(4, 10]"))#
	marine11plusci <- mpreg(diarrheaci3~1,dat=subset(data,marine=="Yes" & agestrat==">10"))#
	freshci       <- mpreg(diarrheaci3~1,dat=subset(data,marine=="No"))#
	fresh0to4ci   <- mpreg(diarrheaci3~1,dat=subset(data,marine=="No" & agestrat=="(0, 4]"))#
	fresh5to10ci  <- mpreg(diarrheaci3~1,dat=subset(data,marine=="No" & agestrat=="(4, 10]"))#
	fresh11plusci <- mpreg(diarrheaci3~1,dat=subset(data,marine=="No" & agestrat==">10"))#
	# function to get estimates of cumulative incidence and CIs from model objects#
	getCI <- function(fit) {#
		# fit : an object returned from coeftest w/ single parameters corresponding to log(cumulative incidence)#
		est <- exp(fit[1,1])#
		se <- fit[1,2]#
		lb <- exp(log(est)-1.96*se)#
		ub <- exp(log(est)+1.96*se)#
		res <- c(est,lb,ub)#
		return(res)#
	}#
	ci.overall <- list(allci,age0to4ci,age5to10ci,age11plusci)#
	CIoverall <- t(sapply(ci.overall,getCI))#
	ci.marine <- list(marineci,marine0to4ci,marine5to10ci,marine11plusci)#
	CImarine <- t(sapply(ci.marine,getCI))#
	ci.fresh <- list(freshci,fresh0to4ci,fresh5to10ci,fresh11plusci)#
	CIfresh <- t(sapply(ci.fresh,getCI))#
	rownames(CIoverall) <- rownames(CImarine) <- rownames(CIfresh) <- c("All Ages","Age 0 to 4","Age 5 to 10","Age >10")#
	colnames(CIoverall) <- colnames(CImarine) <- colnames(CIfresh) <- c("CI","CIlb","CIub")#
	list(CIoverall=CIoverall,CImarine=CImarine,CIfresh=CIfresh)#
}
N.swimex <- function(data) {#
	# data: data frame that includes the variables referenced below#
	#       (designed to be subset to a specific swim exposure category:#
	#        non-swimmers, body immersion, head immersion, swallowed water)#
	calcNs <- function(x) {#
  		n <- sum(x)#
  		N <- length(x)#
  		cbind(n,N)#
		}#
#
	N.all       <- calcNs(data$diarrheaci3)#
	N.age0to4   <- calcNs(data$diarrheaci3[data$agestrat=="(0, 4]"])#
	N.age5to10  <- calcNs(data$diarrheaci3[data$agestrat=="(4, 10]"])#
	N.age11plus <- calcNs(data$diarrheaci3[data$agestrat==">10"])#
	Noverall <- rbind(N.all,N.age0to4,N.age5to10,N.age11plus)#
	N.marine       <- calcNs(data$diarrheaci3[data$marine=="Yes"])#
	N.marine0to4   <- calcNs(data$diarrheaci3[data$marine=="Yes" & data$agestrat=="(0, 4]"])#
	N.marine5to10  <- calcNs(data$diarrheaci3[data$marine=="Yes" & data$agestrat=="(4, 10]"])#
	N.marine11plus <- calcNs(data$diarrheaci3[data$marine=="Yes" & data$agestrat==">10"])#
	Nmarine <- rbind(N.marine,N.marine0to4,N.marine5to10,N.marine11plus)#
	N.fresh       <- calcNs(data$diarrheaci3[data$marine=="No"])#
	N.fresh0to4   <- calcNs(data$diarrheaci3[data$marine=="No" & data$agestrat=="(0, 4]"])#
	N.fresh5to10  <- calcNs(data$diarrheaci3[data$marine=="No" & data$agestrat=="(4, 10]"])#
	N.fresh11plus <- calcNs(data$diarrheaci3[data$marine=="No" & data$agestrat==">10"])#
	Nfresh <- rbind(N.fresh,N.fresh0to4,N.fresh5to10,N.fresh11plus)#
	rownames(Noverall) <- rownames(Nmarine) <- rownames(Nfresh) <- c("All Ages","Age 0 to 4","Age 5 to 10","Age >10")#
#
	list(Noverall=Noverall,Nmarine=Nmarine,Nfresh=Nfresh)#
}#
#
# --------------------------------------#
# Convenience Function to calculate #
# Cumulative Incidence and robust SEs#
# for Swim Exposure Analyses#
##
# Note: relies on the mpreg function (above)#
# --------------------------------------#
#
CI.swimex <- function(data) {#
	# data: data frame that includes the variables referenced below#
	#       (designed to be subset to a specific swim exposure category:#
	#        non-swimmers, body immersion, head immersion, swallowed water)#
	allci       <- mpreg(diarrheaci3~1,dat=data)#
	age0to4ci   <- mpreg(diarrheaci3~1,dat=subset(data,agestrat=="(0, 4]"))#
	age5to10ci  <- mpreg(diarrheaci3~1,dat=subset(data,agestrat=="(4, 10]"))#
	age11plusci <- mpreg(diarrheaci3~1,dat=subset(data,agestrat==">10"))#
	marineci       <- mpreg(diarrheaci3~1,dat=subset(data,marine=="Yes"))#
	marine0to4ci   <- mpreg(diarrheaci3~1,dat=subset(data,marine=="Yes" & agestrat=="(0, 4]"))#
	marine5to10ci  <- mpreg(diarrheaci3~1,dat=subset(data,marine=="Yes" & agestrat=="(4, 10]"))#
	marine11plusci <- mpreg(diarrheaci3~1,dat=subset(data,marine=="Yes" & agestrat==">10"))#
	freshci       <- mpreg(diarrheaci3~1,dat=subset(data,marine=="No"))#
	fresh0to4ci   <- mpreg(diarrheaci3~1,dat=subset(data,marine=="No" & agestrat=="(0, 4]"))#
	fresh5to10ci  <- mpreg(diarrheaci3~1,dat=subset(data,marine=="No" & agestrat=="(4, 10]"))#
	fresh11plusci <- mpreg(diarrheaci3~1,dat=subset(data,marine=="No" & agestrat==">10"))#
	# function to get estimates of cumulative incidence and CIs from model objects#
	getCI <- function(fit) {#
		# fit : an object returned from coeftest w/ single parameters corresponding to log(cumulative incidence)#
		est <- exp(fit[1,1])#
		se <- fit[1,2]#
		lb <- exp(log(est)-1.96*se)#
		ub <- exp(log(est)+1.96*se)#
		res <- c(est,lb,ub)#
		return(res)#
	}#
	ci.overall <- list(allci,age0to4ci,age5to10ci,age11plusci)#
	CIoverall <- t(sapply(ci.overall,getCI))#
	ci.marine <- list(marineci,marine0to4ci,marine5to10ci,marine11plusci)#
	CImarine <- t(sapply(ci.marine,getCI))#
	ci.fresh <- list(freshci,fresh0to4ci,fresh5to10ci,fresh11plusci)#
	CIfresh <- t(sapply(ci.fresh,getCI))#
	rownames(CIoverall) <- rownames(CImarine) <- rownames(CIfresh) <- c("All Ages","Age 0 to 4","Age 5 to 10","Age >10")#
	colnames(CIoverall) <- colnames(CImarine) <- colnames(CIfresh) <- c("CI","CIlb","CIub")#
	list(CIoverall=CIoverall,CImarine=CImarine,CIfresh=CIfresh)#
}
N.noswim <- N.swimex(subset(ad,anycontact=="No"))#
# --------------------------------------#
# Calculate unadjusted #
# Cumulative Incidence Rates#
# and robust 95% CIs using an intercept model#
# (just using the models to get the robust#
# SEs that account for HH clustering)#
# --------------------------------------#
#
CI.noswim <- CI.swimex(subset(ad,anycontact=="No"))
CI.noswim
??suppress
?invisible
CI.noswim <- invisible(CI.swimex(subset(ad,anycontact=="No")))
CI.noswim
N.noswim
N.body <- N.swimex(subset(ad,bodycontact=="Yes"))#
#
# --------------------------------------#
# Calculate unadjusted #
# Cumulative Incidence Rates#
# and robust 95% CIs using an intercept model#
# see the CI.swimex function in the #
# base functions#
# --------------------------------------#
CI.body <- CI.swimex(subset(ad,bodycontact=="Yes"))
N.body
CI.body
CI.noswim
# --------------------------------------#
# Summarize #
# the number of people at risk and number#
# of cumulative incident episodes#
# see the N.swimex function in the #
# base functions#
# --------------------------------------#
N.head <- N.swimex(subset(ad,headunder=="Yes"))
N.head
rm(list=ls())#
library(sandwich)#
library(lmtest)#
# source the base functions#
source("~/dropbox/13beaches/src/aim1/0-aim1-base-functions.R")#
# --------------------------------------#
# load the and pre-preprocess the #
# analysis dataset#
# (refer to the base functions script#
# for details on the pre-processing)#
# --------------------------------------#
#
ad <- preprocess.13beaches("~/dropbox/13beaches/data/final/13beaches-analysis.csv")
exposure="bodycontact"
# create a general exposure variable#
	ad$exposed <- data[,exposure]
ad$exposed <- data[,c(exposure)]
ad$exposed <- data[,c(paste(exposure,sep="")]
exposure
ad$exposed <- ad[,exposure]
table(ad$bodycontact,ad$exposed)
rm(list=ls())#
library(RColorBrewer)#
#
# --------------------------------------#
# Load the body immersion output #
# and rename common objects#
# --------------------------------------#
load("~/dropbox/13beaches/aim1-results/rawoutput/aim1-swim-exposure-regs-body.RData")#
Ns.body   <- Ns#
CIs.body  <- CIs#
CIRs.body <- CIRs#
# --------------------------------------#
# Load the head immersion output #
# and rename common objects#
# --------------------------------------#
load("~/dropbox/13beaches/aim1-results/rawoutput/aim1-swim-exposure-regs-head.RData")#
Ns.head   <- Ns#
CIs.head  <- CIs#
CIRs.head <- CIRs#
# --------------------------------------#
# Load the swallowed water output #
# and rename common objects#
# --------------------------------------#
load("~/dropbox/13beaches/aim1-results/rawoutput/aim1-swim-exposure-regs-swall.RData")#
Ns.swall   <- Ns#
CIs.swall  <- CIs#
CIRs.swall <- CIRs
