
R version 3.2.1 (2015-06-18) -- "World-Famous Astronaut"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # --------------------------------------
> # 14-aim2-PAF-by-exposure-figure.R
> # ben arnold (benarnold@berkeley.edu)
> #
> # description:
> # plot the population attributable fraction (PAF)
> # that corresponds with different %s of exposure
> # in the population for swimming exposure and
> # for swimming in contaminated water exposure
> #
> # version 2 (31 jul 2015)
> # finalized the format
> #
> # version 1 (10 jun 2015)
> #
> # --------------------------------------
> 
> # --------------------------------------
> # input files:
> #	aim1-entero1600-35cfu-regs-body.RData
> #	aim1-swim-exposure-regs-body.Rdata
> #	aim2-PARswimex-diar.Rdata
> #
> # output files:
> #	aim2-PAF-entero1600-diarrhea.pdf
> # --------------------------------------
> 
> # --------------------------------------
> # preamble
> # --------------------------------------
> 
> rm(list=ls())
> library(RColorBrewer)
> 
> # source the base functions
> source("~/dropbox/13beaches/src/aim1/0-aim1-base-functions.R")
> 
> # --------------------------------------
> # PAF function
> # calculate the PAF given an RR and
> # a proportion exposed
> # --------------------------------------
> 
> PAFcalc <- function(Pe,RR) {
+ 	# calculate the population attributable fraction
+ 	# under a counterfactual where the exposure is removed
+ 	# see section 4.7 of Jewell 2004 Statistics for Epidemiology
+ 	# RR : relative risk associated with exposure
+ 	# Pe : proportion of the population exposed
+ 	PAF <- Pe*(RR-1) / (1 + Pe*(RR-1))
+ 	return(PAF)
+ 
+ }
> 
> PAFcalc2 <- function(Pe,p0,pobs,RR) {
+ 	# calculate the population attributable fraction
+ 	# for an exposure variable with three levels (0, 1, 2)
+ 	# under a counterfactual where exposure level 2 is re-assigned 
+ 	# to level 0 (leaving level 1 the same)
+ 	# This is akin to assigning swimmers with Entero >35 CFU to
+ 	# be non-swimmers
+ 	# see section 4.7 of Jewell 2004 Statistics for Epidemiology
+ 	# for the basic sketch of how to solve for this, though this
+ 	# is a slightly more complicated case
+ 	# note that PAF = [P(obs) - P(counterfactual)] / P(obs)
+ 	# where P(obs) = Pe_0*p0 + Pe_1*p1 + Pe_2*p2
+ 	# and P(count) = (Pe_0 + Pe_2)*p0 + Pe_1*p1
+ 	# Thus, PAF = Pe_2(p2-p0)/P(obs) = Pe_2*p0(RR-1)/P(obs)
+ 	# 
+ 	# Pe   : proportion of the population exposed to level 2
+ 	# p0   : risk in the unexposed
+ 	# pobs : observed risk in the population
+ 	# RR   : CIR for exposure level 2 versus unexposed (level 0)
+ 	PAF <- Pe*p0*(RR-1)/pobs
+ 	return(PAF)
+ }
> 
> 
> 
> # --------------------------------------
> # load the swim exposure regression output
> # and PAR output (to get total Ns)
> # --------------------------------------
> 
> load("~/dropbox/13beaches/aim1-results/rawoutput/aim1-swim-exposure-regs-body.Rdata")
> load("~/dropbox/13beaches/aim2-results/rawoutput/aim2-PARswimex-diar.Rdata")
> 
> 
> 
> 
> 
> # --------------------------------------
> # Calculate the PAF across a range of
> # exposures for different subgroups
> # --------------------------------------
> Pe <- seq(0,1,by=0.01)
> 
> paf.diar.age0to4   <- sapply(Pe,PAFcalc,RR=CIRs$CIRoverall[2,1])
> paf.diar.age5to10  <- sapply(Pe,PAFcalc,RR=CIRs$CIRoverall[3,1])
> paf.diar.age11plus <- sapply(Pe,PAFcalc,RR=CIRs$CIRoverall[4,1])
> 
> # print model estimates
> cbind(Pe,paf.diar.age0to4,paf.diar.age5to10,paf.diar.age11plus)
         Pe paf.diar.age0to4 paf.diar.age5to10 paf.diar.age11plus
  [1,] 0.00      0.000000000        0.00000000        0.000000000
  [2,] 0.01      0.005045436        0.01001448        0.003604536
  [3,] 0.02      0.010040215        0.01983038        0.007183180
  [4,] 0.03      0.014985096        0.02945353        0.010736210
  [5,] 0.04      0.019880823        0.03888956        0.014263900
  [6,] 0.05      0.024728125        0.04814387        0.017766520
  [7,] 0.06      0.029527717        0.05722167        0.021244337
  [8,] 0.07      0.034280300        0.06612796        0.024697612
  [9,] 0.08      0.038986561        0.07486755        0.028126605
 [10,] 0.09      0.043647175        0.08344508        0.031531571
 [11,] 0.10      0.048262802        0.09186501        0.034912762
 [12,] 0.11      0.052834090        0.10013165        0.038270426
 [13,] 0.12      0.057361675        0.10824915        0.041604807
 [14,] 0.13      0.061846181        0.11622150        0.044916147
 [15,] 0.14      0.066288220        0.12405258        0.048204684
 [16,] 0.15      0.070688393        0.13174609        0.051470652
 [17,] 0.16      0.075047287        0.13930563        0.054714283
 [18,] 0.17      0.079365482        0.14673467        0.057935806
 [19,] 0.18      0.083643546        0.15403656        0.061135446
 [20,] 0.19      0.087882033        0.16121454        0.064313425
 [21,] 0.20      0.092081493        0.16827173        0.067469962
 [22,] 0.21      0.096242460        0.17521117        0.070605273
 [23,] 0.22      0.100365462        0.18203576        0.073719572
 [24,] 0.23      0.104451016        0.18874834        0.076813070
 [25,] 0.24      0.108499630        0.19535165        0.079885973
 [26,] 0.25      0.112511802        0.20184832        0.082938488
 [27,] 0.26      0.116488023        0.20824093        0.085970816
 [28,] 0.27      0.120428774        0.21453196        0.088983157
 [29,] 0.28      0.124334526        0.22072380        0.091975707
 [30,] 0.29      0.128205745        0.22681878        0.094948662
 [31,] 0.30      0.132042886        0.23281916        0.097902213
 [32,] 0.31      0.135846397        0.23872712        0.100836550
 [33,] 0.32      0.139616719        0.24454479        0.103751858
 [34,] 0.33      0.143354283        0.25027421        0.106648324
 [35,] 0.34      0.147059516        0.25591738        0.109526128
 [36,] 0.35      0.150732834        0.26147624        0.112385451
 [37,] 0.36      0.154374648        0.26695265        0.115226471
 [38,] 0.37      0.157985362        0.27234844        0.118049361
 [39,] 0.38      0.161565373        0.27766538        0.120854296
 [40,] 0.39      0.165115070        0.28290518        0.123641446
 [41,] 0.40      0.168634838        0.28806951        0.126410979
 [42,] 0.41      0.172125052        0.29315999        0.129163063
 [43,] 0.42      0.175586083        0.29817818        0.131897862
 [44,] 0.43      0.179018296        0.30312563        0.134615537
 [45,] 0.44      0.182422050        0.30800381        0.137316249
 [46,] 0.45      0.185797697        0.31281417        0.140000157
 [47,] 0.46      0.189145583        0.31755811        0.142667417
 [48,] 0.47      0.192466050        0.32223701        0.145318183
 [49,] 0.48      0.195759433        0.32685218        0.147952609
 [50,] 0.49      0.199026062        0.33140493        0.150570843
 [51,] 0.50      0.202266262        0.33589650        0.153173036
 [52,] 0.51      0.205480353        0.34032813        0.155759334
 [53,] 0.52      0.208668648        0.34470101        0.158329883
 [54,] 0.53      0.211831457        0.34901629        0.160884825
 [55,] 0.54      0.214969084        0.35327511        0.163424303
 [56,] 0.55      0.218081829        0.35747857        0.165948457
 [57,] 0.56      0.221169987        0.36162774        0.168457424
 [58,] 0.57      0.224233847        0.36572367        0.170951342
 [59,] 0.58      0.227273696        0.36976737        0.173430345
 [60,] 0.59      0.230289815        0.37375984        0.175894568
 [61,] 0.60      0.233282480        0.37770204        0.178344140
 [62,] 0.61      0.236251964        0.38159492        0.180779194
 [63,] 0.62      0.239198535        0.38543940        0.183199858
 [64,] 0.63      0.242122457        0.38923638        0.185606258
 [65,] 0.64      0.245023992        0.39298672        0.187998521
 [66,] 0.65      0.247903393        0.39669129        0.190376770
 [67,] 0.66      0.250760915        0.40035091        0.192741129
 [68,] 0.67      0.253596805        0.40396641        0.195091719
 [69,] 0.68      0.256411308        0.40753856        0.197428660
 [70,] 0.69      0.259204666        0.41106816        0.199752070
 [71,] 0.70      0.261977115        0.41455595        0.202062066
 [72,] 0.71      0.264728889        0.41800267        0.204358765
 [73,] 0.72      0.267460219        0.42140904        0.206642281
 [74,] 0.73      0.270171332        0.42477577        0.208912726
 [75,] 0.74      0.272862452        0.42810355        0.211170214
 [76,] 0.75      0.275533798        0.43139305        0.213414853
 [77,] 0.76      0.278185588        0.43464492        0.215646755
 [78,] 0.77      0.280818036        0.43785980        0.217866027
 [79,] 0.78      0.283431353        0.44103833        0.220072776
 [80,] 0.79      0.286025747        0.44418112        0.222267107
 [81,] 0.80      0.288601421        0.44728876        0.224449125
 [82,] 0.81      0.291158579        0.45036185        0.226618934
 [83,] 0.82      0.293697420        0.45340096        0.228776635
 [84,] 0.83      0.296218138        0.45640663        0.230922331
 [85,] 0.84      0.298720928        0.45937944        0.233056119
 [86,] 0.85      0.301205981        0.46231991        0.235178101
 [87,] 0.86      0.303673483        0.46522856        0.237288372
 [88,] 0.87      0.306123621        0.46810591        0.239387030
 [89,] 0.88      0.308556577        0.47095247        0.241474171
 [90,] 0.89      0.310972531        0.47376872        0.243549889
 [91,] 0.90      0.313371661        0.47655514        0.245614277
 [92,] 0.91      0.315754141        0.47931221        0.247667428
 [93,] 0.92      0.318120146        0.48204039        0.249709434
 [94,] 0.93      0.320469844        0.48474013        0.251740385
 [95,] 0.94      0.322803404        0.48741187        0.253760371
 [96,] 0.95      0.325120992        0.49005605        0.255769479
 [97,] 0.96      0.327422770        0.49267309        0.257767799
 [98,] 0.97      0.329708901        0.49526340        0.259755416
 [99,] 0.98      0.331979543        0.49782740        0.261732416
[100,] 0.99      0.334234854        0.50036548        0.263698884
[101,] 1.00      0.336474987        0.50287803        0.265654904
> 
> # --------------------------------------
> # Grab the empirical exposure levels to
> # get actual PAFs to plot points
> # --------------------------------------
> pe <- N.body[,2]/N.total[,2]
> 
> paf.diar.age0to4e   <- PAFcalc(Pe=pe[2],RR=CIRs$CIRoverall[2,1])
> paf.diar.age5to10e  <- PAFcalc(Pe=pe[3],RR=CIRs$CIRoverall[3,1])
> paf.diar.age11pluse <- PAFcalc(Pe=pe[4],RR=CIRs$CIRoverall[4,1])
> 
> # --------------------------------------
> # Plot the curves and points for 
> # diarrhea and days missed of daily
> # activities
> # --------------------------------------
> 
> pdf("~/dropbox/13beaches/aim2-results/figs/aim2-PAF-swimex-diarrhea.pdf")
> # lo <- layout(mat=matrix(1:2,nrow=1,ncol=2))
> op <- par(mar=c(4,4,4,2)+0.1)
> ytics <- seq(0,0.6,by=0.1)
> cols <- brewer.pal(5,"Dark2")
> 
> plot(Pe,paf.diar.age0to4,type="n",
+ 	bty="n",
+ 	xaxt="n",xlab="",xlim=c(0,1),
+ 	yaxt="n",ylab="",ylim=range(ytics),
+ 	las=1
+ 	)
> 	axis(1,at=seq(0,1,by=0.1),labels=seq(0,100,by=10))
> 	axis(2,at=ytics,labels=sprintf("%1.0f",ytics*100),las=1)
> 	mtext("Proportion of Beachgoers Exposed to Swimming (%)",side=1,line=3)
> 	mtext("Diarrhea Episodes",side=3,line=1,at=-0.14,adj=0)
> 	mtext("Population Attributable Fraction (%)",side=3,line=0,at=-0.14,adj=0)
> 	# mtext("A)",side=3,line=2,at=-0.14,adj=0,font=1,cex=1.25)
> 
> 	lines(Pe,paf.diar.age0to4,lty=1,lwd=2,col=cols[1])
> 	lines(Pe,paf.diar.age5to10,lty=1,lwd=2,col=cols[2])
> 	lines(Pe,paf.diar.age11plus,lty=1,lwd=2,col=cols[3])
> 	
> 	points(pe[2],paf.diar.age0to4e,pch=21,bg="white",lwd=2,cex=1.4,col=cols[1])
> 	points(pe[3],paf.diar.age5to10e,pch=21,bg="white",lwd=2,cex=1.4,col=cols[2])
> 	points(pe[4],paf.diar.age11pluse,pch=21,bg="white",lwd=2,cex=1.4,col=cols[3])
> 	
> 	text(1,0.35,"Ages 0 - 4",adj=1,col=cols[1])
> 	text(1,0.52,"Ages 5 - 10",adj=1,col=cols[2])
> 	text(1,0.275,"Ages >10",adj=1,col=cols[3])
> 	
> 	segments(x0=pe[3]-0.03,x1=pe[3]-0.07,y0=paf.diar.age5to10e,col="gray60")
> 	text(pe[3]-0.07,paf.diar.age5to10e,"Circles mark observed exposure and PAF estimates",col="gray40",cex=0.8,pos=2)
> 
> 
> par(op)
> dev.off()
null device 
          1 
> 
> 
> # --------------------------------------
> # load the Entero 1600 regression output
> # --------------------------------------
> 
> load("~/dropbox/13beaches/aim1-results/rawoutput/aim1-entero1600-35cfu-regs-body.Rdata")
> 
> 
> # --------------------------------------
> # Calculate the PAF across a range of
> # exposures for different subgroups
> # --------------------------------------
> Pe <- seq(0,1,by=0.01)
> 
> paf.age0to4   <- sapply(Pe,PAFcalc,RR=cir.age0to4[3,1])
> paf.age5to10  <- sapply(Pe,PAFcalc,RR=cir.age5to10[3,1])
> paf.age11plus <- sapply(Pe,PAFcalc,RR=cir.age11plus[3,1])
> 
> paf.ps  <- sapply(Pe,PAFcalc,RR=cir.all[2,1])
> paf.nps <- sapply(Pe,PAFcalc,RR=cir.all[1,1])
> 
> # print model estimates
> cbind(Pe,paf.age0to4,paf.age5to10,paf.age11plus)
         Pe paf.age0to4 paf.age5to10 paf.age11plus
  [1,] 0.00 0.000000000  0.000000000   0.000000000
  [2,] 0.01 0.004742925  0.002598813   0.001379058
  [3,] 0.02 0.009441072  0.005184152   0.002754317
  [4,] 0.03 0.014095071  0.007756124   0.004125794
  [5,] 0.04 0.018705543  0.010314831   0.005493504
  [6,] 0.05 0.023273095  0.012860376   0.006857462
  [7,] 0.06 0.027798323  0.015392859   0.008217684
  [8,] 0.07 0.032281814  0.017912382   0.009574185
  [9,] 0.08 0.036724141  0.020419043   0.010926980
 [10,] 0.09 0.041125870  0.022912941   0.012276085
 [11,] 0.10 0.045487554  0.025394173   0.013621515
 [12,] 0.11 0.049809737  0.027862835   0.014963284
 [13,] 0.12 0.054092953  0.030319022   0.016301407
 [14,] 0.13 0.058337728  0.032762829   0.017635901
 [15,] 0.14 0.062544575  0.035194349   0.018966778
 [16,] 0.15 0.066714002  0.037613675   0.020294054
 [17,] 0.16 0.070846505  0.040020898   0.021617743
 [18,] 0.17 0.074942573  0.042416109   0.022937861
 [19,] 0.18 0.079002686  0.044799396   0.024254421
 [20,] 0.19 0.083027314  0.047170850   0.025567437
 [21,] 0.20 0.087016921  0.049530558   0.026876925
 [22,] 0.21 0.090971962  0.051878607   0.028182897
 [23,] 0.22 0.094892884  0.054215084   0.029485369
 [24,] 0.23 0.098780127  0.056540073   0.030784355
 [25,] 0.24 0.102634124  0.058853659   0.032079868
 [26,] 0.25 0.106455298  0.061155926   0.033371922
 [27,] 0.26 0.110244067  0.063446957   0.034660531
 [28,] 0.27 0.114000842  0.065726833   0.035945710
 [29,] 0.28 0.117726026  0.067995637   0.037227470
 [30,] 0.29 0.121420017  0.070253448   0.038505827
 [31,] 0.30 0.125083203  0.072500346   0.039780794
 [32,] 0.31 0.128715970  0.074736410   0.041052384
 [33,] 0.32 0.132318694  0.076961719   0.042320611
 [34,] 0.33 0.135891746  0.079176349   0.043585487
 [35,] 0.34 0.139435492  0.081380378   0.044847027
 [36,] 0.35 0.142950291  0.083573881   0.046105243
 [37,] 0.36 0.146436495  0.085756934   0.047360148
 [38,] 0.37 0.149894453  0.087929610   0.048611756
 [39,] 0.38 0.153324506  0.090091985   0.049860080
 [40,] 0.39 0.156726990  0.092244130   0.051105132
 [41,] 0.40 0.160102238  0.094386119   0.052346925
 [42,] 0.41 0.163450574  0.096518023   0.053585472
 [43,] 0.42 0.166772318  0.098639913   0.054820786
 [44,] 0.43 0.170067788  0.100751860   0.056052879
 [45,] 0.44 0.173337293  0.102853933   0.057281765
 [46,] 0.45 0.176581138  0.104946201   0.058507455
 [47,] 0.46 0.179799625  0.107028733   0.059729962
 [48,] 0.47 0.182993050  0.109101597   0.060949298
 [49,] 0.48 0.186161704  0.111164859   0.062165475
 [50,] 0.49 0.189305875  0.113218587   0.063378507
 [51,] 0.50 0.192425845  0.115262846   0.064588405
 [52,] 0.51 0.195521893  0.117297701   0.065795181
 [53,] 0.52 0.198594292  0.119323218   0.066998847
 [54,] 0.53 0.201643313  0.121339461   0.068199416
 [55,] 0.54 0.204669221  0.123346492   0.069396899
 [56,] 0.55 0.207672278  0.125344376   0.070591307
 [57,] 0.56 0.210652743  0.127333173   0.071782654
 [58,] 0.57 0.213610868  0.129312947   0.072970951
 [59,] 0.58 0.216546905  0.131283759   0.074156209
 [60,] 0.59 0.219461099  0.133245669   0.075338440
 [61,] 0.60 0.222353694  0.135198737   0.076517655
 [62,] 0.61 0.225224929  0.137143023   0.077693867
 [63,] 0.62 0.228075040  0.139078586   0.078867086
 [64,] 0.63 0.230904258  0.141005486   0.080037325
 [65,] 0.64 0.233712814  0.142923778   0.081204593
 [66,] 0.65 0.236500931  0.144833522   0.082368904
 [67,] 0.66 0.239268833  0.146734775   0.083530267
 [68,] 0.67 0.242016739  0.148627592   0.084688694
 [69,] 0.68 0.244744864  0.150512030   0.085844196
 [70,] 0.69 0.247453421  0.152388145   0.086996785
 [71,] 0.70 0.250142621  0.154255990   0.088146471
 [72,] 0.71 0.252812669  0.156115622   0.089293265
 [73,] 0.72 0.255463771  0.157967094   0.090437178
 [74,] 0.73 0.258096126  0.159810459   0.091578221
 [75,] 0.74 0.260709933  0.161645771   0.092716405
 [76,] 0.75 0.263305387  0.163473083   0.093851740
 [77,] 0.76 0.265882681  0.165292445   0.094984238
 [78,] 0.77 0.268442004  0.167103912   0.096113908
 [79,] 0.78 0.270983545  0.168907532   0.097240761
 [80,] 0.79 0.273507488  0.170703359   0.098364809
 [81,] 0.80 0.276014014  0.172491441   0.099486060
 [82,] 0.81 0.278503304  0.174271829   0.100604527
 [83,] 0.82 0.280975535  0.176044572   0.101720218
 [84,] 0.83 0.283430881  0.177809720   0.102833145
 [85,] 0.84 0.285869515  0.179567322   0.103943318
 [86,] 0.85 0.288291607  0.181317424   0.105050746
 [87,] 0.86 0.290697325  0.183060077   0.106155441
 [88,] 0.87 0.293086834  0.184795326   0.107257412
 [89,] 0.88 0.295460297  0.186523219   0.108356669
 [90,] 0.89 0.297817876  0.188243803   0.109453222
 [91,] 0.90 0.300159729  0.189957124   0.110547081
 [92,] 0.91 0.302486014  0.191663227   0.111638257
 [93,] 0.92 0.304796884  0.193362159   0.112726758
 [94,] 0.93 0.307092494  0.195053965   0.113812596
 [95,] 0.94 0.309372992  0.196738689   0.114895778
 [96,] 0.95 0.311638529  0.198416375   0.115976317
 [97,] 0.96 0.313889250  0.200087068   0.117054220
 [98,] 0.97 0.316125302  0.201750811   0.118129497
 [99,] 0.98 0.318346826  0.203407647   0.119202159
[100,] 0.99 0.320553963  0.205057620   0.120272215
[101,] 1.00 0.322746854  0.206700773   0.121339674
> 
> # print model estimates
> cbind(Pe,paf.ps,paf.nps)
         Pe      paf.ps      paf.nps
  [1,] 0.00 0.000000000  0.000000000
  [2,] 0.01 0.002612930 -0.000547968
  [3,] 0.02 0.005212241 -0.001096537
  [4,] 0.03 0.007798039 -0.001645708
  [5,] 0.04 0.010370428 -0.002195481
  [6,] 0.05 0.012929514 -0.002745859
  [7,] 0.06 0.015475399 -0.003296841
  [8,] 0.07 0.018008185 -0.003848429
  [9,] 0.08 0.020527973 -0.004400624
 [10,] 0.09 0.023034862 -0.004953426
 [11,] 0.10 0.025528952 -0.005506838
 [12,] 0.11 0.028010339 -0.006060859
 [13,] 0.12 0.030479122 -0.006615492
 [14,] 0.13 0.032935395 -0.007170736
 [15,] 0.14 0.035379254 -0.007726593
 [16,] 0.15 0.037810793 -0.008283064
 [17,] 0.16 0.040230103 -0.008840150
 [18,] 0.17 0.042637278 -0.009397851
 [19,] 0.18 0.045032409 -0.009956170
 [20,] 0.19 0.047415585 -0.010515107
 [21,] 0.20 0.049786896 -0.011074662
 [22,] 0.21 0.052146431 -0.011634838
 [23,] 0.22 0.054494276 -0.012195635
 [24,] 0.23 0.056830518 -0.012757054
 [25,] 0.24 0.059155244 -0.013319096
 [26,] 0.25 0.061468538 -0.013881762
 [27,] 0.26 0.063770485 -0.014445053
 [28,] 0.27 0.066061167 -0.015008971
 [29,] 0.28 0.068340667 -0.015573516
 [30,] 0.29 0.070609067 -0.016138689
 [31,] 0.30 0.072866447 -0.016704492
 [32,] 0.31 0.075112888 -0.017270925
 [33,] 0.32 0.077348470 -0.017837990
 [34,] 0.33 0.079573270 -0.018405687
 [35,] 0.34 0.081787366 -0.018974018
 [36,] 0.35 0.083990836 -0.019542983
 [37,] 0.36 0.086183756 -0.020112584
 [38,] 0.37 0.088366201 -0.020682822
 [39,] 0.38 0.090538246 -0.021253698
 [40,] 0.39 0.092699966 -0.021825213
 [41,] 0.40 0.094851434 -0.022397368
 [42,] 0.41 0.096992722 -0.022970164
 [43,] 0.42 0.099123903 -0.023543602
 [44,] 0.43 0.101245049 -0.024117684
 [45,] 0.44 0.103356229 -0.024692409
 [46,] 0.45 0.105457514 -0.025267781
 [47,] 0.46 0.107548973 -0.025843798
 [48,] 0.47 0.109630675 -0.026420464
 [49,] 0.48 0.111702689 -0.026997778
 [50,] 0.49 0.113765081 -0.027575741
 [51,] 0.50 0.115817919 -0.028154356
 [52,] 0.51 0.117861268 -0.028733623
 [53,] 0.52 0.119895195 -0.029313542
 [54,] 0.53 0.121919764 -0.029894116
 [55,] 0.54 0.123935040 -0.030475346
 [56,] 0.55 0.125941087 -0.031057231
 [57,] 0.56 0.127937968 -0.031639774
 [58,] 0.57 0.129925745 -0.032222976
 [59,] 0.58 0.131904481 -0.032806838
 [60,] 0.59 0.133874237 -0.033391360
 [61,] 0.60 0.135835075 -0.033976545
 [62,] 0.61 0.137787054 -0.034562392
 [63,] 0.62 0.139730235 -0.035148904
 [64,] 0.63 0.141664677 -0.035736081
 [65,] 0.64 0.143590439 -0.036323925
 [66,] 0.65 0.145507579 -0.036912437
 [67,] 0.66 0.147416154 -0.037501617
 [68,] 0.67 0.149316223 -0.038091467
 [69,] 0.68 0.151207841 -0.038681988
 [70,] 0.69 0.153091066 -0.039273181
 [71,] 0.70 0.154965952 -0.039865048
 [72,] 0.71 0.156832556 -0.040457590
 [73,] 0.72 0.158690931 -0.041050807
 [74,] 0.73 0.160541133 -0.041644700
 [75,] 0.74 0.162383214 -0.042239272
 [76,] 0.75 0.164217229 -0.042834523
 [77,] 0.76 0.166043230 -0.043430454
 [78,] 0.77 0.167861269 -0.044027067
 [79,] 0.78 0.169671399 -0.044624363
 [80,] 0.79 0.171473672 -0.045222342
 [81,] 0.80 0.173268137 -0.045821006
 [82,] 0.81 0.175054846 -0.046420356
 [83,] 0.82 0.176833848 -0.047020394
 [84,] 0.83 0.178605195 -0.047621121
 [85,] 0.84 0.180368934 -0.048222537
 [86,] 0.85 0.182125115 -0.048824644
 [87,] 0.86 0.183873787 -0.049427443
 [88,] 0.87 0.185614997 -0.050030935
 [89,] 0.88 0.187348793 -0.050635122
 [90,] 0.89 0.189075222 -0.051240004
 [91,] 0.90 0.190794332 -0.051845584
 [92,] 0.91 0.192506168 -0.052451862
 [93,] 0.92 0.194210776 -0.053058838
 [94,] 0.93 0.195908203 -0.053666516
 [95,] 0.94 0.197598494 -0.054274895
 [96,] 0.95 0.199281693 -0.054883977
 [97,] 0.96 0.200957846 -0.055493763
 [98,] 0.97 0.202626995 -0.056104255
 [99,] 0.98 0.204289186 -0.056715453
[100,] 0.99 0.205944461 -0.057327359
[101,] 1.00 0.207592864 -0.057939975
> 
> # --------------------------------------
> # Grab the empirical exposure levels to
> # get actual PAFs to plot points
> # --------------------------------------
> pe.0to4   <- N.age0to4[2,2]/(sum(N.age0to4[,2]))
> pe.5to10  <- N.age5to10[2,2]/(sum(N.age5to10[,2]))
> pe.11plus <- N.age11plus[2,2]/(sum(N.age11plus[,2]))
> pe.ps     <- N.ps[2,2]/(sum(N.ps[,2]))
> pe.nps    <- N.nps[2,2]/(sum(N.nps[,2]))
> 
> paf.age0to4e   <- PAFcalc(Pe=pe.0to4,RR=cir.age0to4[3,1])
> paf.age5to10e  <- PAFcalc(Pe=pe.5to10,RR=cir.age5to10[3,1])
> paf.age11pluse <- PAFcalc(Pe=pe.11plus,RR=cir.age11plus[3,1])
> paf.pse <- PAFcalc(Pe=pe.ps,RR=cir.all[2,1])
> paf.npse <- PAFcalc(Pe=pe.nps,RR=cir.all[1,1])
> 
> # --------------------------------------
> # Plot the curves and points
> # --------------------------------------
> 
> pdf("~/dropbox/13beaches/aim2-results/figs/aim2-PAF-entero1600-diarrhea.pdf",width=11,height=5)
> lo <- layout(mat=matrix(1:2,nrow=1,ncol=2))
> op <- par(mar=c(4,4,4,2)+0.1)
> ytics <- seq(0,0.25,by=0.05)
> cols <- brewer.pal(5,"Dark2")
> 
> plot(Pe,paf.age0to4,type="n",
+ 	bty="n",
+ 	xaxt="n",xlab="",xlim=c(0,1),
+ 	yaxt="n",ylab="",ylim=range(ytics),
+ 	las=1
+ 	)
> 	axis(1,at=seq(0,1,by=0.1),labels=seq(0,100,by=10))
> 	axis(2,at=ytics,labels=sprintf("%1.0f",ytics*100),las=1)
> 	mtext("Proportion of Swimmers Exposed >35 CFU/100ml (%)",side=1,line=3)	
> 	mtext("Diarrhea Episodes by Age Group",side=3,line=1,at=-0.14,adj=0)
> 	mtext("Population Attributable Fraction (%)",side=3,line=0,at=-0.14,adj=0)
> 	mtext("A)",side=3,line=2,at=-0.14,adj=0,font=1,cex=1.25)
> 	
> 
> 	lines(Pe,paf.age0to4,lty=1,lwd=2,col=cols[1])
> 	lines(Pe,paf.age5to10,lty=1,lwd=2,col=cols[2])
> 	lines(Pe,paf.age11plus,lty=1,lwd=2,col=cols[3])
> 	
> 	points(pe.0to4,paf.age0to4e,pch=21,bg="white",lwd=2,cex=1.4,col=cols[1])
> 	points(pe.5to10,paf.age5to10e,pch=21,bg="white",lwd=2,cex=1.4,col=cols[2])
> 	points(pe.11plus,paf.age11pluse,pch=21,bg="white",lwd=2,cex=1.4,col=cols[3])
> 	
> 	text(1,0.255,"Ages 0 - 4",adj=1,srt=18,col=cols[1])
> 	text(1,0.215,"Ages 5 - 10",adj=1,srt=18,col=cols[2])
> 	text(1,0.16,"Ages >10",adj=1,srt=18,col=cols[3])
> 	
> 	segments(x0=pe.0to4,y0=paf.age0to4e+0.01,y1=paf.age0to4e+0.1,col="gray60")
> 	text(pe.0to4,paf.age0to4e+0.1,"Circles mark\n observed exposure\n and PAF estimates",col="gray40",cex=0.8,pos=3)
> 
> plot(Pe,paf.ps,type="n",
+ 	bty="n",
+ 	xaxt="n",xlab="",xlim=c(0,1),
+ 	yaxt="n",ylab="",ylim=range(ytics),
+ 	las=1
+ 	)
> 	axis(1,at=seq(0,1,by=0.1),labels=seq(0,100,by=10))
> 	axis(2,at=ytics,labels=sprintf("%1.0f",ytics*100),las=1)
> 	mtext("Proportion of Swimmers Exposed >35 CFU/100ml (%)",side=1,line=3)
> 	mtext("Diarrhea Episodes by Pollution Type",side=3,line=1,at=-0.14,adj=0)
> 	mtext("Population Attributable Fraction (%)",side=3,line=0,at=-0.14,adj=0)
> 	mtext("B)",side=3,line=2,at=-0.14,adj=0,font=1,cex=1.25)
> 	
> 	lines(Pe,paf.ps,lty=1,lwd=2,col=cols[4])
> 	lines(Pe,paf.nps,lty=1,lwd=2,col=cols[5])
> 	
> 	points(pe.ps, paf.pse,pch=21,bg="white",lwd=2,cex=1.4,col=cols[4])
> 	points(pe.nps,paf.npse,pch=21,bg="white",lwd=2,cex=1.4,col=cols[5])
> 
> 	text(1,0.22,"Point Source",adj=1,srt=0,col=cols[4])
> 	text(1,0.05,"Non-Point Source",adj=1,srt=0,col=cols[5])
> 
> par(op)
> dev.off()
null device 
          1 
> 
> 
> 
> # --------------------------------------
> # load the Entero 1600 regression output
> # with non-swimmers as the reference
> # category
> #
> # The PAF calculations are slightly
> # more complicated because of the 
> # 3-level, categorical exposure
> # --------------------------------------
> 
> # load the diarrhea CIR estimates to generate the curves
> load("~/dropbox/13beaches/aim1-results/rawoutput/aim1-entero1600-noswim35cfu-regs-body.Rdata")
> 
> # load the full analysis dataset to calculate the baseline
> # risk of diarrhea and GI illness among non-swimmers
> ad <- preprocess.13beaches("~/dropbox/13beaches/data/final/13beaches-analysis.csv")

Successfully loaded the data
 Total sample size = 88083 

Dropping individuals with GI illness at enrollment
 N = 2025 

Final sample size = 86058 

Subsetting the data to relevant variables and completing final variable pre-processing> 	table(ad$swim35)

Non-swimmers   Below35cfu   Above35cfu 
       26756        50480         8213 
> 	table(is.na(ad$swim35))

FALSE  TRUE 
85449   609 
> ad <- subset(ad,is.na(ad$swim35)==FALSE)
> 	dim(ad)
[1] 85449    50
> 
> # grab the overall prevalence
> pobs.diar <- tapply(ad$diarrheaci10,ad$agestrat,mean)
> pobs.gi   <- tapply(ad$gici10,ad$agestrat,mean)
> 
> # grab the prevalence in nonswimmers by age category
> p0.diar <- tapply(ad$diarrheaci10[ad$anycontact=="No"],ad$agestrat[ad$anycontact=="No"],mean)
> p0.gi   <- tapply(ad$gici10[ad$anycontact=="No"],ad$agestrat[ad$anycontact=="No"],mean)
> 
> # Grab empirical exposure %s to plot them
> pe.tab <- table(ad$swim35,ad$agestrat)
> pe35plus <- pe.tab[3,]/colSums(pe.tab)
> 
> # --------------------------------------
> # Calculate the PAF across a range of
> # exposures for different subgroups
> # --------------------------------------
> Pe <- seq(0,0.5,by=0.01)
> RR.diar.0to4   <- exp(age0to4$fit[3,1])
> RR.diar.5to10  <- exp(age5to10$fit[3,1])
> RR.diar.11plus <- exp(age11plus$fit[3,1])
> 
> paf.age0to4    <- sapply(Pe,PAFcalc2,p0=p0.diar[3],pobs=pobs.diar[3],RR=RR.diar.0to4)
> paf.age5to10   <- sapply(Pe,PAFcalc2,p0=p0.diar[2],pobs=pobs.diar[2],RR=RR.diar.5to10)
> paf.age11plus  <- sapply(Pe,PAFcalc2,p0=p0.diar[1],pobs=pobs.diar[1],RR=RR.diar.11plus)
> 
> # print model estimates
> cbind(Pe,paf.age0to4,paf.age5to10,paf.age11plus)
         Pe paf.age0to4 paf.age5to10 paf.age11plus
(0, 4] 0.00 0.000000000  0.000000000   0.000000000
(0, 4] 0.01 0.007349382  0.007741932   0.004422995
(0, 4] 0.02 0.014698764  0.015483863   0.008845989
(0, 4] 0.03 0.022048147  0.023225795   0.013268984
(0, 4] 0.04 0.029397529  0.030967726   0.017691978
(0, 4] 0.05 0.036746911  0.038709658   0.022114973
(0, 4] 0.06 0.044096293  0.046451589   0.026537967
(0, 4] 0.07 0.051445675  0.054193521   0.030960962
(0, 4] 0.08 0.058795058  0.061935452   0.035383956
(0, 4] 0.09 0.066144440  0.069677384   0.039806951
(0, 4] 0.10 0.073493822  0.077419315   0.044229945
(0, 4] 0.11 0.080843204  0.085161247   0.048652940
(0, 4] 0.12 0.088192587  0.092903178   0.053075935
(0, 4] 0.13 0.095541969  0.100645110   0.057498929
(0, 4] 0.14 0.102891351  0.108387042   0.061921924
(0, 4] 0.15 0.110240733  0.116128973   0.066344918
(0, 4] 0.16 0.117590115  0.123870905   0.070767913
(0, 4] 0.17 0.124939498  0.131612836   0.075190907
(0, 4] 0.18 0.132288880  0.139354768   0.079613902
(0, 4] 0.19 0.139638262  0.147096699   0.084036896
(0, 4] 0.20 0.146987644  0.154838631   0.088459891
(0, 4] 0.21 0.154337026  0.162580562   0.092882885
(0, 4] 0.22 0.161686409  0.170322494   0.097305880
(0, 4] 0.23 0.169035791  0.178064425   0.101728875
(0, 4] 0.24 0.176385173  0.185806357   0.106151869
(0, 4] 0.25 0.183734555  0.193548289   0.110574864
(0, 4] 0.26 0.191083938  0.201290220   0.114997858
(0, 4] 0.27 0.198433320  0.209032152   0.119420853
(0, 4] 0.28 0.205782702  0.216774083   0.123843847
(0, 4] 0.29 0.213132084  0.224516015   0.128266842
(0, 4] 0.30 0.220481466  0.232257946   0.132689836
(0, 4] 0.31 0.227830849  0.239999878   0.137112831
(0, 4] 0.32 0.235180231  0.247741809   0.141535825
(0, 4] 0.33 0.242529613  0.255483741   0.145958820
(0, 4] 0.34 0.249878995  0.263225672   0.150381815
(0, 4] 0.35 0.257228377  0.270967604   0.154804809
(0, 4] 0.36 0.264577760  0.278709535   0.159227804
(0, 4] 0.37 0.271927142  0.286451467   0.163650798
(0, 4] 0.38 0.279276524  0.294193399   0.168073793
(0, 4] 0.39 0.286625906  0.301935330   0.172496787
(0, 4] 0.40 0.293975288  0.309677262   0.176919782
(0, 4] 0.41 0.301324671  0.317419193   0.181342776
(0, 4] 0.42 0.308674053  0.325161125   0.185765771
(0, 4] 0.43 0.316023435  0.332903056   0.190188765
(0, 4] 0.44 0.323372817  0.340644988   0.194611760
(0, 4] 0.45 0.330722200  0.348386919   0.199034755
(0, 4] 0.46 0.338071582  0.356128851   0.203457749
(0, 4] 0.47 0.345420964  0.363870782   0.207880744
(0, 4] 0.48 0.352770346  0.371612714   0.212303738
(0, 4] 0.49 0.360119728  0.379354646   0.216726733
(0, 4] 0.50 0.367469111  0.387096577   0.221149727
> 
> # --------------------------------------
> # Grab the empirical exposure levels to
> # get actual PAFs to plot points
> # --------------------------------------
> paf.age0to4e   <- PAFcalc2(Pe=pe35plus[3],p0=p0.diar[3],pobs=pobs.diar[3],RR=RR.diar.0to4)
> paf.age5to10e  <- PAFcalc2(Pe=pe35plus[2],p0=p0.diar[2],pobs=pobs.diar[2],RR=RR.diar.5to10)
> paf.age11pluse <- PAFcalc2(Pe=pe35plus[1],p0=p0.diar[1],pobs=pobs.diar[1],RR=RR.diar.11plus)
> 
> 
> # --------------------------------------
> # load the GI illness CIR estimates to 
> # generate the GI curves
> # --------------------------------------
> load("~/dropbox/13beaches/aim1-results/rawoutput/aim1-entero1600-noswim35cfu-regs-body-GI-illness.Rdata")
> 
> # --------------------------------------
> # Calculate the PAF across a range of
> # exposures for different subgroups
> # --------------------------------------
> Pe <- seq(0,0.5,by=0.01)
> RR.gi.0to4   <- exp(age0to4$fit[3,1])
> RR.gi.5to10  <- exp(age5to10$fit[3,1])
> RR.gi.11plus <- exp(age11plus$fit[3,1])
> 
> paf.gi.age0to4    <- sapply(Pe,PAFcalc2,p0=p0.gi[3],pobs=pobs.gi[3],RR=RR.gi.0to4)
> paf.gi.age5to10   <- sapply(Pe,PAFcalc2,p0=p0.gi[2],pobs=pobs.gi[2],RR=RR.gi.5to10)
> paf.gi.age11plus  <- sapply(Pe,PAFcalc2,p0=p0.gi[1],pobs=pobs.gi[1],RR=RR.gi.11plus)
> 
> # print model estimates
> cbind(Pe,paf.gi.age0to4,paf.gi.age5to10,paf.gi.age11plus)
         Pe paf.gi.age0to4 paf.gi.age5to10 paf.gi.age11plus
(0, 4] 0.00    0.000000000     0.000000000      0.000000000
(0, 4] 0.01    0.007052818     0.003530442      0.003424095
(0, 4] 0.02    0.014105636     0.007060883      0.006848189
(0, 4] 0.03    0.021158454     0.010591325      0.010272284
(0, 4] 0.04    0.028211273     0.014121767      0.013696378
(0, 4] 0.05    0.035264091     0.017652209      0.017120473
(0, 4] 0.06    0.042316909     0.021182650      0.020544568
(0, 4] 0.07    0.049369727     0.024713092      0.023968662
(0, 4] 0.08    0.056422545     0.028243534      0.027392757
(0, 4] 0.09    0.063475363     0.031773976      0.030816851
(0, 4] 0.10    0.070528181     0.035304417      0.034240946
(0, 4] 0.11    0.077580999     0.038834859      0.037665041
(0, 4] 0.12    0.084633818     0.042365301      0.041089135
(0, 4] 0.13    0.091686636     0.045895742      0.044513230
(0, 4] 0.14    0.098739454     0.049426184      0.047937324
(0, 4] 0.15    0.105792272     0.052956626      0.051361419
(0, 4] 0.16    0.112845090     0.056487068      0.054785513
(0, 4] 0.17    0.119897908     0.060017509      0.058209608
(0, 4] 0.18    0.126950726     0.063547951      0.061633703
(0, 4] 0.19    0.134003544     0.067078393      0.065057797
(0, 4] 0.20    0.141056363     0.070608835      0.068481892
(0, 4] 0.21    0.148109181     0.074139276      0.071905986
(0, 4] 0.22    0.155161999     0.077669718      0.075330081
(0, 4] 0.23    0.162214817     0.081200160      0.078754176
(0, 4] 0.24    0.169267635     0.084730602      0.082178270
(0, 4] 0.25    0.176320453     0.088261043      0.085602365
(0, 4] 0.26    0.183373271     0.091791485      0.089026459
(0, 4] 0.27    0.190426090     0.095321927      0.092450554
(0, 4] 0.28    0.197478908     0.098852368      0.095874649
(0, 4] 0.29    0.204531726     0.102382810      0.099298743
(0, 4] 0.30    0.211584544     0.105913252      0.102722838
(0, 4] 0.31    0.218637362     0.109443694      0.106146932
(0, 4] 0.32    0.225690180     0.112974135      0.109571027
(0, 4] 0.33    0.232742998     0.116504577      0.112995122
(0, 4] 0.34    0.239795816     0.120035019      0.116419216
(0, 4] 0.35    0.246848635     0.123565461      0.119843311
(0, 4] 0.36    0.253901453     0.127095902      0.123267405
(0, 4] 0.37    0.260954271     0.130626344      0.126691500
(0, 4] 0.38    0.268007089     0.134156786      0.130115594
(0, 4] 0.39    0.275059907     0.137687227      0.133539689
(0, 4] 0.40    0.282112725     0.141217669      0.136963784
(0, 4] 0.41    0.289165543     0.144748111      0.140387878
(0, 4] 0.42    0.296218361     0.148278553      0.143811973
(0, 4] 0.43    0.303271180     0.151808994      0.147236067
(0, 4] 0.44    0.310323998     0.155339436      0.150660162
(0, 4] 0.45    0.317376816     0.158869878      0.154084257
(0, 4] 0.46    0.324429634     0.162400320      0.157508351
(0, 4] 0.47    0.331482452     0.165930761      0.160932446
(0, 4] 0.48    0.338535270     0.169461203      0.164356540
(0, 4] 0.49    0.345588088     0.172991645      0.167780635
(0, 4] 0.50    0.352640907     0.176522086      0.171204730
> 
> # --------------------------------------
> # Grab the empirical exposure levels to
> # get actual PAFs to plot points
> # --------------------------------------
> paf.gi.age0to4e   <- PAFcalc2(Pe=pe35plus[3],p0=p0.gi[3],pobs=pobs.gi[3],RR=RR.gi.0to4)
> paf.gi.age5to10e  <- PAFcalc2(Pe=pe35plus[2],p0=p0.gi[2],pobs=pobs.gi[2],RR=RR.gi.5to10)
> paf.gi.age11pluse <- PAFcalc2(Pe=pe35plus[1],p0=p0.gi[1],pobs=pobs.gi[1],RR=RR.gi.11plus)
> 
> 
> 
> 
> pdf("~/dropbox/13beaches/aim2-results/figs/aim2-PAF-entero1600noswim.pdf",width=6,height=11)
> lo <- layout(mat=matrix(1:2,nrow=2,ncol=1))
> op <- par(mar=c(4,4,4,2)+0.1)
> ytics <- seq(0,0.4,by=0.1)
> cols <- brewer.pal(5,"Dark2")
> 
> # Diarrhea
> plot(Pe,paf.age0to4,type="n",
+ 	bty="n",
+ 	xaxt="n",xlab="",xlim=c(0,max(Pe)),
+ 	yaxt="n",ylab="",ylim=range(ytics),
+ 	las=1
+ 	)
> 	axis(1,at=seq(0,max(Pe),by=0.1),labels=seq(0,max(Pe)*100,by=10))
> 	axis(2,at=ytics,labels=sprintf("%1.0f",ytics*100),las=1)
> 	mtext("Proportion of Beachgoers Exposed >35 CFU/100ml (%)",side=1,line=3)	
> 	mtext("Diarrhea Episodes by Age",side=3,line=0,at=-0.06,adj=0)
> 	mtext("Population Attributable Fraction (%)",side=3,line=1,at=-0.06,adj=0)
> 	mtext("A)",side=3,line=2,at=-0.06,adj=0,font=1,cex=1.25)
> 	
> 
> 	lines(Pe,paf.age0to4,lty=1,lwd=2,col=cols[1])
> 	lines(Pe,paf.age5to10,lty=1,lwd=2,col=cols[2])
> 	lines(Pe,paf.age11plus,lty=1,lwd=2,col=cols[3])
> 	
> 	points(pe35plus[3],paf.age0to4e,pch=21,bg="white",lwd=2,cex=1.4,col=cols[1])
> 	points(pe35plus[2],paf.age5to10e,pch=21,bg="white",lwd=2,cex=1.4,col=cols[2])
> 	points(pe35plus[1],paf.age11pluse,pch=21,bg="white",lwd=2,cex=1.4,col=cols[3])
> 	
> 	text(max(Pe),max(paf.age0to4)+0.015,"Ages 0 - 4",adj=1,srt=20,col=cols[1])
> 	text(max(Pe),max(paf.age5to10)+0.02,"Ages 5 - 10",adj=1,srt=20,col=cols[2])
> 	text(max(Pe),max(paf.age11plus)+0.02,"Ages >10",adj=1,srt=20,col=cols[3])
> 	
> 	segments(x0=pe35plus[2],y0=paf.age5to10e+0.02,y1=paf.age5to10e+0.15,col="gray60")
> 	text(pe35plus[2],paf.age5to10e+0.15,"Circles mark\n observed exposure\n and PAF estimates",col="gray40",cex=0.8,pos=3)
> 
> # GI illness
> plot(Pe,paf.age0to4,type="n",
+ 	bty="n",
+ 	xaxt="n",xlab="",xlim=c(0,max(Pe)),
+ 	yaxt="n",ylab="",ylim=range(ytics),
+ 	las=1
+ 	)
> 	axis(1,at=seq(0,max(Pe),by=0.1),labels=seq(0,max(Pe)*100,by=10))
> 	axis(2,at=ytics,labels=sprintf("%1.0f",ytics*100),las=1)
> 	mtext("Proportion of Beachgoers Exposed >35 CFU/100ml (%)",side=1,line=3)	
> 	mtext("Gastrointestinal Illness Episodes by Age",side=3,line=0,at=-0.06,adj=0)
> 	mtext("Population Attributable Fraction (%)",side=3,line=1,at=-0.06,adj=0)
> 	mtext("B)",side=3,line=2,at=-0.06,adj=0,font=1,cex=1.25)
> 	
> 
> 	lines(Pe,paf.gi.age0to4,lty=1,lwd=2,col=cols[1])
> 	lines(Pe,paf.gi.age5to10,lty=1,lwd=2,col=cols[2])
> 	lines(Pe,paf.gi.age11plus,lty=1,lwd=2,col=cols[3])
> 	
> 	points(pe35plus[3],paf.gi.age0to4e,pch=21,bg="white",lwd=2,cex=1.4,col=cols[1])
> 	points(pe35plus[2],paf.gi.age5to10e,pch=21,bg="white",lwd=2,cex=1.4,col=cols[2])
> 	points(pe35plus[1],paf.gi.age11pluse,pch=21,bg="white",lwd=2,cex=1.4,col=cols[3])
> 	
> 	text(max(Pe),max(paf.gi.age0to4)+0.02,"Ages 0 - 4",adj=1,srt=15,col=cols[1])
> 	text(max(Pe),max(paf.gi.age5to10)+0.02,"Ages 5 - 10",adj=1,srt=15,col=cols[2])
> 	text(max(Pe),max(paf.gi.age11plus)-0.03,"Ages >10",adj=1,srt=15,col=cols[3])
> 
> 
> par(op)
> dev.off()
null device 
          1 
> 
> 
> 
> proc.time()
   user  system elapsed 
 53.897   3.372  58.429 
